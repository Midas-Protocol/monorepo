export enum SupportedChains {
  ethereum = 1,
  bsc = 56,
  chapel = 97,
  ganache = 1337,
  evmos = 9001,
  moonbeam = 1284,
  neon_devnet = 245022926,
  polygon = 137,
  arbitrum = 42161,
  fantom = 250,
  basegoerli = 84531,
}

export const SupportedChainsArray = Object.entries(SupportedChains)
  .map(([, value]) => value)
  .filter((value) => typeof value === "number");

export enum RedemptionStrategyContract {
  CurveLpTokenLiquidatorNoRegistry = "CurveLpTokenLiquidatorNoRegistry",
  XBombLiquidatorFunder = "XBombLiquidatorFunder",
  JarvisLiquidatorFunder = "JarvisLiquidatorFunder",
  UniswapLpTokenLiquidator = "UniswapLpTokenLiquidator",
  UniswapV2LiquidatorFunder = "UniswapV2LiquidatorFunder",
  GelatoGUniLiquidator = "GelatoGUniLiquidator",
  CurveSwapLiquidator = "CurveSwapLiquidator",
  SaddleLpTokenLiquidator = "SaddleLpTokenLiquidator",
  BalancerLpTokenLiquidator = "BalancerLpTokenLiquidator",
  BalancerSwapLiquidator = "BalancerSwapLiquidator",
  ERC4626Liquidator = "ERC4626Liquidator",
}

export enum FundingStrategyContract {
  JarvisLiquidatorFunder = "JarvisLiquidatorFunder",
  XBombLiquidatorFunder = "XBombLiquidatorFunder",
  UniswapV3LiquidatorFunder = "UniswapV3LiquidatorFunder",
  CurveSwapLiquidatorFunder = "CurveSwapLiquidatorFunder",
}

export enum DelegateContractName {
  CErc20Delegate = "CErc20Delegate",
  CErc20PluginDelegate = "CErc20PluginDelegate",
  CErc20PluginRewardsDelegate = "CErc20PluginRewardsDelegate",
}

export enum OracleTypes {
  ChainlinkPriceOracleV2 = "ChainlinkPriceOracleV2",
  CurveLpTokenPriceOracleNoRegistry = "CurveLpTokenPriceOracleNoRegistry",
  CurveV2LpTokenPriceOracleNoRegistry = "CurveV2LpTokenPriceOracleNoRegistry",
  DiaPriceOracle = "DiaPriceOracle",
  FixedNativePriceOracle = "FixedNativePriceOracle",
  FluxPriceOracle = "FluxPriceOracle",
  MasterPriceOracle = "MasterPriceOracle",
  SimplePriceOracle = "SimplePriceOracle",
  UniswapLpTokenPriceOracle = "UniswapLpTokenPriceOracle",
  UniswapTwapPriceOracleV2 = "UniswapTwapPriceOracleV2",
  UniswapV3PriceOracle = "UniswapV3PriceOracle",
  AlgebraPriceOracle = "AlgebraPriceOracle",
  AnkrCertificateTokenPriceOracle = "AnkrCertificateTokenPriceOracle",
  GelatoGUniPriceOracle = "GelatoGUniPriceOracle",
  DiaStDotPriceOracle = "DiaStDotPriceOracle",
  BalancerLpTokenPriceOracle = "BalancerLpTokenPriceOracle",
  BalancerLpStablePoolPriceOracle = "BalancerLpStablePoolPriceOracle",
  BalancerRateProviderOracle = "BalancerRateProviderOracle",
  BalancerLpLinearPoolPriceOracle = "BalancerLpLinearPoolPriceOracle",
  BalancerLpTokenPriceOracleNTokens = "BalancerLpTokenPriceOracleNTokens",
  StkBNBPriceOracle = "StkBNBPriceOracle",
  WombatLpTokenPriceOracle = "WombatLpTokenPriceOracle",
  AdrastiaPriceOracle = "AdrastiaPriceOracle",
  NativeUSDPriceOracle = "NativeUSDPriceOracle",
  SaddleLpPriceOracle = "SaddleLpPriceOracle",
  SolidlyLpTokenPriceOracle = "SolidlyLpTokenPriceOracle",
  WSTEthPriceOracle = "WSTEthPriceOracle",
  ERC4626Oracle = "ERC4626Oracle",
}

export enum IrmTypes {
  JumpRateModel = "JumpRateModel",
  WhitePaperInterestRateModel = "WhitePaperInterestRateModel",
  AnkrFTMInterestRateModel = "AnkrFTMInterestRateModel",
  AnkrBNBInterestRateModel = "AnkrBNBInterestRateModel",
  AdjustableJumpRateModel_PSTAKE_WBNB = "AdjustableJumpRateModel_PSTAKE_WBNB",
  AdjustableJumpRateModel_MIXBYTES_XCDOT = "AdjustableJumpRateModel_MIXBYTES_XCDOT",
  AdjustableJumpRateModel_TRANSFERO_BRZ = "AdjustableJumpRateModel_TRANSFERO_BRZ",
  AdjustableJumpRateModel_TRANSFERO_BTCB_ETH_MAI_WBNB = "AdjustableJumpRateModel_TRANSFERO_BTCB_ETH_MAI_WBNB",
  AdjustableJumpRateModel_STADER_WBNB = "AdjustableJumpRateModel_STADER_WBNB",
  AdjustableJumpRateModel_MIXBYTES_USDC = "AdjustableJumpRateModel_MIXBYTES_USDC",
  AdjustableJumpRateModel_JARVIS_jBRL = "AdjustableJumpRateModel_JARVIS_jBRL",
  AdjustableJumpRateModel_JARVIS_jEUR = "AdjustableJumpRateModel_JARVIS_jEUR",
}

export enum LiquidationStrategy {
  DEFAULT = "DEFAULT",
  UNISWAP = "UNISWAP",
}

export enum ComptrollerErrorCodes {
  NO_ERROR,
  UNAUTHORIZED,
  COMPTROLLER_MISMATCH,
  INSUFFICIENT_SHORTFALL,
  INSUFFICIENT_LIQUIDITY,
  INVALID_CLOSE_FACTOR,
  INVALID_COLLATERAL_FACTOR,
  INVALID_LIQUIDATION_INCENTIVE,
  MARKET_NOT_ENTERED, // no longer possible
  MARKET_NOT_LISTED,
  MARKET_ALREADY_LISTED,
  MATH_ERROR,
  NONZERO_BORROW_BALANCE,
  PRICE_ERROR,
  REJECTION,
  SNAPSHOT_ERROR,
  TOO_MANY_ASSETS,
  TOO_MUCH_REPAY,
  SUPPLIER_NOT_WHITELISTED,
  BORROW_BELOW_MIN,
  SUPPLY_ABOVE_MAX,
}

export enum CTokenErrorCodes {
  NO_ERROR,
  UNAUTHORIZED,
  BAD_INPUT,
  COMPTROLLER_REJECTION,
  COMPTROLLER_CALCULATION_ERROR,
  INTEREST_RATE_MODEL_ERROR,
  INVALID_ACCOUNT_PAIR,
  INVALID_CLOSE_AMOUNT_REQUESTED,
  INVALID_COLLATERAL_FACTOR,
  MATH_ERROR,
  MARKET_NOT_FRESH,
  MARKET_NOT_LISTED,
  TOKEN_INSUFFICIENT_ALLOWANCE,
  TOKEN_INSUFFICIENT_BALANCE,
  TOKEN_INSUFFICIENT_CASH,
  TOKEN_TRANSFER_IN_FAILED,
  TOKEN_TRANSFER_OUT_FAILED,
  UTILIZATION_ABOVE_MAX,
}

export enum FundOperationMode {
  SUPPLY,
  WITHDRAW,
  BORROW,
  REPAY,
}

export enum assetSymbols {
  // agnostic
  WETH = "WETH",
  DAI = "DAI",
  ETH = "ETH",
  AUTO = "AUTO",
  BIFI = "BIFI",
  USDC = "USDC",
  USDT = "USDT",
  UST = "UST",
  TUSD = "TUSD",
  FRAX = "FRAX",
  FTM = "FTM",
  WBTC = "WBTC",
  BAL = "BAL",
  BTC = "BTC",
  LINK = "LINK",
  AAVE = "AAVE",
  ALCX = "ALCX",
  AVAX = "AVAX",
  AXS = "AXS",
  CRV = "CRV",
  CVX = "CVX",
  FXS = "FXS",
  GHST = "GHST",
  GRT = "GRT",
  MAI = "MAI",
  MIM = "MIM",
  MKR = "MKR",
  RAI = "RAI",
  SNX = "SNX",
  SOL = "SOL",
  SUSHI = "SUSHI",
  YFI = "YFI",

  // bsc
  WBNB = "WBNB",
  BNB = "BNB",
  BUSD = "BUSD",
  BTCB = "BTCB",
  BETH = "BETH",
  CAKE = "CAKE",
  ALPACA = "ALPACA",
  "3EPS" = "3EPS",
  mai3EPS = "mai3EPS",
  val3EPS = "val3EPS",
  valdai3EPS = "valdai3EPS",
  "2brl" = "2brl",
  "3brl" = "3brl",
  jBRL = "jBRL",
  BRZ = "BRZ",
  BRZw = "BRZw",
  BOMB = "BOMB",
  xBOMB = "xBOMB",
  ankrBNB = "ankrBNB",
  stkBNB = "stkBNB",
  SAFEMOON = "SAFEMOON",
  HAY = "HAY",
  "WBNB-DAI" = "WBNB-DAI",
  "WBNB-BUSD" = "WBNB-BUSD",
  "WBNB-USDT" = "WBNB-USDT",
  "WBNB-USDC" = "WBNB-USDC",
  "WBNB-ETH" = "WBNB-ETH",

  "BUSD-USDT" = "BUSD-USDT",
  "BUSD-BTCB" = "BUSD-BTCB",
  "USDC-BUSD" = "USDC-BUSD",
  "USDC-ETH" = "USDC-ETH",

  "BTCB-BOMB" = "BTCB-BOMB",
  "BTCB-ETH" = "BTCB-ETH",

  "CAKE-WBNB" = "CAKE-WBNB",
  "ANKR-ankrBNB" = "ANKR-ankrBNB",

  "stkBNB-WBNB" = "stkBNB-WBNB",
  BNBx = "BNBx",
  "epsBNBx-BNB" = "epsBNBx-BNB",
  "asBNBx-WBNB" = "ApeSwap BNBx-WBNB LP",
  "asANKR-ankrBNB" = "ApeSwap ANKR-ankrBNB LP",

  DDD = "DDD",
  EPX = "EPX",
  pSTAKE = "pSTAKE",
  ANKR = "ANKR",
  SD = "SD", // stader labs

  // thena
  "sAMM-jBRL/BRZ" = "sAMM-jBRL-BRZ",
  "sAMM-HAY/BUSD" = "sAMM-HAY-BUSD",
  "vAMM-ANKR/ankrBNB" = "vAMM-ANKR-ankrBNB",
  "vAMM-ANKR/HAY" = "vAMM-ANKR-HAY",
  "vAMM-HAY/ankrBNB" = "vAMM-HAY-ankrBNB",
  "WOMBATLP-WBNB" = "WOMBATLP-WBNB",

  // evmos
  kinesisUSDC = "kinesisUSDC",
  kinesisUSDT = "kinesisUSDT",
  saddleOptFraxUSD = "saddleOptFraxUSD",
  saddleOptUSD = "saddleOptUSD",
  WEVMOS = "WEVMOS",
  ATOM = "ATOM",
  OSMO = "OSMO",
  JUNO = "JUNO",
  // USD X
  gUSDC = "gUSDC",
  axlUSDC = "axlUSDC",
  ceUSDC = "ceUSDC",
  gUSDT = "gUSDT",
  axlUSDT = "axlUSDT",
  ceUSDT = "ceUSDT",
  gDAI = "gDAI",
  // WETH / BTC
  ceWETH = "ceWETH",
  axlWETH = "axlWETH",
  gWBTC = "gWBTC",
  gWETH = "gWETH",
  axlWBTC = "axlWBTC",

  DIFF = "DIFF",
  GRAV = "GRAV",
  "WEVMOS-JUNO" = "WEVMOS-JUNO",
  "WEVMOS-gUSDC" = "WEVMOS-gUSDC",
  "WEVMOS-ceUSDC" = "WEVMOS-ceUSDC",
  "WEVMOS-gWETH" = "WEVMOS-gWETH",
  "ceUSDC-ceUSDT" = "ceUSDC-ceUSDT",

  // moonbeam
  GLMR = "GLMR",
  WGLMR = "WGLMR",
  GLINT = "GLINT",
  // Stella
  "USDC.wh-GLMR" = "USDC.wh-GLMR",
  "DOT.xc-GLMR" = "DOT.xc-GLMR",
  "WETH.wh-GLMR" = "WETH.wh-GLMR",
  "WBTC.wh-GLMR" = "WBTC.wh-GLMR",
  "STELLA-GLMR" = "STELLA-GLMR",
  "CELR-GLMR" = "CELR-GLMR",
  "ATOM-GLMR" = "ATOM-GLMR",
  STELLA = "STELLA",
  CELR = "CELR",
  LDO = "LDO",
  "LDO-GLMR" = "LDO-GLMR",
  "wstDOT-DOT.xc" = "wstDOT-DOT.xc",
  "base4pool" = "base4pool",

  // BeamSwap
  "GLMR-USDC" = "GLMR-USDC",
  "GLMR-GLINT" = "GLMR-GLINT",
  "WGLMR-xcDOT" = "WGLMR-xcDOT",

  DOT = "DOT",
  xcDOT = "xcDOT",
  stDOT = "stDOT",
  wstDOT = "wstDOT",
  xcKSM = "xcKSM",
  stKSM = "stKSM",
  multiWBTC = "multiWBTC",
  WBTC_wh = "WBTC.wh",
  WETH_wh = "WETH.wh",
  multiUSDC = "multiUSDC",
  USDC_wh = "USDC.wh",
  multiUSDT = "multiUSDT",
  multiDAI = "multiDAI",
  USDT_xc = "USDT.xc",
  BUSD_wh = "BUSD.wh",
  "3pool" = "3pool",
  "xcDOT-stDOT" = "xcDOT-stDOT",

  // local
  TOUCH = "TOUCH",
  TRIBE = "TRIBE",

  // neon
  WNEON = "WNEON",
  MORA = "MORA",

  // polygon
  WMATIC = "WMATIC",
  oBNB = "oBNB",
  "WMATIC-USDC" = "WMATIC-USDC",
  "WMATIC-ETH" = "WMATIC-ETH",
  "WMATIC-USDT" = "WMATIC-USDT",
  "WMATIC-MATICx" = "WMATIC-MATICx",
  "WETH-WBTC" = "WETH-WBTC",
  "AGEUR-JEUR" = "agEUR-jEUR",
  "JEUR-PAR" = "jEUR-PAR",
  "JEUR-EURT" = "jEUR-EURT",
  "JJPY-JPYC" = "jJPY-JPYC",
  "JCAD-CADC" = "jCAD-CADC",
  "JSGD-XSGD" = "jSGD-XSGD",
  "JNZD-NZDS" = "jNZD-NZDS",
  "EURE-JEUR" = "EURE-jEUR",
  "JCHF-BUSD" = "jCHF-BUSD",
  "MAI-USDC" = "MAI-USDC",
  am3CRV = "am3CRV",
  AGEUR = "agEUR",
  EURT = "EURT",
  EURE = "EURE",
  CADC = "CADC",
  JSGD = "jSGD",
  JJPY = "jJPY",
  JAUD = "jAUD",
  JCAD = "jCAD",
  JNZD = "jNZD",
  JCHF = "jCHF",
  JCNY = "jCNY",
  JEUR = "jEUR",
  JKRW = "jKRW",
  JMXN = "jMXN",
  JGBP = "jGBP",
  JPLN = "jPLN",
  JPHP = "jPHP",
  JPYC = "JPYC",
  JSEK = "jSEK",
  PAR = "PAR",
  NZDS = "NZDS",
  XSGD = "XSGD",
  MIMO = "MIMO",
  JRT = "JRT",
  aMATICb = "aMATICb",
  aMATICc = "aMATICc",
  MATICx = "MATICx",
  stMATIC = "stMATIC",
  csMATIC = "csMATIC",
  IXT = "IXT",
  GNS = "GNS",
  "DAI-GNS" = "DAI-GNS",

  // Balancer
  MIMO_PAR_80_20 = "MIMO80-PAR20 BLP",
  MIMO_PAR_75_25 = "MIMO75-PAR25 BLP",
  BRZ_JBRL_STABLE_BLP = "BRZ_JBRL STABLE BLP",
  JEUR_PAR_STABLE_BLP = "JEUR_PAR STABLE BLP",
  WMATIC_STMATIC_STABLE_BLP = "WMATIC_STMATIC STABLE BLP",
  WMATIC_CSMATIC_STABLE_BLP = "WMATIC_CSMATIC STABLE BLP",
  WMATIC_MATICX_STABLE_BLP = "WMATIC_MATICX STABLE BLP",
  TETU_BOOSTED_STABLE_BLP = "TETU_BOOSTED STABLE BLP",
  TETU_LINEAR_USDT = "TETU_LINEAR USDT",
  TETU_LINEAR_USDC = "TETU_LINEAR USDC",
  TETU_LINEAR_DAI = "TETU_LINEAR DAI",

  // Arrakis Vaults [arrakis_pair_fee_tier]
  arrakis_USDC_WETH_005 = "Arrakis Vault V1 USDC-WETH (0.05)",
  arrakis_WBTC_WETH_005 = "Arrakis Vault V1 WBTC-WETH (0.05)",
  arrakis_USDC_PAR_005 = "G-UNI USDC-PAR Vault (0.05)",
  arrakis_WMATIC_USDC_005 = "Arrakis Vault V1 WMATIC-USDC (0.05)",
  arrakis_USDC_agEUR_001 = "Arrakis Vault V1 USDC-agEUR (0.01)",
  arrakis_WMATIC_WETH_005 = "Arrakis Vault V1 WMATIC-WETH (0.05)",
  arrakis_WMATIC_AAVE_03 = "Arrakis Vault V1 WMATIC-AAVE (0.3)",
  arrakis_USDC_MAI_005 = "Arrakis Vault V1 USDC-miMATIC (0.05)",
  arrakis_USDC_USDT_001 = "Arrakis Vault V1 USDC-USDT (0.01)",
  arrakis_USDC_USDT_005 = "Arrakis Vault V1 USDC-USDT (0.05)",
  arrakis_USDC_DAI_005 = "G-UNI USDC-DAI Vault (0.05)",
  arrakis_WETH_DAI_03 = "G-UNI WETH-DAI Vault (0.3)",

  // Arbitrum
  "2pool" = "2pool",
  GOHM = "GOHM",
  "WETH-GOHM" = "WETH-GOHM",
  DPX = "DPX",
  MAGIC = "MAGIC",
  GMX = "GMX",
  saddleFraxBP = "saddleFraxBP",
  saddleFraxUsdsBP = "saddleFraxUsdsBP",
  saddleFraxUsdtBP = "saddleFraxUsdtBP",
  USDs = "USDs",

  // Fantom
  WFTM = "WFTM",
  multiBTC = "multiBTC",
  multiETH = "multiETH",
  aFTMc = "aFTMc",
  PAR_USDC_CURVE = "PAR_USDC CURVE",
  fUSDT = "fUSDT",
  triCrypto = "triCrypto",

  // Mainnet
  realYieldUSD = "realYieldUSD",
  ethBtcTrend = "ethBtcTrend",
  ethBtcMomentum = "ethBtcMomentum",
  wstETH = "wstETH",
}

export default assetSymbols;
