{
  "address": "0xf7d7EDa783382c28058C842768Fbf20185c27f8D",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "inputToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "inputAmount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "strategyData",
          "type": "bytes"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "outputToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "outputAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x5c95cff1901febab5eb3a8a7044199c6a37bb95ab7c7cf50ce8c1d2815049ea7",
  "receipt": {
    "to": null,
    "from": "0x27521eae4eE4153214CaDc3eCD703b9B0326C908",
    "contractAddress": "0xf7d7EDa783382c28058C842768Fbf20185c27f8D",
    "transactionIndex": 113,
    "gasUsed": "242384",
    "logsBloom": "0x
    "blockHash": "0x70c3c6c94431475ebe1813a565e99ec0b716844786a7d882c3382cdc2ab21f68",
    "transactionHash": "0x5c95cff1901febab5eb3a8a7044199c6a37bb95ab7c7cf50ce8c1d2815049ea7",
    "logs": [],
    "blockNumber": 27775123,
    "cumulativeGasUsed": "11622344",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "metadata": {
    "compiler": {
      "version": "0.8.10+commit.fc410830"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "inputToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "inputAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "strategyData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem",
          "outputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "outputToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "outputAmount",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "redeem(address,uint256,bytes)": {
            "params": {
              "inputAmount": "The amount of the input wrapped token to be redeemed for an underlying token.",
              "inputToken": "The input wrapped token to be redeemed for an underlying token.",
              "strategyData": "The ABI-encoded data to be used in the redemption strategy logic."
            },
            "returns": {
              "outputAmount": "The quantity of underlying tokens outputted.",
              "outputToken": "The underlying ERC20 token outputted."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "redeem(address,uint256,bytes)": {
            "notice": "Redeems custom collateral `token` for an underlying token."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@pythnetwork/pyth-sdk-solidity/=lib/pyth-sdk-solidity/",
        ":adrastia-core/=lib/adrastia-core/contracts/",
        ":adrastia/=lib/adrastia-core/contracts/",
        ":ds-test/=lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        ":flywheel-v2/=lib/flywheel-v2/src/",
        ":flywheel/=lib/flywheel-v2/src/",
        ":forge-std/=lib/forge-std/src/",
        ":fuse-flywheel/=lib/fuse-flywheel/src/",
        ":libcompound/=lib/fuse-flywheel/lib/libcompound/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":ops/=lib/ops/contracts/",
        ":pyth-neon/=lib/pyth-neon/contracts/",
        ":pyth-sdk-solidity/=lib/pyth-sdk-solidity/",
        ":solidity-bytes-utils/=lib/solidity-bytes-utils/",
        ":solmate/=lib/solmate/src/",
        ":weird-erc20/=lib/fuse-flywheel/lib/libcompound/lib/solmate/lib/weird-erc20/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/liquidators/AlgebraSwapLiquidator.sol": "AlgebraSwapLiquidator"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/external/algebra/IAlgebraSwapCallback.sol": {
        "keccak256": "0x04f8002385b15dd8425727c793f1991b91f722f881c1e0859aaaf85dafa15e3f",
        "urls": [
          "bzz-raw://597b21ab71b5010a30b94a93f2a271eb477bc5861e83496645fd911209f7aee1",
          "dweb:/ipfs/QmWupg91WxjzdWNSbBdTw3sxYpZBAcv8FLPxbcEAZNkrZX"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/external/algebra/ISwapRouter.sol": {
        "keccak256": "0x3604792d57ebb39a2255e5ee73b0b591977fa2e0a046c77c1712f65c7abfb587",
        "urls": [
          "bzz-raw://faefd85fb5011bd049efba2a29df69cf9d04e3c7e214b27f3a806b5153739804",
          "dweb:/ipfs/Qmcu2v7Nxsw2VPcwwKzceDqXgDNpib7GfaRaEgfjDkyGVX"
        ],
        "license": "GPL-2.0-or-later"
      },
      "contracts/liquidators/AlgebraSwapLiquidator.sol": {
        "keccak256": "0xa829671a70f6f672fd1d58bdbbf71ad0640655f40101461388006edb86c47d6e",
        "urls": [
          "bzz-raw://e4849ca5bf13e10dc6ab0a9d3f5a2c4fbef4d3befc11a4adc52b627136fdadf4",
          "dweb:/ipfs/QmQXHfEF35tx48DGA2npLwD4564dieGXCgXugg1wADBg1W"
        ],
        "license": "UNLICENSED"
      },
      "contracts/liquidators/IRedemptionStrategy.sol": {
        "keccak256": "0xa66d1f0b35f341ebf37141b14a8cdef96ea54e11ec5765ebcee0e276a571f7b0",
        "urls": [
          "bzz-raw://9676ecfb6b7fe5b1a438435bedc9e5134694222d53e221a0402e400da2edc729",
          "dweb:/ipfs/QmbnN4YpWrHQ8AG5YcQ7UsYZwRUaBMjaNwdtNkb4GB3DVe"
        ],
        "license": "UNLICENSED"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
        "urls": [
          "bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
          "dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061036c806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806310badf4e14610030575b600080fd5b61004361003e366004610216565b610066565b604080516001600160a01b03909316835260208301919091520160405180910390f35b6000806000808480602001905181019061008091906102e3565b60405163095ea7b360e01b81526001600160a01b038083166004830152602482018a90529296508694509092509088169063095ea7b3906044016020604051808303816000875af11580156100d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fd919061031d565b506040805160e0810182526001600160a01b03898116825284811660208301908152308385019081524260608501908152608085018c8152600060a0870181815260c08801918252975163178ca23160e31b815287518716600482015294518616602486015292518516604485015290516064840152516084830152935160a48201529251811660c484015290919083169063bc6511889060e4016020604051808303816000875af11580156101b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101db9190610346565b9350505050935093915050565b6001600160a01b03811681146101fd57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561022b57600080fd5b8335610236816101e8565b925060208401359150604084013567ffffffffffffffff8082111561025a57600080fd5b818601915086601f83011261026e57600080fd5b81358181111561028057610280610200565b604051601f8201601f19908116603f011681019083821181831017156102a8576102a8610200565b816040528281528960208487010111156102c157600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b600080604083850312156102f657600080fd5b8251610301816101e8565b6020840151909250610312816101e8565b809150509250929050565b60006020828403121561032f57600080fd5b8151801515811461033f57600080fd5b9392505050565b60006020828403121561035857600080fd5b505191905056fea164736f6c634300080a000a",
    "sourceMap": "392:1278:97:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c806310badf4e14610030575b600080fd5b61004361003e366004610216565b610066565b604080516001600160a01b03909316835260208301919091520160405180910390f35b6000806000808480602001905181019061008091906102e3565b60405163095ea7b360e01b81526001600160a01b038083166004830152602482018a90529296508694509092509088169063095ea7b3906044016020604051808303816000875af11580156100d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fd919061031d565b506040805160e0810182526001600160a01b03898116825284811660208301908152308385019081524260608501908152608085018c8152600060a0870181815260c08801918252975163178ca23160e31b815287518716600482015294518616602486015292518516604485015290516064840152516084830152935160a48201529251811660c484015290919083169063bc6511889060e4016020604051808303816000875af11580156101b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101db9190610346565b9350505050935093915050565b6001600160a01b03811681146101fd57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561022b57600080fd5b8335610236816101e8565b925060208401359150604084013567ffffffffffffffff8082111561025a57600080fd5b818601915086601f83011261026e57600080fd5b81358181111561028057610280610200565b604051601f8201601f19908116603f011681019083821181831017156102a8576102a8610200565b816040528281528960208487010111156102c157600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b600080604083850312156102f657600080fd5b8251610301816101e8565b6020840151909250610312816101e8565b809150509250929050565b60006020828403121561032f57600080fd5b8151801515811461033f57600080fd5b9392505050565b60006020828403121561035857600080fd5b505191905056fea164736f6c634300080a000a",
    "sourceMap": "392:1278:97:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;948:720;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;1697:32:397;;;1679:51;;1761:2;1746:18;;1739:34;;;;1652:18;948:720:97;;;;;;;;1076:29;1107:20;1136;1158:22;1195:12;1184:48;;;;;;;;;;;;:::i;:::-;1290:52;;-1:-1:-1;;;1290:52:97;;-1:-1:-1;;;;;1697:32:397;;;1290:52:97;;;1679:51:397;1746:18;;;1739:34;;;1135:97:97;;-1:-1:-1;1135:97:97;;-1:-1:-1;1135:97:97;;-1:-1:-1;1290:18:97;;;;;;1652::397;;1290:52:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1400:206:97;;;;;;;;-1:-1:-1;;;;;1400:206:97;;;;;;;;;;;;;;1497:4;1400:206;;;;;;1510:15;1400:206;;;;;;;;;;;;-1:-1:-1;1400:206:97;;;;;;;;;;;;1628:35;;-1:-1:-1;;;1628:35:97;;3091:13:397;;3087:22;;1628:35:97;;;3069:41:397;3152:24;;3148:33;;3126:20;;;3119:63;3224:24;;3220:33;;3198:20;;;3191:63;3292:24;;3270:20;;;3263:54;3355:24;3333:20;;;3326:54;3418:24;;3396:20;;;3389:54;3485:24;;3481:33;;3459:20;;;3452:63;1400:206:97;;1628:27;;;;;;3003:19:397;;1628:35:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1613:50;;1129:539;;;948:720;;;;;;:::o;14:150:397:-;-1:-1:-1;;;;;108:31:397;;98:42;;88:70;;154:1;151;144:12;88:70;14:150;:::o;169:127::-;230:10;225:3;221:20;218:1;211:31;261:4;258:1;251:15;285:4;282:1;275:15;301:1171;415:6;423;431;484:2;472:9;463:7;459:23;455:32;452:52;;;500:1;497;490:12;452:52;539:9;526:23;558:50;602:5;558:50;:::i;:::-;627:5;-1:-1:-1;679:2:397;664:18;;651:32;;-1:-1:-1;734:2:397;719:18;;706:32;757:18;787:14;;;784:34;;;814:1;811;804:12;784:34;852:6;841:9;837:22;827:32;;897:7;890:4;886:2;882:13;878:27;868:55;;919:1;916;909:12;868:55;955:2;942:16;977:2;973;970:10;967:36;;;983:18;;:::i;:::-;1058:2;1052:9;1026:2;1112:13;;-1:-1:-1;;1108:22:397;;;1132:2;1104:31;1100:40;1088:53;;;1156:18;;;1176:22;;;1153:46;1150:72;;;1202:18;;:::i;:::-;1242:10;1238:2;1231:22;1277:2;1269:6;1262:18;1317:7;1312:2;1307;1303;1299:11;1295:20;1292:33;1289:53;;;1338:1;1335;1328:12;1289:53;1394:2;1389;1385;1381:11;1376:2;1368:6;1364:15;1351:46;1439:1;1434:2;1429;1421:6;1417:15;1413:24;1406:35;1460:6;1450:16;;;;;;;301:1171;;;;;:::o;1784:452::-;1892:6;1900;1953:2;1941:9;1932:7;1928:23;1924:32;1921:52;;;1969:1;1966;1959:12;1921:52;2001:9;1995:16;2020:50;2064:5;2020:50;:::i;:::-;2139:2;2124:18;;2118:25;2089:5;;-1:-1:-1;2152:52:397;2118:25;2152:52;:::i;:::-;2223:7;2213:17;;;1784:452;;;;;:::o;2520:277::-;2587:6;2640:2;2628:9;2619:7;2615:23;2611:32;2608:52;;;2656:1;2653;2646:12;2608:52;2688:9;2682:16;2741:5;2734:13;2727:21;2720:5;2717:32;2707:60;;2763:1;2760;2753:12;2707:60;2786:5;2520:277;-1:-1:-1;;;2520:277:397:o;3526:184::-;3596:6;3649:2;3637:9;3628:7;3624:23;3620:32;3617:52;;;3665:1;3662;3655:12;3617:52;-1:-1:-1;3688:16:397;;3526:184;-1:-1:-1;3526:184:397:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "redeem(address,uint256,bytes)": "10badf4e"
  }
}