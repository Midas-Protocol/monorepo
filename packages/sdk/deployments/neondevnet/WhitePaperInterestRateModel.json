{
  "address": "0x58d7840319ab12fFE1f4A43741F6ad30288DD3Ad",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_blocksPerYear",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "baseRatePerYear",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "multiplierPerYear",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "baseRatePerBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "multiplierPerBlock",
          "type": "uint256"
        }
      ],
      "name": "NewInterestParams",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "baseRatePerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blocksPerYear",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "cash",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrows",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserves",
          "type": "uint256"
        }
      ],
      "name": "getBorrowRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "cash",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrows",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserves",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserveFactorMantissa",
          "type": "uint256"
        }
      ],
      "name": "getSupplyRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isInterestRateModel",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "multiplierPerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "cash",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrows",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserves",
          "type": "uint256"
        }
      ],
      "name": "utilizationRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x89e77309815c990b7df250706469a75771e5f01cb4171312fbe3810429e798e5",
  "receipt": {
    "to": null,
    "from": "0x27521eae4eE4153214CaDc3eCD703b9B0326C908",
    "contractAddress": "0x58d7840319ab12fFE1f4A43741F6ad30288DD3Ad",
    "transactionIndex": 0,
    "gasUsed": "24099640",
    "logsBloom": "0x
    "blockHash": "0x914d1ebbe37ab81c5f6034ef68929a8cdd535cc260a63ef64e5cf58f8b7b2376",
    "transactionHash": "0x89e77309815c990b7df250706469a75771e5f01cb4171312fbe3810429e798e5",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 194349063,
        "transactionHash": "0x89e77309815c990b7df250706469a75771e5f01cb4171312fbe3810429e798e5",
        "address": "0x58d7840319ab12fFE1f4A43741F6ad30288DD3Ad",
        "topics": [
          "0xf35fa19c15e9ba782633a5df62a98b20217151addc68e3ff2cd623a48d37ec27"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000000001c59cb9fc00000000000000000000000000000000000000000000000000000008dc0fa1ec",
        "logIndex": 0,
        "blockHash": "0x914d1ebbe37ab81c5f6034ef68929a8cdd535cc260a63ef64e5cf58f8b7b2376"
      }
    ],
    "blockNumber": 194349063,
    "cumulativeGasUsed": "24099640",
    "status": 1,
    "byzantium": true
  },
  "args": [
    2628000,
    "20000000000000000",
    "100000000000000000"
  ],
  "numDeployments": 1,
  "metadata": {
    "compiler": {
      "version": "0.8.10+commit.fc410830"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_blocksPerYear",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "baseRatePerYear",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "multiplierPerYear",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "baseRatePerBlock",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "multiplierPerBlock",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewInterestParams",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "baseRatePerBlock",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "blocksPerYear",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "cash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrows",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserves",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBorrowRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "cash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrows",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserves",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserveFactorMantissa",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSupplyRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isInterestRateModel",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "multiplierPerBlock",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "cash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrows",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserves",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "utilizationRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "baseRatePerYear": "The approximate target base APR, as a mantissa (scaled by 1e18)",
              "multiplierPerYear": "The rate of increase in interest rate wrt utilization (scaled by 1e18)"
            }
          },
          "getBorrowRate(uint256,uint256,uint256)": {
            "params": {
              "borrows": "The amount of borrows in the market",
              "cash": "The amount of cash in the market",
              "reserves": "The amount of reserves in the market"
            },
            "returns": {
              "_0": "The borrow rate percentage per block as a mantissa (scaled by 1e18)"
            }
          },
          "getSupplyRate(uint256,uint256,uint256,uint256)": {
            "params": {
              "borrows": "The amount of borrows in the market",
              "cash": "The amount of cash in the market",
              "reserveFactorMantissa": "The current reserve factor for the market",
              "reserves": "The amount of reserves in the market"
            },
            "returns": {
              "_0": "The supply rate percentage per block as a mantissa (scaled by 1e18)"
            }
          },
          "utilizationRate(uint256,uint256,uint256)": {
            "params": {
              "borrows": "The amount of borrows in the market",
              "cash": "The amount of cash in the market",
              "reserves": "The amount of reserves in the market (currently unused)"
            },
            "returns": {
              "_0": "The utilization rate as a mantissa between [0, 1e18]"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "baseRatePerBlock()": {
            "notice": "The base interest rate which is the y-intercept when utilization rate is 0"
          },
          "blocksPerYear()": {
            "notice": "The approximate number of blocks per year that is assumed by the interest rate model"
          },
          "constructor": {
            "notice": "Construct an interest rate model"
          },
          "getBorrowRate(uint256,uint256,uint256)": {
            "notice": "Calculates the current borrow rate per block, with the error code expected by the market"
          },
          "getSupplyRate(uint256,uint256,uint256,uint256)": {
            "notice": "Calculates the current supply rate per block"
          },
          "isInterestRateModel()": {
            "notice": "Indicator that this is an InterestRateModel contract (for inspection)"
          },
          "multiplierPerBlock()": {
            "notice": "The multiplier of utilization rate that gives the slope of the interest rate"
          },
          "utilizationRate(uint256,uint256,uint256)": {
            "notice": "Calculates the utilization rate of the market: `borrows / (cash + borrows - reserves)`"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@pythnetwork/pyth-sdk-solidity/=lib/pyth-sdk-solidity/",
        ":adrastia-core/=lib/adrastia-core/contracts/",
        ":adrastia/=lib/adrastia-core/contracts/",
        ":ds-test/=lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":flywheel-v2/=lib/flywheel-v2/src/",
        ":flywheel/=lib/flywheel-v2/src/",
        ":forge-std/=lib/forge-std/src/",
        ":fuse-flywheel/=lib/fuse-flywheel/src/",
        ":libcompound/=lib/fuse-flywheel/lib/libcompound/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":ops/=lib/ops/contracts/",
        ":pyth-neon/=lib/pyth-neon/contracts/",
        ":pyth-sdk-solidity/=lib/pyth-sdk-solidity/",
        ":solidity-bytes-utils/=lib/solidity-bytes-utils/",
        ":solmate/=lib/solmate/src/",
        ":weird-erc20/=lib/fuse-flywheel/lib/libcompound/lib/solmate/lib/weird-erc20/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/compound/WhitePaperInterestRateModel.sol": "WhitePaperInterestRateModel"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/compound/InterestRateModel.sol": {
        "keccak256": "0x587a54b49d48df2cd91583eac93ddde4e2849f79d0441f179bf835e9dffe24e9",
        "urls": [
          "bzz-raw://b202a68cbe90a5ecaa547808852641d7bfe93f9b8e3f3f3f6010423c182781d2",
          "dweb:/ipfs/QmYEzQQHVXNCMmhhFrv4hak2WDfs21SXs6DSh5q5wJ25AB"
        ],
        "license": "UNLICENSED"
      },
      "contracts/compound/SafeMath.sol": {
        "keccak256": "0x9a5b4d600de35b6029d66ddbfa6bc79813b06a6e90344a5a606849ec9751b6dc",
        "urls": [
          "bzz-raw://a40949711653fc11a095c8afdeaf7cd6a185f195905bf3a03d3463f20d9ffb82",
          "dweb:/ipfs/Qma8xEPV444XFLRdbzmiHeeeqT1vVrdLAyjRH6sStYt1Gy"
        ],
        "license": "UNLICENSED"
      },
      "contracts/compound/WhitePaperInterestRateModel.sol": {
        "keccak256": "0x35fcfa946ed59abf0837cbf4a6f9e6e314bb4537fa7d9ef2735e60a2f1f69969",
        "urls": [
          "bzz-raw://fe7e660c7bb738808417941a896d69a7f91da23c542b1368cd7ba514c57f34fa",
          "dweb:/ipfs/QmcWU2r2ns2cP8CQ2SLDmvq1GP5z6YbFqLJ2AE7hAbeDYZ"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506040516106b53803806106b583398101604081905261002f91610145565b600083905561004982846100b6602090811b6101a717901c565b600281905550610068600054826100b660201b6101a71790919060201c565b60018190556002546040517ff35fa19c15e9ba782633a5df62a98b20217151addc68e3ff2cd623a48d37ec27926100a6928252602082015260400190565b60405180910390a15050506101ea565b60006100fe83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061010560201b60201c565b9392505050565b6000818361012f5760405162461bcd60e51b81526004016101269190610173565b60405180910390fd5b50600061013c84866101c8565b95945050505050565b60008060006060848603121561015a57600080fd5b8351925060208401519150604084015190509250925092565b600060208083528351808285015260005b818110156101a057858101830151858201604001528201610184565b818111156101b2576000604083870101525b50601f01601f1916929092016040019392505050565b6000826101e557634e487b7160e01b600052601260045260246000fd5b500490565b6104bc806101f96000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638726bb891161005b5780638726bb89146100d7578063a385fb96146100e0578063b8168816146100e9578063f14039de146100fc57600080fd5b806315f24053146100825780632191f92a146100a85780636e71e2d8146100c0575b600080fd5b610095610090366004610376565b610105565b6040519081526020015b60405180910390f35b6100b0600181565b604051901515815260200161009f565b6100956100ce366004610376565b60009392505050565b61009560015481565b61009560005481565b6100956100f73660046103a2565b610144565b61009560025481565b60008061013b600254610135670de0b6b3a764000061012f600154866101f290919063ffffffff16565b906101a7565b90610276565b95945050505050565b600080610159670de0b6b3a7640000846102d5565b90506000610168878787610105565b90506000610182670de0b6b3a764000061012f84866101f2565b905061019b670de0b6b3a764000061012f6000846101f2565b98975050505050505050565b60006101e983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610317565b90505b92915050565b600082610201575060006101ec565b600061020d83856103ea565b90508261021a8583610409565b146101e95760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084015b60405180910390fd5b600080610283838561042b565b9050838110156101e95760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161026d565b60006101e983836040518060400160405280601f81526020017f536166654d6174683a207375627472616374696f6e20756e646572666c6f7700815250610345565b600081836103385760405162461bcd60e51b815260040161026d9190610443565b50600061013b8486610409565b600081848411156103695760405162461bcd60e51b815260040161026d9190610443565b50600061013b8486610498565b60008060006060848603121561038b57600080fd5b505081359360208301359350604090920135919050565b600080600080608085870312156103b857600080fd5b5050823594602084013594506040840135936060013592509050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610404576104046103d4565b500290565b60008261042657634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561043e5761043e6103d4565b500190565b600060208083528351808285015260005b8181101561047057858101830151858201604001528201610454565b81811115610482576000604083870101525b50601f01601f1916929092016040019392505050565b6000828210156104aa576104aa6103d4565b50039056fea164736f6c634300080a000a",
    "sourceMap": "316:3349:38:-:0;;;1161:334;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1271:13;:30;;;1326:34;:15;1271:30;1326:19;;;;;;;:34;;:::i;:::-;1307:16;:53;;;;1387:36;1409:13;;1387:17;:21;;;;;;:36;;;;:::i;:::-;1366:18;:57;;;1453:16;;1435:55;;;;;;499:25:442;;555:2;540:18;;533:34;487:2;472:18;;325:248;1435:55:38;;;;;;;;1161:334;;;316:3349;;4094:124:35;4152:7;4174:39;4178:1;4181;4174:39;;;;;;;;;;;;;;;;;:3;;;:39;;:::i;:::-;4167:46;4094:124;-1:-1:-1;;;4094:124:35:o;4669:332::-;4771:7;4863:12;4856:5;4848:28;;;;-1:-1:-1;;;4848:28:35;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;4882:9:35;4894:5;4898:1;4894;:5;:::i;:::-;4882:17;4669:332;-1:-1:-1;;;;;4669:332:35:o;14:306:442:-;102:6;110;118;171:2;159:9;150:7;146:23;142:32;139:52;;;187:1;184;177:12;139:52;216:9;210:16;200:26;;266:2;255:9;251:18;245:25;235:35;;310:2;299:9;295:18;289:25;279:35;;14:306;;;;;:::o;578:597::-;690:4;719:2;748;737:9;730:21;780:6;774:13;823:6;818:2;807:9;803:18;796:34;848:1;858:140;872:6;869:1;866:13;858:140;;;967:14;;;963:23;;957:30;933:17;;;952:2;929:26;922:66;887:10;;858:140;;;1016:6;1013:1;1010:13;1007:91;;;1086:1;1081:2;1072:6;1061:9;1057:22;1053:31;1046:42;1007:91;-1:-1:-1;1159:2:442;1138:15;-1:-1:-1;;1134:29:442;1119:45;;;;1166:2;1115:54;;578:597;-1:-1:-1;;;578:597:442:o;1180:217::-;1220:1;1246;1236:132;;1290:10;1285:3;1281:20;1278:1;1271:31;1325:4;1322:1;1315:15;1353:4;1350:1;1343:15;1236:132;-1:-1:-1;1382:9:442;;1180:217::o;:::-;316:3349:38;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80638726bb891161005b5780638726bb89146100d7578063a385fb96146100e0578063b8168816146100e9578063f14039de146100fc57600080fd5b806315f24053146100825780632191f92a146100a85780636e71e2d8146100c0575b600080fd5b610095610090366004610376565b610105565b6040519081526020015b60405180910390f35b6100b0600181565b604051901515815260200161009f565b6100956100ce366004610376565b60009392505050565b61009560015481565b61009560005481565b6100956100f73660046103a2565b610144565b61009560025481565b60008061013b600254610135670de0b6b3a764000061012f600154866101f290919063ffffffff16565b906101a7565b90610276565b95945050505050565b600080610159670de0b6b3a7640000846102d5565b90506000610168878787610105565b90506000610182670de0b6b3a764000061012f84866101f2565b905061019b670de0b6b3a764000061012f6000846101f2565b98975050505050505050565b60006101e983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610317565b90505b92915050565b600082610201575060006101ec565b600061020d83856103ea565b90508261021a8583610409565b146101e95760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084015b60405180910390fd5b600080610283838561042b565b9050838110156101e95760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015260640161026d565b60006101e983836040518060400160405280601f81526020017f536166654d6174683a207375627472616374696f6e20756e646572666c6f7700815250610345565b600081836103385760405162461bcd60e51b815260040161026d9190610443565b50600061013b8486610409565b600081848411156103695760405162461bcd60e51b815260040161026d9190610443565b50600061013b8486610498565b60008060006060848603121561038b57600080fd5b505081359360208301359350604090920135919050565b600080600080608085870312156103b857600080fd5b5050823594602084013594506040840135936060013592509050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610404576104046103d4565b500290565b60008261042657634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561043e5761043e6103d4565b500190565b600060208083528351808285015260005b8181101561047057858101830151858201604001528201610454565b81811115610482576000604083870101525b50601f01601f1916929092016040019392505050565b6000828210156104aa576104aa6103d4565b50039056fea164736f6c634300080a000a",
    "sourceMap": "316:3349:38:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2543:262;;;;;;:::i;:::-;;:::i;:::-;;;481:25:442;;;469:2;454:18;2543:262:38;;;;;;;;266:47:32;;309:4;266:47;;;;;682:14:442;;675:22;657:41;;645:2;630:18;266:47:32;517:187:442;1860:320:38;;;;;;:::i;:::-;1971:7;1860:320;;;;;;736:33;;;;;;601:28;;;;;;3200:463;;;;;;:::i;:::-;;:::i;874:31::-;;;;;;2543:262;2661:7;;2742:58;2783:16;;2742:36;2773:4;2742:26;2749:18;;2742:2;:6;;:26;;;;:::i;:::-;:30;;:36::i;:::-;:40;;:58::i;:::-;2735:65;2543:262;-1:-1:-1;;;;;2543:262:38:o;3200:463::-;3353:7;;3400:40;3408:4;3418:21;3400:17;:40::i;:::-;3368:72;;3446:18;3467:38;3481:4;3487:7;3496:8;3467:13;:38::i;:::-;3446:59;-1:-1:-1;3511:18:38;3532:47;3574:4;3532:37;3446:59;3547:21;3532:14;:37::i;:47::-;3511:68;-1:-1:-1;3592:66:38;3653:4;3592:56;1971:7;3511:68;3592:44;:56::i;:66::-;3585:73;3200:463;-1:-1:-1;;;;;;;;3200:463:38:o;4094:124:35:-;4152:7;4174:39;4178:1;4181;4174:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;4167:46;;4094:124;;;;;:::o;2589:419::-;2647:7;2872:6;2868:35;;-1:-1:-1;2895:1:35;2888:8;;2868:35;2909:9;2921:5;2925:1;2921;:5;:::i;:::-;2909:17;-1:-1:-1;2949:1:35;2940:5;2944:1;2909:17;2940:5;:::i;:::-;:10;2932:56;;;;-1:-1:-1;;;2932:56:35;;1828:2:442;2932:56:35;;;1810:21:442;1867:2;1847:18;;;1840:30;1906:34;1886:18;;;1879:62;-1:-1:-1;;;1957:18:442;;;1950:31;1998:19;;2932:56:35;;;;;;;;980:162;1038:7;;1065:5;1069:1;1065;:5;:::i;:::-;1053:17;;1089:1;1084;:6;;1076:46;;;;-1:-1:-1;;;1076:46:35;;2363:2:442;1076:46:35;;;2345:21:442;2402:2;2382:18;;;2375:30;2441:29;2421:18;;;2414:57;2488:18;;1076:46:35;2161:351:442;1795:129:35;1853:7;1875:44;1879:1;1882;1875:44;;;;;;;;;;;;;;;;;:3;:44::i;4669:332::-;4771:7;4863:12;4856:5;4848:28;;;;-1:-1:-1;;;4848:28:35;;;;;;;;:::i;:::-;-1:-1:-1;4882:9:35;4894:5;4898:1;4894;:5;:::i;2185:189::-;2287:7;2318:12;2310:6;;;;2302:29;;;;-1:-1:-1;;;2302:29:35;;;;;;;;:::i;:::-;-1:-1:-1;2337:9:35;2349:5;2353:1;2349;:5;:::i;14:316:442:-;91:6;99;107;160:2;148:9;139:7;135:23;131:32;128:52;;;176:1;173;166:12;128:52;-1:-1:-1;;199:23:442;;;269:2;254:18;;241:32;;-1:-1:-1;320:2:442;305:18;;;292:32;;14:316;-1:-1:-1;14:316:442:o;709:385::-;795:6;803;811;819;872:3;860:9;851:7;847:23;843:33;840:53;;;889:1;886;879:12;840:53;-1:-1:-1;;912:23:442;;;982:2;967:18;;954:32;;-1:-1:-1;1033:2:442;1018:18;;1005:32;;1084:2;1069:18;1056:32;;-1:-1:-1;709:385:442;-1:-1:-1;709:385:442:o;1099:127::-;1160:10;1155:3;1151:20;1148:1;1141:31;1191:4;1188:1;1181:15;1215:4;1212:1;1205:15;1231:168;1271:7;1337:1;1333;1329:6;1325:14;1322:1;1319:21;1314:1;1307:9;1300:17;1296:45;1293:71;;;1344:18;;:::i;:::-;-1:-1:-1;1384:9:442;;1231:168::o;1404:217::-;1444:1;1470;1460:132;;1514:10;1509:3;1505:20;1502:1;1495:31;1549:4;1546:1;1539:15;1577:4;1574:1;1567:15;1460:132;-1:-1:-1;1606:9:442;;1404:217::o;2028:128::-;2068:3;2099:1;2095:6;2092:1;2089:13;2086:39;;;2105:18;;:::i;:::-;-1:-1:-1;2141:9:442;;2028:128::o;2517:597::-;2629:4;2658:2;2687;2676:9;2669:21;2719:6;2713:13;2762:6;2757:2;2746:9;2742:18;2735:34;2787:1;2797:140;2811:6;2808:1;2805:13;2797:140;;;2906:14;;;2902:23;;2896:30;2872:17;;;2891:2;2868:26;2861:66;2826:10;;2797:140;;;2955:6;2952:1;2949:13;2946:91;;;3025:1;3020:2;3011:6;3000:9;2996:22;2992:31;2985:42;2946:91;-1:-1:-1;3098:2:442;3077:15;-1:-1:-1;;3073:29:442;3058:45;;;;3105:2;3054:54;;2517:597;-1:-1:-1;;;2517:597:442:o;3119:125::-;3159:4;3187:1;3184;3181:8;3178:34;;;3192:18;;:::i;:::-;-1:-1:-1;3229:9:442;;3119:125::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "baseRatePerBlock()": "f14039de",
    "blocksPerYear()": "a385fb96",
    "getBorrowRate(uint256,uint256,uint256)": "15f24053",
    "getSupplyRate(uint256,uint256,uint256,uint256)": "b8168816",
    "isInterestRateModel()": "2191f92a",
    "multiplierPerBlock()": "8726bb89",
    "utilizationRate(uint256,uint256,uint256)": "6e71e2d8"
  }
}