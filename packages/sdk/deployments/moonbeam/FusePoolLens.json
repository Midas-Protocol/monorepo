{
  "address": "0x5a6dB8ACA7BF203e5c87a3f239cf7E4d87aaA3f4",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "directory",
      "outputs": [
        {
          "internalType": "contract FusePoolDirectory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IComptroller",
          "name": "comptroller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getPoolAssetsByUser",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "cToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "underlyingToken",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "underlyingName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "underlyingSymbol",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "underlyingDecimals",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "underlyingBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyRatePerBlock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrowRatePerBlock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalBorrow",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrowBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "liquidity",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "membership",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "exchangeRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "underlyingPrice",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "oracle",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "collateralFactor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserveFactor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "adminFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fuseFee",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "borrowGuardianPaused",
              "type": "bool"
            }
          ],
          "internalType": "struct FusePoolLens.FusePoolAsset[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IComptroller",
          "name": "comptroller",
          "type": "address"
        }
      ],
      "name": "getPoolAssetsWithData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "cToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "underlyingToken",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "underlyingName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "underlyingSymbol",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "underlyingDecimals",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "underlyingBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyRatePerBlock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrowRatePerBlock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalBorrow",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supplyBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrowBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "liquidity",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "membership",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "exchangeRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "underlyingPrice",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "oracle",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "collateralFactor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserveFactor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "adminFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fuseFee",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "borrowGuardianPaused",
              "type": "bool"
            }
          ],
          "internalType": "struct FusePoolLens.FusePoolAsset[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IComptroller",
          "name": "comptroller",
          "type": "address"
        }
      ],
      "name": "getPoolSummary",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getPoolsByAccountWithData",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "comptroller",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockPosted",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestampPosted",
              "type": "uint256"
            }
          ],
          "internalType": "struct FusePoolDirectory.FusePool[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalBorrow",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "underlyingTokens",
              "type": "address[]"
            },
            {
              "internalType": "string[]",
              "name": "underlyingSymbols",
              "type": "string[]"
            },
            {
              "internalType": "bool",
              "name": "whitelistedAdmin",
              "type": "bool"
            }
          ],
          "internalType": "struct FusePoolLens.FusePoolData[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "internalType": "bool[]",
          "name": "",
          "type": "bool[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getPoolsOfUserWithData",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "comptroller",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockPosted",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestampPosted",
              "type": "uint256"
            }
          ],
          "internalType": "struct FusePoolDirectory.FusePool[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalBorrow",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "underlyingTokens",
              "type": "address[]"
            },
            {
              "internalType": "string[]",
              "name": "underlyingSymbols",
              "type": "string[]"
            },
            {
              "internalType": "bool",
              "name": "whitelistedAdmin",
              "type": "bool"
            }
          ],
          "internalType": "struct FusePoolLens.FusePoolData[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "internalType": "bool[]",
          "name": "",
          "type": "bool[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "whitelistedAdmin",
          "type": "bool"
        }
      ],
      "name": "getPublicPoolsByVerificationWithData",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "comptroller",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockPosted",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestampPosted",
              "type": "uint256"
            }
          ],
          "internalType": "struct FusePoolDirectory.FusePool[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalBorrow",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "underlyingTokens",
              "type": "address[]"
            },
            {
              "internalType": "string[]",
              "name": "underlyingSymbols",
              "type": "string[]"
            },
            {
              "internalType": "bool",
              "name": "whitelistedAdmin",
              "type": "bool"
            }
          ],
          "internalType": "struct FusePoolLens.FusePoolData[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "internalType": "bool[]",
          "name": "",
          "type": "bool[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPublicPoolsWithData",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "comptroller",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockPosted",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestampPosted",
              "type": "uint256"
            }
          ],
          "internalType": "struct FusePoolDirectory.FusePool[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalBorrow",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "underlyingTokens",
              "type": "address[]"
            },
            {
              "internalType": "string[]",
              "name": "underlyingSymbols",
              "type": "string[]"
            },
            {
              "internalType": "bool",
              "name": "whitelistedAdmin",
              "type": "bool"
            }
          ],
          "internalType": "struct FusePoolLens.FusePoolData[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "internalType": "bool[]",
          "name": "",
          "type": "bool[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getWhitelistedPoolsByAccount",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "comptroller",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockPosted",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestampPosted",
              "type": "uint256"
            }
          ],
          "internalType": "struct FusePoolDirectory.FusePool[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getWhitelistedPoolsByAccountWithData",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "comptroller",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockPosted",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestampPosted",
              "type": "uint256"
            }
          ],
          "internalType": "struct FusePoolDirectory.FusePool[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalBorrow",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "underlyingTokens",
              "type": "address[]"
            },
            {
              "internalType": "string[]",
              "name": "underlyingSymbols",
              "type": "string[]"
            },
            {
              "internalType": "bool",
              "name": "whitelistedAdmin",
              "type": "bool"
            }
          ],
          "internalType": "struct FusePoolLens.FusePoolData[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "internalType": "bool[]",
          "name": "",
          "type": "bool[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract FusePoolDirectory",
          "name": "_directory",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_hardcodedAddresses",
          "type": "address[]"
        },
        {
          "internalType": "string[]",
          "name": "_hardcodedNames",
          "type": "string[]"
        },
        {
          "internalType": "string[]",
          "name": "_hardcodedSymbols",
          "type": "string[]"
        },
        {
          "internalType": "string[]",
          "name": "_uniswapLPTokenNames",
          "type": "string[]"
        },
        {
          "internalType": "string[]",
          "name": "_uniswapLPTokenSymbols",
          "type": "string[]"
        },
        {
          "internalType": "string[]",
          "name": "_uniswapLPTokenDisplayNames",
          "type": "string[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ICToken",
          "name": "cToken",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "block",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "accountProofNodesRlp",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "reserveAndTimestampProofNodesRlp",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "priceAccumulatorProofNodesRlp",
              "type": "bytes"
            }
          ],
          "internalType": "struct UniswapOracle.ProofData",
          "name": "proofData",
          "type": "tuple"
        }
      ],
      "name": "verifyPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x8d0c9a73b9846cf80abae6e021dcfd6be9478af7018fb6f08cd16c1d1558dd2a",
  "receipt": {
    "to": null,
    "from": "0x82eDcFe00bd0ce1f3aB968aF09d04266Bc092e0E",
    "contractAddress": "0x5a6dB8ACA7BF203e5c87a3f239cf7E4d87aaA3f4",
    "transactionIndex": 4,
    "gasUsed": "3294990",
    "logsBloom": "0x
    "blockHash": "0xfe36459191945f12ab5fbdca9dce6a22a81384889d354849d43ff6ade7b6c9b4",
    "transactionHash": "0x8d0c9a73b9846cf80abae6e021dcfd6be9478af7018fb6f08cd16c1d1558dd2a",
    "logs": [],
    "blockNumber": 1864392,
    "cumulativeGasUsed": "3538176",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 3,
  "metadata": {
    "compiler": {
      "version": "0.8.10+commit.fc410830"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "directory",
          "outputs": [
            {
              "internalType": "contract FusePoolDirectory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IComptroller",
              "name": "comptroller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "getPoolAssetsByUser",
          "outputs": [
            {
              "internalType": "struct FusePoolLens.FusePoolAsset[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "cToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "underlyingToken",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "underlyingName",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "underlyingSymbol",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "underlyingDecimals",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "underlyingBalance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyRatePerBlock",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowRatePerBlock",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalBorrow",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyBalance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowBalance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "membership",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "exchangeRate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "underlyingPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "oracle",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralFactor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveFactor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "adminFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fuseFee",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "borrowGuardianPaused",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IComptroller",
              "name": "comptroller",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "getPoolAssetsWithData",
          "outputs": [
            {
              "internalType": "struct FusePoolLens.FusePoolAsset[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "cToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "underlyingToken",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "underlyingName",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "underlyingSymbol",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "underlyingDecimals",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "underlyingBalance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyRatePerBlock",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowRatePerBlock",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalBorrow",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "supplyBalance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowBalance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "membership",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "exchangeRate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "underlyingPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "oracle",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralFactor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserveFactor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "adminFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fuseFee",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "borrowGuardianPaused",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IComptroller",
              "name": "comptroller",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "getPoolSummary",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            },
            {
              "internalType": "string[]",
              "name": "",
              "type": "string[]"
            },
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "getPoolsByAccountWithData",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "struct FusePoolDirectory.FusePool[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "creator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "comptroller",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "blockPosted",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timestampPosted",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct FusePoolLens.FusePoolData[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "totalSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalBorrow",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "underlyingTokens",
                  "type": "address[]"
                },
                {
                  "internalType": "string[]",
                  "name": "underlyingSymbols",
                  "type": "string[]"
                },
                {
                  "internalType": "bool",
                  "name": "whitelistedAdmin",
                  "type": "bool"
                }
              ]
            },
            {
              "internalType": "bool[]",
              "name": "",
              "type": "bool[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "getPoolsOfUserWithData",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "struct FusePoolDirectory.FusePool[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "creator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "comptroller",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "blockPosted",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timestampPosted",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct FusePoolLens.FusePoolData[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "totalSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalBorrow",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "underlyingTokens",
                  "type": "address[]"
                },
                {
                  "internalType": "string[]",
                  "name": "underlyingSymbols",
                  "type": "string[]"
                },
                {
                  "internalType": "bool",
                  "name": "whitelistedAdmin",
                  "type": "bool"
                }
              ]
            },
            {
              "internalType": "bool[]",
              "name": "",
              "type": "bool[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "whitelistedAdmin",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "getPublicPoolsByVerificationWithData",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "struct FusePoolDirectory.FusePool[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "creator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "comptroller",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "blockPosted",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timestampPosted",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct FusePoolLens.FusePoolData[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "totalSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalBorrow",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "underlyingTokens",
                  "type": "address[]"
                },
                {
                  "internalType": "string[]",
                  "name": "underlyingSymbols",
                  "type": "string[]"
                },
                {
                  "internalType": "bool",
                  "name": "whitelistedAdmin",
                  "type": "bool"
                }
              ]
            },
            {
              "internalType": "bool[]",
              "name": "",
              "type": "bool[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "getPublicPoolsWithData",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "struct FusePoolDirectory.FusePool[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "creator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "comptroller",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "blockPosted",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timestampPosted",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct FusePoolLens.FusePoolData[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "totalSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalBorrow",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "underlyingTokens",
                  "type": "address[]"
                },
                {
                  "internalType": "string[]",
                  "name": "underlyingSymbols",
                  "type": "string[]"
                },
                {
                  "internalType": "bool",
                  "name": "whitelistedAdmin",
                  "type": "bool"
                }
              ]
            },
            {
              "internalType": "bool[]",
              "name": "",
              "type": "bool[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getWhitelistedPoolsByAccount",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "struct FusePoolDirectory.FusePool[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "creator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "comptroller",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "blockPosted",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timestampPosted",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "getWhitelistedPoolsByAccountWithData",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "struct FusePoolDirectory.FusePool[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "creator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "comptroller",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "blockPosted",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timestampPosted",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct FusePoolLens.FusePoolData[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "totalSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalBorrow",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "underlyingTokens",
                  "type": "address[]"
                },
                {
                  "internalType": "string[]",
                  "name": "underlyingSymbols",
                  "type": "string[]"
                },
                {
                  "internalType": "bool",
                  "name": "whitelistedAdmin",
                  "type": "bool"
                }
              ]
            },
            {
              "internalType": "bool[]",
              "name": "",
              "type": "bool[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract FusePoolDirectory",
              "name": "_directory",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "_hardcodedAddresses",
              "type": "address[]"
            },
            {
              "internalType": "string[]",
              "name": "_hardcodedNames",
              "type": "string[]"
            },
            {
              "internalType": "string[]",
              "name": "_hardcodedSymbols",
              "type": "string[]"
            },
            {
              "internalType": "string[]",
              "name": "_uniswapLPTokenNames",
              "type": "string[]"
            },
            {
              "internalType": "string[]",
              "name": "_uniswapLPTokenSymbols",
              "type": "string[]"
            },
            {
              "internalType": "string[]",
              "name": "_uniswapLPTokenDisplayNames",
              "type": "string[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ICToken",
              "name": "cToken",
              "type": "address"
            },
            {
              "internalType": "struct UniswapOracle.ProofData",
              "name": "proofData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "block",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "accountProofNodesRlp",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "reserveAndTimestampProofNodesRlp",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "priceAccumulatorProofNodesRlp",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getPoolAssetsByUser(address,address)": {
            "details": "This function is not designed to be called in a transaction: it is too gas-intensive."
          },
          "getPoolAssetsWithData(address)": {
            "details": "This function is not designed to be called in a transaction: it is too gas-intensive. Ideally, we can add the `view` modifier, but many cToken functions potentially modify the state.",
            "params": {
              "comptroller": "The Comptroller proxy contract of the Fuse pool."
            },
            "returns": {
              "_0": "An array of Fuse pool assets."
            }
          },
          "getPoolsByAccountWithData(address)": {
            "details": "This function is not designed to be called in a transaction: it is too gas-intensive. Ideally, we can add the `view` modifier, but many cToken functions potentially modify the state."
          },
          "getPoolsOfUserWithData(address)": {
            "details": "This function is not designed to be called in a transaction: it is too gas-intensive. Ideally, we can add the `view` modifier, but many cToken functions potentially modify the state."
          },
          "getPublicPoolsByVerificationWithData(bool)": {
            "details": "This function is not designed to be called in a transaction: it is too gas-intensive. Ideally, we can add the `view` modifier, but many cToken functions potentially modify the state."
          },
          "getPublicPoolsWithData()": {
            "details": "This function is not designed to be called in a transaction: it is too gas-intensive. Ideally, we can add the `view` modifier, but many cToken functions potentially modify the state."
          },
          "getWhitelistedPoolsByAccount(address)": {
            "details": "This function is not designed to be called in a transaction: it is too gas-intensive."
          },
          "getWhitelistedPoolsByAccountWithData(address)": {
            "details": "This function is not designed to be called in a transaction: it is too gas-intensive. Ideally, we can add the `view` modifier, but many cToken functions potentially modify the state."
          },
          "initialize(address,string,string,address[],string[],string[],string[],string[],string[])": {
            "params": {
              "_directory": "The FusePoolDirectory",
              "_hardcodedAddresses": "Underlying token addresses for a token like maker which are DSToken and/or use bytes32 for `symbol`",
              "_hardcodedNames": "Harcoded name for these tokens",
              "_hardcodedSymbols": "Harcoded symbol for these tokens",
              "_name": "Name for the nativeToken",
              "_symbol": "Symbol for the nativeToken",
              "_uniswapLPTokenDisplayNames": "Harcoded display names for underlying uniswap LpToken",
              "_uniswapLPTokenNames": "Harcoded names for underlying uniswap LpToken",
              "_uniswapLPTokenSymbols": "Harcoded symbols for underlying uniswap LpToken"
            }
          },
          "verifyPrice(address,(bytes,bytes,bytes,bytes))": {
            "params": {
              "cToken": "The cToken which price we want to verify",
              "proofData": "UniswapOracle.ProofData"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "directory()": {
            "notice": "`FusePoolDirectory` contract object."
          },
          "getPoolAssetsByUser(address,address)": {
            "notice": "Returns arrays of FusePoolAsset for a specific user"
          },
          "getPoolAssetsWithData(address)": {
            "notice": "Returns the assets of the specified Fuse pool."
          },
          "getPoolSummary(address)": {
            "notice": "Returns total supply balance (in ETH), total borrow balance (in ETH), underlying token addresses, and underlying token symbols of a Fuse pool."
          },
          "getPoolsByAccountWithData(address)": {
            "notice": "Returns arrays of the indexes of Fuse pools created by `account`, data, total supply balances (in ETH), total borrow balances (in ETH), arrays of underlying token addresses, arrays of underlying asset symbols, and booleans indicating if retrieving each pool's data failed."
          },
          "getPoolsOfUserWithData(address)": {
            "notice": "Returns arrays of the indexes of Fuse pools used by `user`, data, total supply balances (in ETH), total borrow balances (in ETH), arrays of underlying token addresses, arrays of underlying asset symbols, and booleans indicating if retrieving each pool's data failed."
          },
          "getPublicPoolsByVerificationWithData(bool)": {
            "notice": "Returns arrays of all whitelisted public Fuse pool indexes, data, total supply balances (in ETH), total borrow balances (in ETH), arrays of underlying token addresses, arrays of underlying asset symbols, and booleans indicating if retrieving each pool's data failed."
          },
          "getPublicPoolsWithData()": {
            "notice": "Returns arrays of all public Fuse pool indexes, data, total supply balances (in ETH), total borrow balances (in ETH), arrays of underlying token addresses, arrays of underlying asset symbols, and booleans indicating if retrieving each pool's data failed."
          },
          "getWhitelistedPoolsByAccount(address)": {
            "notice": "Returns arrays of Fuse pool indexes and data with a whitelist containing `account`. Note that the whitelist does not have to be enforced."
          },
          "getWhitelistedPoolsByAccountWithData(address)": {
            "notice": "Returns arrays of the indexes of Fuse pools with a whitelist containing `account`, data, total supply balances (in ETH), total borrow balances (in ETH), arrays of underlying token addresses, arrays of underlying asset symbols, and booleans indicating if retrieving each pool's data failed."
          },
          "initialize(address,string,string,address[],string[],string[],string[],string[],string[])": {
            "notice": "Initialize the `FusePoolDirectory` contract object."
          },
          "verifyPrice(address,(bytes,bytes,bytes,bytes))": {
            "notice": "Verify that the price of `underlying` of the given cToken matches KeydonixUniswapTwapPriceOracle"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@pythnetwork/pyth-sdk-solidity/=lib/pyth-sdk-solidity/",
        ":ds-test/=lib/ds-test/src/",
        ":flywheel-v2/=lib/flywheel-v2/src/",
        ":flywheel/=lib/flywheel-v2/src/",
        ":forge-std/=lib/forge-std/src/",
        ":fuse-flywheel/=lib/fuse-flywheel/src/",
        ":libcompound/=lib/fuse-flywheel/lib/libcompound/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":ops/=lib/ops/contracts/",
        ":pyth-neon/=lib/pyth-neon/contracts/",
        ":pyth-sdk-solidity/=lib/pyth-sdk-solidity/",
        ":solidity-bytes-utils/=lib/solidity-bytes-utils/",
        ":solmate/=lib/solmate/src/",
        ":weird-erc20/=lib/fuse-flywheel/lib/libcompound/lib/solmate/lib/weird-erc20/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/FusePoolLens.sol": "FusePoolLens"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/FusePoolDirectory.sol": {
        "keccak256": "0xa22b1c1bfaeab93453d60806342a255c2d7b6efc62a40ccfecdec1aab4d5be3b",
        "urls": [
          "bzz-raw://ba9f231598280c85c3fa5e26b58c232ebcf00d2bf9bf9075879d92aca4626032",
          "dweb:/ipfs/QmYktu17RMUxhqWci7qYAw1zvTBvzVwgZ9RWq9KWNhz9Mt"
        ],
        "license": "UNLICENSED"
      },
      "contracts/FusePoolLens.sol": {
        "keccak256": "0xd67055dbbc3f7a42cc590491768f829c3ce6d928b8d50d6a6c0af8bee14cf959",
        "urls": [
          "bzz-raw://b777ae2624234990c0c5d6bd2efaab97d3ea03bda70eb1fd19618e69779899e9",
          "dweb:/ipfs/QmYEh8YVzzAM3onu848Yx6CT1VXf7CDK7ymySDi3G4i4AU"
        ],
        "license": "UNLICENSED"
      },
      "contracts/compound/CErc20.sol": {
        "keccak256": "0x8b91c46ec9c269b217ef8726bc393a0b4683e0215c03d8e9e9bfc693aa6e9aa7",
        "urls": [
          "bzz-raw://203f8c8633babc3324414ed4b784fa3cba59fd68ee817026edcb396c2ae67ad6",
          "dweb:/ipfs/QmdM1uML5Wmi7Bn6qpNaVbU9Prmj1XuFth3AGJWxjQg7Er"
        ],
        "license": "UNLICENSED"
      },
      "contracts/compound/CToken.sol": {
        "keccak256": "0xcabb8ed13fc7947c55681876053db281a4ac020488083120a1ef3dc3037e3143",
        "urls": [
          "bzz-raw://d711f86a5725de3f145cc1183d2746b5cafee765eedd933a3ffeb0b502bc03a1",
          "dweb:/ipfs/QmR2diDWQ5DT3RprTaA9P3ee78JqU4MVBcnZeUuhYin8z7"
        ],
        "license": "UNLICENSED"
      },
      "contracts/compound/CTokenInterfaces.sol": {
        "keccak256": "0xd4b57107e6dc7d0873f6e35aaa488ba6ae04eeb1f40ade4559903f92da47f9c3",
        "urls": [
          "bzz-raw://65f9633c77f892c42af5e5e4f6e2335e9827ab598d772a827cfddf7feae8717d",
          "dweb:/ipfs/QmU2iDDyynow923By71hmcSpgLhqfq3rJCmms1w1ri1NgS"
        ],
        "license": "UNLICENSED"
      },
      "contracts/compound/CarefulMath.sol": {
        "keccak256": "0x7425598d767521ba25277a7f95273c4705721aef0d7f2cd855cb6a61de709a7c",
        "urls": [
          "bzz-raw://a49979cd69acda0dd1e91a6e5b394cd4f507cec7de72551e4b85635d16af4bab",
          "dweb:/ipfs/QmT5gYwd9PcGmkopmiiWbJREyjkNdTRTcnAqaYVifTfhaJ"
        ],
        "license": "UNLICENSED"
      },
      "contracts/compound/Comptroller.sol": {
        "keccak256": "0x0f098662163194e168e1e4a9b06813a8ce62d5cfe5e96deba45f4f1d88478a6a",
        "urls": [
          "bzz-raw://625626a1d83be11bfd8d22c265ee5bed8162b6d11a0037efa5c4f08ae991eadb",
          "dweb:/ipfs/QmbEzs9TqNQKAri5YmsU1j2PEyBdMC5RWM6wZTZRbo38o1"
        ],
        "license": "UNLICENSED"
      },
      "contracts/compound/ComptrollerInterface.sol": {
        "keccak256": "0x82d6d81c2b784a7cafce53a5f611c9e33c08c55b262d0b56e425ed0f31a67d8c",
        "urls": [
          "bzz-raw://c1759c7ba99877046249ed166b880c8cfbef41f3ab9275db183b3aca06757d96",
          "dweb:/ipfs/QmbTMjUpw7tfArvQzu6iMxsRumSmXyPHw26M5SFkhrgXGS"
        ],
        "license": "UNLICENSED"
      },
      "contracts/compound/ComptrollerStorage.sol": {
        "keccak256": "0xfb35bd317958ecef0cca75aa5744598e877c571fe89a44cd7c05bf7ea03137ce",
        "urls": [
          "bzz-raw://75dabc0b26a97b0f42b516eeb5118838ce710059d5b70f32c30758e82bc6b567",
          "dweb:/ipfs/QmQGJ6V5vGVSjbQ8kBt237jQw2noydyifpHrFBM5o3ZGPw"
        ],
        "license": "UNLICENSED"
      },
      "contracts/compound/EIP20Interface.sol": {
        "keccak256": "0xcea1d290397e1c8eac89c96738e7ec55259a575f878152eeccf33c0cf6d008e5",
        "urls": [
          "bzz-raw://6adec9a5f68070b8edd0a7a08193c217164ac584676db102b68eab7c9e3b2fbf",
          "dweb:/ipfs/QmVQhJ2QBzKTc3BP7LLPzD5ujd4MX1rGUwWCQudQqSxkSw"
        ],
        "license": "UNLICENSED"
      },
      "contracts/compound/EIP20NonStandardInterface.sol": {
        "keccak256": "0x9dfa9662f27e690c0c307a32addde924cd072cf0c050807d990e03190c140754",
        "urls": [
          "bzz-raw://3e982b5f7b07a4d60b01fe5e7971d1b284266500c918a84a942b37b43c487126",
          "dweb:/ipfs/QmPoJb7vP6WHbMEC1XvBK8RBNYmTP3Jng6f94voG2tY3s1"
        ],
        "license": "UNLICENSED"
      },
      "contracts/compound/ErrorReporter.sol": {
        "keccak256": "0x4f36aa20081620a7ffc7373f482d044c2e357cab768f45af2e15dfcccd8c5c9c",
        "urls": [
          "bzz-raw://c83bc3334422d26ccca94e89710b622e2419b4dc707f937ed248ce6b62e01b12",
          "dweb:/ipfs/QmT2uDyoCffWiH9Y6VKDfp3ZoLXjLpsMjVqEyBpRpWpDEc"
        ],
        "license": "UNLICENSED"
      },
      "contracts/compound/Exponential.sol": {
        "keccak256": "0x648e262fbead58731c4347e3539e1c4b6f140d8752405f129874ec23b23b3f09",
        "urls": [
          "bzz-raw://7b32bb1254454aa6595ed20f66889547457c8f09afacb3ff26451e10fa248d7e",
          "dweb:/ipfs/QmNS27UzxsS4UNjYENFkHhsftiAqWBxJL27XPFYmMrQjKd"
        ],
        "license": "UNLICENSED"
      },
      "contracts/compound/ExponentialNoError.sol": {
        "keccak256": "0xec0df0038026b4e9c272de575121befd31d3a306fec5f157aaf1625fc08cfe69",
        "urls": [
          "bzz-raw://f4eb4f64e099db6dc47bafef030de8f7513060a5b19d743b2946618c527659a3",
          "dweb:/ipfs/QmbYLydWAZ1ENxPqRLWTGTCp2eiQfgUn63v4GPf3f7fWs4"
        ],
        "license": "UNLICENSED"
      },
      "contracts/compound/IFuseFeeDistributor.sol": {
        "keccak256": "0xa6bd7d7835ddd94ba8f3edab4ad08b1198808160fcfeb0b6da16214592a9361b",
        "urls": [
          "bzz-raw://877d138b7b6e5675b872b5ef120102e697b77a8247ba534d8672494603de0b88",
          "dweb:/ipfs/QmP5KnJLoesfUQUAfbiA5toayNQNrdcBciFaoFBNqk3oXY"
        ],
        "license": "UNLICENSED"
      },
      "contracts/compound/InterestRateModel.sol": {
        "keccak256": "0x587a54b49d48df2cd91583eac93ddde4e2849f79d0441f179bf835e9dffe24e9",
        "urls": [
          "bzz-raw://b202a68cbe90a5ecaa547808852641d7bfe93f9b8e3f3f3f6010423c182781d2",
          "dweb:/ipfs/QmYEzQQHVXNCMmhhFrv4hak2WDfs21SXs6DSh5q5wJ25AB"
        ],
        "license": "UNLICENSED"
      },
      "contracts/compound/PriceOracle.sol": {
        "keccak256": "0x16943951c151400d491d9e73a9e15ec264b54933775b313972cac6c943dddfa0",
        "urls": [
          "bzz-raw://be4bd86ac9624095926f8f1edd947cce8aba50106cd657a07651f3c5f382784b",
          "dweb:/ipfs/QmaEXvEDzXQWP97J9gJjFNwzjdfFz3QnRnmHnPR9sXkJFP"
        ],
        "license": "UNLICENSED"
      },
      "contracts/compound/Unitroller.sol": {
        "keccak256": "0x69e6c6242eeb835cd0b654f31f62742f7b3bf40c20a84e271f554a7820bc2d81",
        "urls": [
          "bzz-raw://bae351c187a33a6a46ba712199f9d3082325c9722e5fd61e19d50918ffab951a",
          "dweb:/ipfs/QmdLspNbQu2ffeXzqN5dYBHmXpzthPrJypH2Q5Q4odxWUs"
        ],
        "license": "UNLICENSED"
      },
      "contracts/external/compound/ICErc20.sol": {
        "keccak256": "0xb4174a86be37f5d7b0e1f02af3f81dfbc22ae8e7598cf9203169133372f2cde7",
        "urls": [
          "bzz-raw://cc50bcebe851381562e2703c85b1d804b128c15552a498a6960ba1dbc8c44a70",
          "dweb:/ipfs/QmP4ytBkmFJKjjuDjSLA6sJRuFkcafQwXXU42G19eH5H9T"
        ],
        "license": "BSD-3-Clause"
      },
      "contracts/external/compound/ICToken.sol": {
        "keccak256": "0x991ea6ca05ab996e74f1ca90a35d3e42d7f4484ac7a8fdfba90299434be296ba",
        "urls": [
          "bzz-raw://b159a93512d0bf074f9b26dde960ac9e501572ba9d67aa922d5591c3e842fd7b",
          "dweb:/ipfs/QmZ4K532EnqbU1qteMXbnURkMHqqVHDmTiQ1T8WpfQyQEA"
        ],
        "license": "BSD-3-Clause"
      },
      "contracts/external/compound/IComptroller.sol": {
        "keccak256": "0x562baa58762c9116d96921e9514c0ab958b38c1bfd44954f31441826fa969496",
        "urls": [
          "bzz-raw://cc79db4db10b221b5b220de45db5668da9db01b73dc68f58f07be743cf78397c",
          "dweb:/ipfs/QmRzbkPpdLnPX3H52uJ2xdFVehHJ7UDCzTLvs8Rbnv7nsi"
        ],
        "license": "BSD-3-Clause"
      },
      "contracts/external/compound/IPriceOracle.sol": {
        "keccak256": "0x501ba6588dc3bbcbcd7629eb294b2249dce97cb78e1c78feb1815d220b488368",
        "urls": [
          "bzz-raw://19fa30ac47cf668858b1d9e8842e1a2d9a6c8bbae85bc12ce8a0f1bbe0868559",
          "dweb:/ipfs/QmYuypErSBwLnNWjUBZiBvp5xJ95DxbBDCvCSnE3NZjaev"
        ],
        "license": "BSD-3-Clause"
      },
      "contracts/external/compound/IRewardsDistributor.sol": {
        "keccak256": "0x175299449a462109cf22ec786c1bcc820f16eba8052dcfa621e65666e657e3f3",
        "urls": [
          "bzz-raw://4986563cd770103066f69b5e86331a4bbbefc4337f94a260a46545da4416d858",
          "dweb:/ipfs/Qmd64tG56C3DS5gGHebbTEZi1TM6SXG1Ahot7paYjH8gKF"
        ],
        "license": "BSD-3-Clause"
      },
      "contracts/external/compound/IUnitroller.sol": {
        "keccak256": "0x629111448df95d5f4c6cae88cd8fceb67537af80e82f643e697d2dd4c22e1c49",
        "urls": [
          "bzz-raw://6cf120d715430134deccb0add41e71c92618843aba8bac15135e96fb912b0424",
          "dweb:/ipfs/QmaSRgMRrG8n5Ck4pZNaHj6LArRDGCnQ9wQhpL7WZ9MT6e"
        ],
        "license": "BSD-3-Clause"
      },
      "contracts/external/uniswap/IUniswapV2Pair.sol": {
        "keccak256": "0xc30635313c081ea723c128678f4d45c48aac88080d91578e8c4374774d26cba2",
        "urls": [
          "bzz-raw://4241df34bd8644d60b50202e64e98decc57a196a48c1f6a4e24b9e989bf22ee5",
          "dweb:/ipfs/QmNcTgxetxHYNUzZcHSK9cy2oWTyHveWFqAANueuXhgyL7"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/midas/SafeOwnableUpgradeable.sol": {
        "keccak256": "0x095b9ac7a021daed0a77802d75172bcfca6bd670d7a103212f0a72045da59c3d",
        "urls": [
          "bzz-raw://d2e4373695d9715adb1ef7c57a42d36474b5e99c4ecfd225d0e36fd310c0eb6e",
          "dweb:/ipfs/QmWP563j3p1xpNJs93PiASQdwTiTKEAyuAYWp5H6F3uj2j"
        ],
        "license": "UNLICENSED"
      },
      "contracts/midas/strategies/flywheel/MidasFlywheel.sol": {
        "keccak256": "0xf34451b315f3028619ddef5e1864e1447c055238d9f13e07cd0327a01ee25881",
        "urls": [
          "bzz-raw://f6b457a5202cf3de446906c97b00097548074bd485bd7a08237f9e65013386ed",
          "dweb:/ipfs/QmauRLpu3kvne3kRQeShqij9UjYGFPiBG66EvhRLLX1e38"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/midas/strategies/flywheel/MidasFlywheelCore.sol": {
        "keccak256": "0x3650eaffd7476d5495e2796619b5b211fe1c7d1c583b30853fc24575db96bf28",
        "urls": [
          "bzz-raw://e8ac9ee760051cce4d9c8fdc5feb09ee46ec22d7200fc4af37033b1f7682cf85",
          "dweb:/ipfs/QmbHDJvHoAbYA1R7zMPdHzdju9hFAJE9TVCtd5r5Mm53nK"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/oracles/BasePriceOracle.sol": {
        "keccak256": "0xfdb8a3439685177d0150249ec4984ab05fc8a9e4c9172dc714fbb456d0810d47",
        "urls": [
          "bzz-raw://fd1cdf268cb8e8294f6e52b3694316c86c88faadb42c6c626e37705dc8b171f6",
          "dweb:/ipfs/QmSeDmDZvJ4XbF8s9taT5YMgtZUpkgNnufZufLXkSaYUpZ"
        ],
        "license": "UNLICENSED"
      },
      "contracts/oracles/MasterPriceOracle.sol": {
        "keccak256": "0x1001a7192fa0c55bac14165ede7254047e2cb0c92644f8ea1331c40577b2c59b",
        "urls": [
          "bzz-raw://676e8fe5741ac14911f13283e4d59cf3982706756c5fa8181f03aa14f6155423",
          "dweb:/ipfs/QmNRbuwiNBXpTuFmAPUxruA9h95P2m9muiYPXhuuSbKmQc"
        ],
        "license": "UNLICENSED"
      },
      "contracts/oracles/default/IKeydonixUniswapTwapPriceOracle.sol": {
        "keccak256": "0xfb47c934f3ffd2d88131f80009daceed8ac606679816a0ddc92e34fa3b613c5d",
        "urls": [
          "bzz-raw://a6e60859d3569a5c4cbe636aad208cae7c0f3ad04b7ddf13a773f17fdd40a6d2",
          "dweb:/ipfs/QmX434As2S7L6GPWbfUL2dRmLgoqjHM5pEH6GnhXcv3pVn"
        ],
        "license": "UNLICENSED"
      },
      "contracts/oracles/keydonix/BlockVerifier.sol": {
        "keccak256": "0x39dc485e740f06d4ccc6b60f10f1b6115164f337d725907a95a4b726d3daae7d",
        "urls": [
          "bzz-raw://d7987918d06429de1af061d50692ff5704182f9fa54d1e5f087ed640bcdf8106",
          "dweb:/ipfs/QmZfCRipobm6KdQX5cMjZsP2doARN8doUT2F8hvvSWSfwD"
        ],
        "license": null
      },
      "contracts/oracles/keydonix/MerklePatriciaVerifier.sol": {
        "keccak256": "0x0ce9ef102017d95bf051d23a0d3a6cbbf779b85ee22d4ed3ce49f487033bc3bb",
        "urls": [
          "bzz-raw://bc85b1488023d10c0773e79610d6ed381420e5dd34d7ac67eb7cbf17b0fef83f",
          "dweb:/ipfs/QmUiYtZpjcp1FVj4DvCyq1c3JS6xZ3aP5VS4uakNT5WPNs"
        ],
        "license": null
      },
      "contracts/oracles/keydonix/Rlp.sol": {
        "keccak256": "0x1741e474d2450a2320d341a8a6dc030f62ab8e49bec15081fad98b410e698175",
        "urls": [
          "bzz-raw://56de72b5cffd92dc32cf0f8a4e699f9481c353928e1cdb7326fcbdb18d1e5510",
          "dweb:/ipfs/QmccEncEPbuH62pXFtyK38EkJard19tnP4MNE1K7tfJfKq"
        ],
        "license": null
      },
      "contracts/oracles/keydonix/UQ112x112.sol": {
        "keccak256": "0xae4b6392222bd5e9531b33c140fe07532145a5e2c8e64d96fac351d7006e0416",
        "urls": [
          "bzz-raw://a1b0450bb5ffbe9e35aed21304e4d0375ada76e9d83320a95776ec1b723365f5",
          "dweb:/ipfs/QmVDzfSw2kop2aLwarCQjLEzQNX7G8CK3kyrZBjMYjnLv4"
        ],
        "license": null
      },
      "contracts/oracles/keydonix/UniswapOracle.sol": {
        "keccak256": "0x7b5dbd3a6299fc9c2296e88c45359c924300fbea87a38d061fa02ab86ebc54cd",
        "urls": [
          "bzz-raw://b11c25713c6bb81e47c12c03a2a6db13fbb6fe088503c1dcd1ec3565be278c11",
          "dweb:/ipfs/QmeKWx5t8VtE7JMCmfjkLq992qo7t5HSLSFCS9FYfpDGS5"
        ],
        "license": null
      },
      "contracts/utils/PatchedStorage.sol": {
        "keccak256": "0x1c0b8b49dea330179c5a8c753f7ae5f5914354a9a79949620fc4cf26e70fd634",
        "urls": [
          "bzz-raw://9577a38165b1a5a6cc7ba4c093fe61b1872230bec72afc231a561ed56e688044",
          "dweb:/ipfs/QmaMvXo6Rd5vWwTJw1QxPNCCMrb79kQ6Fp8LSc7ed1iyik"
        ],
        "license": "UNLICENSED"
      },
      "lib/flywheel-v2/src/FlywheelCore.sol": {
        "keccak256": "0x4b8d71408e2a1c5c1d1800d63d1dc5eb8dc51298a8633753d0188e43c0103a00",
        "urls": [
          "bzz-raw://5010891d2d0434605b901a44e200fa93e7a530f8dffa3ebbc8e2188e6aec9e88",
          "dweb:/ipfs/QmR7VbWWZ7zpcKfBoJboR2uqRBpHwkYQ5zsL2hVUfcizs2"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/flywheel-v2/src/interfaces/IFlywheelBooster.sol": {
        "keccak256": "0x37dd3fce4e213452f8483c6647f5eaa862087af6673828b16e844a1be40a8b39",
        "urls": [
          "bzz-raw://23164e5512573e53d24174c4115babab94cd85ad91125fc1ee2d05e20dcffc96",
          "dweb:/ipfs/QmXn7Ucmb7iZR2iz1jxf2nPg4Kx5KPZSg3KGhefXDo6scn"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/flywheel-v2/src/interfaces/IFlywheelRewards.sol": {
        "keccak256": "0xed4398787395ee45cd48f73d236c610c9bcb7b997c4c44dc2e36bcef3d03f74c",
        "urls": [
          "bzz-raw://c3ef1fce0e7bc3c0a2a20ef2305458a419bd51f4af5c354ea42467636ee324a7",
          "dweb:/ipfs/QmUkSxcEf4F9QR4QVEt6rrKjQ9gtufSCLtCwP1iRxmJshk"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0x17aff86be546601617585e91fd98aad74cf39f1be65d8eb6f93b7f3c30181275",
        "urls": [
          "bzz-raw://e75109e30d04e3fe6e31e0294ca357a695911b3599582be39e89b1207273773a",
          "dweb:/ipfs/QmRRgRNTjXRjn7aqyaSfm8rDiCEDyoVhHnENXj6TZbrnGR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
        "urls": [
          "bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
          "dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0xf8313972e73a49ff9a8c2dee0b9a07a3585bc4d077bd8a9670ebdd76ff390177",
        "urls": [
          "bzz-raw://3fc2a0888fca21e976b4b77ca46891f547ff339a8175bc0a6461a62ce65aa89a",
          "dweb:/ipfs/QmYDpaGK98esv36MBanhjgzpS7QcisrsVMzttPknvxWhRG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/Create2Upgradeable.sol": {
        "keccak256": "0x07847abb8f373a49b9155649d6e924f0c7840e465d9bd81fd33a9a7a6e41d25a",
        "urls": [
          "bzz-raw://774a86c85d126501b5f6fa23cd8ebaa82e37863a88297aa3ad03dd775a03498c",
          "dweb:/ipfs/QmZd5sxq27fZ4rRSDh4nDGoDze5eRQkzKNsmQHzaqtVk4r"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/auth/Auth.sol": {
        "keccak256": "0xd5cf8213a40d727af89c93dd359ad68984c123c1a1a93fc9ad7ba62b3436fb75",
        "urls": [
          "bzz-raw://70e87bbc23f0b02fe804779714d65f559db59827d48e5243ee029eaf1c48289d",
          "dweb:/ipfs/QmZtq71QoREyPjoPU3ozq9Fae62jP5kjrcgcEnh4ytFPhf"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeCastLib.sol": {
        "keccak256": "0x636e0f18c1b287c9342e14660a914b37a927d9f64d6c29e27016784979ce8d59",
        "urls": [
          "bzz-raw://7a188290b5ba3c17099bfca1405de70098ee66b0f3027f137de9556ec9300e0e",
          "dweb:/ipfs/QmeXGCTzCvRvS6GydDTmKD2kfQHdBx1Ffk52CdyN6iqXvd"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300",
        "urls": [
          "bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41",
          "dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "bytecode": {
    "object": "",
    "sourceMap": "875:19709:2:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "875:19709:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3065:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17615:242;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;17071:192::-;;;;;;:::i;:::-;;:::i;1640:1421::-;;;;;;:::i;:::-;;:::i;:::-;;6174:466;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;9028:1579::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;19577:490::-;;;;;;:::i;:::-;;:::i;3087:20::-;;;:::i;18125:935::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3494:34::-;;;;;-1:-1:-1;;;;;3494:34:2;;;;;;-1:-1:-1;;;;;17414:32:347;;;17396:51;;17384:2;17369:18;3494:34:2;17224:229:347;20299:283:2;;;;;;:::i;:::-;;:::i;:::-;;;;18193:25:347;;;18249:2;18234:18;;18227:34;;;;18166:18;20299:283:2;18019:248:347;4238:435:2;;;:::i;5167:507::-;;;;;;:::i;:::-;;:::i;7134:445::-;;;;;;:::i;:::-;;:::i;3065:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;17615:242::-;17797:29;;-1:-1:-1;;;17797:29:2;;-1:-1:-1;;;;;17414:32:347;;;17797:29:2;;;17396:51:347;17700:22:2;;17730:29;;17762:71;;17784:11;;17797:23;;;;;17369:18:347;;17797:29:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17797:29:2;;;;;;;;;;;;:::i;:::-;17828:4;17762:21;:71::i;:::-;17730:103;17615:242;-1:-1:-1;;;;17615:242:2:o;17071:192::-;17146:22;17183:75;17205:11;17218;-1:-1:-1;;;;;17218:25:2;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17218:27:2;;;;;;;;;;;;:::i;:::-;17247:10;17183:21;:75::i;:::-;17176:82;17071:192;-1:-1:-1;;17071:192:2:o;1640:1421::-;3111:19:305;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:305;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:305;1476:19:313;:23;;;3219:66:305;;-1:-1:-1;3268:12:305;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:305;;20428:2:347;3157:201:305;;;20410:21:347;20467:2;20447:18;;;20440:30;20506:34;20486:18;;;20479:62;-1:-1:-1;;;20557:18:347;;;20550:44;20611:19;;3157:201:305;;;;;;;;;3368:12;:16;;-1:-1:-1;;3368:16:305;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:305;;;;;3394:65;-1:-1:-1;;;;;2036:33:2;::::1;2028:100;;;::::0;-1:-1:-1;;;2028:100:2;;20843:2:347;2028:100:2::1;::::0;::::1;20825:21:347::0;20882:2;20862:18;;;20855:30;20921:34;20901:18;;;20894:62;-1:-1:-1;;;20972:18:347;;;20965:52;21034:19;;2028:100:2::1;20641:418:347::0;2028:100:2::1;2179:15;:22;2149:19;:26;:52;:110;;;;;2235:17;:24;2205:19;:26;:54;2149:110;2134:179;;;::::0;-1:-1:-1;;;2134:179:2;;21266:2:347;2134:179:2::1;::::0;::::1;21248:21:347::0;21305:2;21285:18;;;21278:30;21344:34;21324:18;;;21317:62;-1:-1:-1;;;21395:18:347;;;21388:36;21441:19;;2134:179:2::1;21064:402:347::0;2134:179:2::1;2365:22;:29;2334:20;:27;:60;:137;;;;;2437:27;:34;2406:20;:27;:65;2334:137;2319:209;;;::::0;-1:-1:-1;;;2319:209:2;;21673:2:347;2319:209:2::1;::::0;::::1;21655:21:347::0;21712:2;21692:18;;;21685:30;21751:34;21731:18;;;21724:62;-1:-1:-1;;;21802:18:347;;;21795:39;21851:19;;2319:209:2::1;21471:405:347::0;2319:209:2::1;2535:9;:22:::0;;-1:-1:-1;;;;;;2535:22:2::1;-1:-1:-1::0;;;;;2535:22:2;::::1;;::::0;;2563:12;;::::1;::::0;-1:-1:-1;;2563:12:2::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2581:16:2;;::::1;::::0;:6:::1;::::0;:16:::1;::::0;::::1;::::0;::::1;:::i;:::-;;2608:9;2603:177;2627:19;:26;2623:1;:30;2603:177;;;2704:69;;;;;;;;2722:15;2738:1;2722:18;;;;;;;;:::i;:::-;;;;;;;2704:69;;;;2750:17;2768:1;2750:20;;;;;;;;:::i;:::-;;;;;;;2704:69;;::::0;2668:9:::1;:33;2678:19;2698:1;2678:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;2668:33:2::1;-1:-1:-1::0;;;;;2668:33:2::1;;;;;;;;;;;;:105;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;2668:105:2::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;2655:3;;;;;:::i;:::-;;;;2603:177;;;;2791:9;2786:271;2810:20;:27;2806:1;:31;2786:271;;;2852:11;2878:164;;;;;;;;2908:20;2929:1;2908:23;;;;;;;;:::i;:::-;;;;;;;2878:164;;;;2951:22;2974:1;2951:25;;;;;;;;:::i;:::-;;;;;;;2878:164;;;;3001:27;3029:1;3001:30;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;2878:164;;;2852:198;;::::1;::::0;::::1;::::0;;-1:-1:-1;2852:198:2;;;;;;;;;;;;;::::1;;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2852:198:2::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2852:198:2::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;;;;2839:3;;;;;:::i;:::-;;;;2786:271;;;;3483:14:305::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:305;;;3553:14;;-1:-1:-1;22437:36:347;;3553:14:305;;22425:2:347;22410:18;3553:14:305;;;;;;;3479:99;3101:483;1640:1421:2;;;;;;;;;:::o;6174:466::-;6462:9;;:36;;-1:-1:-1;;;6462:36:2;;-1:-1:-1;;;;;17414:32:347;;;6462:36:2;;;17396:51:347;6259:16:2;;;;;;;;6384:24;;;;6462:9;;;;:27;;17369:18:347;;6462:36:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6462:36:2;;;;;;;;;;;;:::i;:::-;6383:115;;;;6505:26;6533:21;6558:26;6571:12;6558;:26::i;:::-;6598:7;;6607:12;;-1:-1:-1;6607:12:2;-1:-1:-1;6598:7:2;;-1:-1:-1;6174:466:2;;-1:-1:-1;;;;6174:466:2:o;9028:1579::-;9111:7;9126;9141:16;9165:15;9188:4;9207:19;9229:1;9207:23;;9236:19;9265:24;9292:11;-1:-1:-1;;;;;9292:25:2;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9292:27:2;;;;;;;;;;;;:::i;:::-;9265:54;;9325:33;9375:7;:14;-1:-1:-1;;;;;9361:29:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9361:29:2;;9325:65;;9396:33;9445:7;:14;-1:-1:-1;;;;;9432:28:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9396:64;;9466:19;9488:11;-1:-1:-1;;;;;9488:18:2;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9466:42;;9520:9;9515:918;9539:7;:14;9535:1;:18;9515:918;;;9568:14;9585:7;9593:1;9585:10;;;;;;;;:::i;:::-;;;;;;;9568:27;;9604:13;9623:11;-1:-1:-1;;;;;9623:19:2;;9651:6;9623:36;;;;;;;;;;;;;;-1:-1:-1;;;;;17414:32:347;;;;17396:51;;17384:2;17369:18;;17224:229;9623:36:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9603:56;;;9672:8;9667:23;;9682:8;;;;9667:23;9698:24;9725:6;-1:-1:-1;;;;;9725:26:2;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9698:55;;9761:24;9894:6;-1:-1:-1;;;;;9894:20:2;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9868:6;-1:-1:-1;;;;;9868:21:2;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9843:6;-1:-1:-1;;;;;9843:20:2;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;;;;:::i;:::-;:73;;;;:::i;:::-;9815:16;9788:6;-1:-1:-1;;;;;9788:14:2;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;;;;:::i;:::-;:129;;;;:::i;:::-;9951:33;;-1:-1:-1;;;9951:33:2;;-1:-1:-1;;;;;17414:32:347;;;9951:33:2;;;17396:51:347;9761:156:2;;-1:-1:-1;9925:23:2;;9951:25;;;;;17369:18:347;;9951:33:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9925:59;-1:-1:-1;10059:4:2;10021:34;9925:59;10021:16;:34;:::i;:::-;10020:43;;;;:::i;:::-;10006:57;;:11;:57;:::i;:::-;9992:71;-1:-1:-1;10138:4:2;10100:34;10119:15;10100:16;:34;:::i;:::-;10099:43;;;;:::i;:::-;10085:57;;:11;:57;:::i;:::-;10071:71;;10155:6;-1:-1:-1;;;;;10155:15:2;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10151:276;;;10214:1;10184:16;10201:1;10184:19;;;;;;;;:::i;:::-;;;;;;:32;-1:-1:-1;;;;;10184:32:2;;;-1:-1:-1;;;;;10184:32:2;;;;;10249:6;10226:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:17;10244:1;10226:20;;;;;;;;:::i;:::-;;;;;;:29;;;;10151:276;;;10318:6;-1:-1:-1;;;;;10302:35:2;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10280:16;10297:1;10280:19;;;;;;;;:::i;:::-;;;;;;:59;-1:-1:-1;;;;;10280:59:2;;;-1:-1:-1;;;;;10280:59:2;;;;;10376:42;10398:16;10415:1;10398:19;;;;;;;;:::i;:::-;;;;;;;10376:21;:42::i;:::-;10349:69;;10352:17;10370:1;10352:20;;;;;;;;:::i;:::-;;;;;;10349:69;;;;10151:276;9560:873;;;;;9515:918;9555:3;;;;:::i;:::-;;;;9515:918;;;;10439:21;10463:9;;;;;;;;;-1:-1:-1;;;;;10463:9:2;-1:-1:-1;;;;;10463:24:2;;10488:11;-1:-1:-1;;;;;10488:17:2;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10463:45;;-1:-1:-1;;;;;;10463:45:2;;;;;;;-1:-1:-1;;;;;17414:32:347;;;10463:45:2;;;17396:51:347;17369:18;;10463:45:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10522:11;;10535;;-1:-1:-1;10548:16:2;;-1:-1:-1;10566:17:2;;-1:-1:-1;10522:11:2;;-1:-1:-1;9028:1579:2;;-1:-1:-1;;;;;9028:1579:2:o;19577:490::-;19673:16;19697:35;19740:21;19769:13;19798:24;19824:48;19876:49;19912:7;19876:28;:49::i;3087:20::-;;;;;;;:::i;18125:935::-;18213:16;18231:35;18276:41;18320:9;;;;;;;;;-1:-1:-1;;;;;18320:9:2;-1:-1:-1;;;;;18320:21:2;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18320:23:2;;;;;;;;;;;;:::i;:::-;18276:67;;18349:19;18384:9;18379:177;18403:5;:12;18399:1;:16;18379:177;;;18430:24;18470:5;18476:1;18470:8;;;;;;;;:::i;:::-;;;;;;;:20;;;18430:61;;18504:11;-1:-1:-1;;;;;18504:21:2;;18526:7;18504:30;;;;;;;;;;;;;;-1:-1:-1;;;;;17414:32:347;;;;17396:51;;17384:2;17369:18;;17224:229;18504:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18500:49;;;18536:13;;;;:::i;:::-;;;;18500:49;-1:-1:-1;18417:3:2;;;;:::i;:::-;;;;18379:177;;;;18562:24;18603:11;-1:-1:-1;;;;;18589:26:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18589:26:2;;18562:53;;18621:48;18705:11;-1:-1:-1;;;;;18672:45:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18672:45:2;;;;;;;;;;;;;;;;;18621:96;;18723:13;18752:9;18747:272;18771:5;:12;18767:1;:16;18747:272;;;18798:24;18838:5;18844:1;18838:8;;;;;;;;:::i;:::-;;;;;;;:20;;;18798:61;;18872:11;-1:-1:-1;;;;;18872:21:2;;18894:7;18872:30;;;;;;;;;;;;;;-1:-1:-1;;;;;17414:32:347;;;;17396:51;;17384:2;17369:18;;17224:229;18872:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18868:145;;;18931:1;18914:7;18922:5;18914:14;;;;;;;;:::i;:::-;;;;;;:18;;;;;18964:5;18970:1;18964:8;;;;;;;;:::i;:::-;;;;;;;18942:12;18955:5;18942:19;;;;;;;;:::i;:::-;;;;;;:30;;;;18982:7;;;;;:::i;:::-;;;;18999:5;;;18868:145;-1:-1:-1;18785:3:2;;;;:::i;:::-;;;;18747:272;;;-1:-1:-1;19033:7:2;;19042:12;;-1:-1:-1;18125:935:2;-1:-1:-1;;;;;18125:935:2:o;20299:283::-;20396:7;20405;20420:19;20455:6;-1:-1:-1;;;;;20455:18:2;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;20442:41:2;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20498:79;;-1:-1:-1;;;20498:79:2;;20420:65;;-1:-1:-1;;;;;;20498:60:2;;;;;:79;;20559:6;;20567:9;;20498:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20491:86;;;;;20299:283;;;;;;:::o;4238:435::-;4305:16;4329:35;4372:21;4401:13;4430:24;4456:47;4507:9;;;;;;;;;-1:-1:-1;;;;;4507:9:2;-1:-1:-1;;;;;4507:24:2;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4507:26:2;;;;;;;;;;;;:::i;:::-;4429:104;;;;4540:26;4568:21;4593:25;4606:11;4593:12;:25::i;:::-;4632:7;;4641:11;;-1:-1:-1;4641:11:2;-1:-1:-1;4632:7:2;;-1:-1:-1;4238:435:2;;-1:-1:-1;;;4238:435:2:o;5167:507::-;5471:9;;:63;;-1:-1:-1;;;5471:63:2;;31238:14:347;;31231:22;5471:63:2;;;31213:41:347;5269:16:2;;;;;;;;5394:24;;;;-1:-1:-1;;;;;5471:9:2;;;;:45;;31186:18:347;;5471:63:2;31073:187:347;7134:445:2;7413:9;;:30;;-1:-1:-1;;;7413:30:2;;-1:-1:-1;;;;;17414:32:347;;;7413:30:2;;;17396:51:347;7213:16:2;;;;;;;;7338:24;;;;7413:9;;;;:24;;17369:18:347;;7413:30:2;17224:229:347;11926:3103:2;12057:22;12087:19;12122:9;12117:155;12141:7;:14;12137:1;:18;12117:155;;;12171:13;12190:11;-1:-1:-1;;;;;12190:19:2;;12218:7;12226:1;12218:10;;;;;;;;:::i;:::-;;;;;;;12190:40;;;;;;;;;;;;;;-1:-1:-1;;;;;17414:32:347;;;;17396:51;;17384:2;17369:18;;17224:229;12190:40:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12170:60;;;12242:8;12238:27;;;12252:13;;;;:::i;:::-;;;;12238:27;-1:-1:-1;12157:3:2;;;;:::i;:::-;;;;12117:155;;;;12278:37;12338:11;-1:-1:-1;;;;;12318:32:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;12278:72;;12356:13;12379:19;12401:11;-1:-1:-1;;;;;12401:18:2;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12379:42;;12433:9;12428:2567;12452:7;:14;12448:1;:18;12428:2567;;;12543:13;12558:32;12594:11;-1:-1:-1;;;;;12594:19:2;;12622:7;12630:1;12622:10;;;;;;;;:::i;:::-;;;;;;;12594:40;;;;;;;;;;;;;;-1:-1:-1;;;;;17414:32:347;;;;17396:51;;17384:2;17369:18;;17224:229;12594:40:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12542:92;;;;12647:8;12642:23;;12657:8;;;;12642:23;12718:26;;:::i;:::-;12752:14;12769:7;12777:1;12769:10;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;12787:30:2;;;;;12865:17;;;-1:-1:-1;;;12865:17:2;;;;12769:10;;-1:-1:-1;12787:30:2;;12865:15;;:17;;;;;;;;;;12787:30;12865:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12861:585;;;12917:4;12894:27;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:5;:20;;:27;;;;12956:6;12931:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12931:22:2;;;:31;12999:2;12972:24;;;:29;-1:-1:-1;;;;;13037:12:2;;;13011:23;;;:38;12861:585;;;13114:6;-1:-1:-1;;;;;13098:35:2;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;13074:61:2;:21;;;:61;;;13273:44;13074:61;13273:21;:44::i;:::-;13225:5;:20;;13247:5;:22;;13224:93;;;;;;;;13354:10;-1:-1:-1;;;;;13354:19:2;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13327:48;;:24;;;:48;13411:26;;-1:-1:-1;;;13411:26:2;;-1:-1:-1;;;;;17414:32:347;;;13411:26:2;;;17396:51:347;13411:20:2;;;;;17369:18:347;;13411:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13385:23;;;:52;-1:-1:-1;12861:585:2;13506:6;-1:-1:-1;;;;;13506:25:2;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13479:5;:24;;:54;;;;;13568:6;-1:-1:-1;;;;;13568:25:2;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13541:5;:24;;:54;;;;;13621:6;-1:-1:-1;;;;;13621:14:2;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13603:5;:15;;:34;;;;;13665:6;-1:-1:-1;;;;;13665:26:2;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13645:5;:17;;:48;;;;;13835:6;-1:-1:-1;;;;;13835:20:2;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13809:6;-1:-1:-1;;;;;13809:21:2;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13784:6;-1:-1:-1;;;;;13784:20:2;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;;;;:::i;:::-;:73;;;;:::i;:::-;13755:5;:17;;;13729:5;:15;;;:43;;;;:::i;:::-;:129;;;;:::i;:::-;13701:17;;;:157;13888:32;;-1:-1:-1;;;13888:32:2;;-1:-1:-1;;;;;17414:32:347;;;13888::2;;;17396:51:347;13888:26:2;;;;;17369:18:347;;13888:32:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13866:19;;;:54;13950:32;;-1:-1:-1;;;13950:32:2;;-1:-1:-1;;;;;17414:32:347;;;13950::2;;;17396:51:347;13950:26:2;;;;;17369:18:347;;13950:32:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13928:19;;;:54;14083:41;;-1:-1:-1;;;14083:41:2;;-1:-1:-1;;;;;31790:15:347;;;14083:41:2;;;31772:34:347;31842:15;;;31822:18;;;31815:43;14083:27:2;;;;;31707:18:347;;14083:41:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14064:60;;:16;;;:60;14153:27;;;-1:-1:-1;;;14153:27:2;;;;-1:-1:-1;;;;;14153:25:2;;;;;:27;;;;;;;;;;;;;;:25;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14132:18;;;:48;14285:33;;-1:-1:-1;;;14285:33:2;;-1:-1:-1;;;;;17414:32:347;;;14285:33:2;;;17396:51:347;14285:25:2;;;;;17369:18:347;;14285:33:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14261:21;;;:57;-1:-1:-1;;;;;14363:30:2;;;:12;;;:30;;;14446:21;;;;14406:62;;-1:-1:-1;;;14406:62:2;;17414:32:347;;14406:62:2;;;17396:51:347;14363:30:2;14406:39;;17369:18:347;;14406:62:2;;;;;;;;;;;;;;;;;;-1:-1:-1;14406:62:2;;;;;;;;-1:-1:-1;;14406:62:2;;;;;;;;;;;;:::i;:::-;;;14402:157;;;;;-1:-1:-1;;;;;14510:31:2;:12;;;:31;14402:157;14618:24;14593:5;:22;;:49;;;;;14672:6;-1:-1:-1;;;;;14672:28:2;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14650:5;:19;;:52;;;;;14727:6;-1:-1:-1;;;;;14727:23:2;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14710:5;:14;;:42;;;;;14776:6;-1:-1:-1;;;;;14776:22:2;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14760:13;;;:40;14837:49;;-1:-1:-1;;;14837:49:2;;-1:-1:-1;;;;;17414:32:347;;;14837:49:2;;;17396:51:347;14837:32:2;;;;;17369:18:347;;14837:49:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14808:78;;:26;;;:78;14944:21;;14808:5;;14944:14;;14959:5;;14944:21;;;;;;:::i;:::-;;;;;;:29;;;;14981:7;;;;;:::i;:::-;;;;12473:2522;;;;12428:2567;12468:3;;;;:::i;:::-;;;;12428:2567;;;-1:-1:-1;15009:14:2;;11926:3103;-1:-1:-1;;;;;;;11926:3103:2:o;8080:776::-;8171:21;8194:13;8217:26;8265:5;:12;-1:-1:-1;;;;;8246:32:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8246:32:2;;;;;;;;;;;;;;;;;8217:61;;8284:21;8319:5;:12;-1:-1:-1;;;;;8308:24:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8308:24:2;;8284:48;;8344:9;8339:484;8363:5;:12;8359:1;:16;8339:484;;;8394:4;-1:-1:-1;;;;;8394:19:2;;8427:5;8433:1;8427:8;;;;;;;;:::i;:::-;;;;;;;:20;;;8394:55;;;;;;;;;;;;;;-1:-1:-1;;;;;17414:32:347;;;;17396:51;;17384:2;17369:18;;17224:229;8394:55:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8394:55:2;;;;;;;;;;;;:::i;:::-;;;8390:427;;8804:4;8791:7;8799:1;8791:10;;;;;;;;:::i;:::-;:17;;;:10;;;;;;;;;;;:17;8390:427;;;8667:98;;;;;;;;8680:12;8667:98;;;;8694:12;8667:98;;;;8708:17;8667:98;;;;8727:18;8667:98;;;;8747:17;8667:98;;;;;8657:4;8662:1;8657:7;;;;;;;;:::i;:::-;;;;;;:108;;;;8450:324;;;;;8390:427;8377:3;;;;:::i;:::-;;;;8339:484;;;-1:-1:-1;8837:4:2;;8843:7;;-1:-1:-1;8080:776:2;-1:-1:-1;;8080:776:2:o;15255:1426::-;-1:-1:-1;;;;;15416:16:2;;;;;;:9;:16;;;;;:23;;15410:37;;15324:13;;;;15410:37;;;:::i;:::-;:42;;-1:-1:-1;15406:118:2;;-1:-1:-1;;;;;15470:16:2;;;;;;:9;:16;;;;;15462:55;;15493:23;;;;15470:16;;15462:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15255:1426;;;:::o;15406:118::-;15577:30;15627:5;15577:56;;15639:19;15661:13;-1:-1:-1;;;;;15661:18:2;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15661:20:2;;;;;;;;;;;;:::i;:::-;15639:42;;15687:21;15711:13;-1:-1:-1;;;;;15711:20:2;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15711:22:2;;;;;;;;;;;;:::i;:::-;16661:5;;15687:46;;-1:-1:-1;15255:1426:2;;-1:-1:-1;;;;15255:1426:2:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;14:258:347;86:1;96:113;110:6;107:1;104:13;96:113;;;186:11;;;180:18;167:11;;;160:39;132:2;125:10;96:113;;;227:6;224:1;221:13;218:48;;;262:1;253:6;248:3;244:16;237:27;218:48;;14:258;;;:::o;277:::-;319:3;357:5;351:12;384:6;379:3;372:19;400:63;456:6;449:4;444:3;440:14;433:4;426:5;422:16;400:63;:::i;:::-;517:2;496:15;-1:-1:-1;;492:29:347;483:39;;;;524:4;479:50;;277:258;-1:-1:-1;;277:258:347:o;540:220::-;689:2;678:9;671:21;652:4;709:45;750:2;739:9;735:18;727:6;709:45;:::i;:::-;701:53;540:220;-1:-1:-1;;;540:220:347:o;765:145::-;-1:-1:-1;;;;;854:31:347;;844:42;;834:70;;900:1;897;890:12;834:70;765:145;:::o;915:438::-;1005:6;1013;1066:2;1054:9;1045:7;1041:23;1037:32;1034:52;;;1082:1;1079;1072:12;1034:52;1121:9;1108:23;1140:45;1179:5;1140:45;:::i;:::-;1204:5;-1:-1:-1;1261:2:347;1246:18;;1233:32;1274:47;1233:32;1274:47;:::i;:::-;1340:7;1330:17;;;915:438;;;;;:::o;1563:3176::-;1767:4;1796:2;1836;1825:9;1821:18;1866:2;1855:9;1848:21;1889:6;1924;1918:13;1955:6;1947;1940:22;1981:2;1971:12;;2014:2;2003:9;1999:18;1992:25;;2076:2;2066:6;2063:1;2059:14;2048:9;2044:30;2040:39;2114:2;2106:6;2102:15;2135:1;2145:2565;2159:6;2156:1;2153:13;2145:2565;;;2224:22;;;-1:-1:-1;;2220:36:347;2208:49;;2280:13;;2354:9;;-1:-1:-1;;;;;1424:31:347;1412:44;;2316:6;2411:11;;;2405:18;-1:-1:-1;;;;;1424:31:347;;2469:15;;;1412:44;2436:49;2534:2;2530;2526:11;2520:18;2575:2;2570;2562:6;2558:15;2551:27;2605:50;2651:2;2643:6;2639:15;2623:14;2605:50;:::i;:::-;2591:64;;;2678:4;2731:2;2727;2723:11;2717:18;2784:6;2776;2772:19;2767:2;2759:6;2755:15;2748:44;2819:41;2853:6;2837:14;2819:41;:::i;:::-;2883:4;2930:11;;;2924:18;2907:15;;;2900:43;2966:4;3013:11;;;3007:18;2990:15;;;2983:43;3049:4;3096:11;;;3090:18;3073:15;;;3066:43;3132:4;3179:11;;;3173:18;3156:15;;;3149:43;3216:6;3266:12;;;3260:19;3242:16;;;3235:45;3304:6;3354:12;;;3348:19;3330:16;;;3323:45;3392:6;3442:12;;;3436:19;3418:16;;;3411:45;3480:6;3530:12;;;3524:19;3506:16;;;3499:45;3568:6;3618:12;;;3612:19;3594:16;;;3587:45;3656:6;3703:12;;;3697:19;1537:13;1530:21;3761:16;;;1518:34;3802:6;3852:12;;;3846:19;3828:16;;;3821:45;3890:6;3940:12;;;3934:19;3916:16;;;3909:45;3978:6;4025:12;;;4019:19;-1:-1:-1;;;;;1424:31:347;4086:16;;;1412:44;4127:6;4177:12;;;4171:19;4153:16;;;4146:45;4215:6;4265:12;;;4259:19;4241:16;;;4234:45;4303:6;4353:12;;;4347:19;4329:16;;;4322:45;4391:6;4441:12;;;4435:19;4417:16;;;4410:45;4479:6;4526:12;;;4520:19;1537:13;1530:21;4584:16;;;;1518:34;;;;-1:-1:-1;;;4688:12:347;;;;4653:15;;;;2181:1;2174:9;2145:2565;;;-1:-1:-1;4727:6:347;;1563:3176;-1:-1:-1;;;;;;;;1563:3176:347:o;4744:283::-;4825:6;4878:2;4866:9;4857:7;4853:23;4849:32;4846:52;;;4894:1;4891;4884:12;4846:52;4933:9;4920:23;4952:45;4991:5;4952:45;:::i;5032:167::-;5119:20;;5148:45;5119:20;5148:45;:::i;:::-;5032:167;;;:::o;5204:127::-;5265:10;5260:3;5256:20;5253:1;5246:31;5296:4;5293:1;5286:15;5320:4;5317:1;5310:15;5336:253;5408:2;5402:9;5450:4;5438:17;;-1:-1:-1;;;;;5470:34:347;;5506:22;;;5467:62;5464:88;;;5532:18;;:::i;:::-;5568:2;5561:22;5336:253;:::o;5594:275::-;5665:2;5659:9;5730:2;5711:13;;-1:-1:-1;;5707:27:347;5695:40;;-1:-1:-1;;;;;5750:34:347;;5786:22;;;5747:62;5744:88;;;5812:18;;:::i;:::-;5848:2;5841:22;5594:275;;-1:-1:-1;5594:275:347:o;5874:187::-;5923:4;-1:-1:-1;;;;;5948:6:347;5945:30;5942:56;;;5978:18;;:::i;:::-;-1:-1:-1;6044:2:347;6023:15;-1:-1:-1;;6019:29:347;6050:4;6015:40;;5874:187::o;6066:464::-;6109:5;6162:3;6155:4;6147:6;6143:17;6139:27;6129:55;;6180:1;6177;6170:12;6129:55;6216:6;6203:20;6247:49;6263:32;6292:2;6263:32;:::i;:::-;6247:49;:::i;:::-;6321:2;6312:7;6305:19;6367:3;6360:4;6355:2;6347:6;6343:15;6339:26;6336:35;6333:55;;;6384:1;6381;6374:12;6333:55;6449:2;6442:4;6434:6;6430:17;6423:4;6414:7;6410:18;6397:55;6497:1;6472:16;;;6490:4;6468:27;6461:38;;;;6476:7;6066:464;-1:-1:-1;;;6066:464:347:o;6535:183::-;6595:4;-1:-1:-1;;;;;6620:6:347;6617:30;6614:56;;;6650:18;;:::i;:::-;-1:-1:-1;6695:1:347;6691:14;6707:4;6687:25;;6535:183::o;6723:751::-;6777:5;6830:3;6823:4;6815:6;6811:17;6807:27;6797:55;;6848:1;6845;6838:12;6797:55;6884:6;6871:20;6910:4;6934:60;6950:43;6990:2;6950:43;:::i;6934:60::-;7028:15;;;7114:1;7110:10;;;;7098:23;;7094:32;;;7059:12;;;;7138:15;;;7135:35;;;7166:1;7163;7156:12;7135:35;7202:2;7194:6;7190:15;7214:231;7230:6;7225:3;7222:15;7214:231;;;7310:3;7297:17;7327:45;7366:5;7327:45;:::i;:::-;7385:18;;7423:12;;;;7247;;7214:231;;;-1:-1:-1;7463:5:347;6723:751;-1:-1:-1;;;;;;6723:751:347:o;7479:888::-;7532:5;7585:3;7578:4;7570:6;7566:17;7562:27;7552:55;;7603:1;7600;7593:12;7552:55;7639:6;7626:20;7665:4;7689:60;7705:43;7745:2;7705:43;:::i;7689:60::-;7783:15;;;7869:1;7865:10;;;;7853:23;;7849:32;;;7814:12;;;;7893:15;;;7890:35;;;7921:1;7918;7911:12;7890:35;7957:2;7949:6;7945:15;7969:369;7985:6;7980:3;7977:15;7969:369;;;8071:3;8058:17;-1:-1:-1;;;;;8094:11:347;8091:35;8088:125;;;8167:1;8196:2;8192;8185:14;8088:125;8238:57;8291:3;8286:2;8272:11;8264:6;8260:24;8256:33;8238:57;:::i;:::-;8226:70;;-1:-1:-1;8316:12:347;;;;8002;;7969:369;;8372:2069;8749:6;8757;8765;8773;8781;8789;8797;8805;8813;8866:3;8854:9;8845:7;8841:23;8837:33;8834:53;;;8883:1;8880;8873:12;8834:53;8906:48;8944:9;8906:48;:::i;:::-;8896:58;;9005:2;8994:9;8990:18;8977:32;-1:-1:-1;;;;;9069:2:347;9061:6;9058:14;9055:34;;;9085:1;9082;9075:12;9055:34;9108:50;9150:7;9141:6;9130:9;9126:22;9108:50;:::i;:::-;9098:60;;9211:2;9200:9;9196:18;9183:32;9167:48;;9240:2;9230:8;9227:16;9224:36;;;9256:1;9253;9246:12;9224:36;9279:52;9323:7;9312:8;9301:9;9297:24;9279:52;:::i;:::-;9269:62;;9384:2;9373:9;9369:18;9356:32;9340:48;;9413:2;9403:8;9400:16;9397:36;;;9429:1;9426;9419:12;9397:36;9452:63;9507:7;9496:8;9485:9;9481:24;9452:63;:::i;:::-;9442:73;;9568:3;9557:9;9553:19;9540:33;9524:49;;9598:2;9588:8;9585:16;9582:36;;;9614:1;9611;9604:12;9582:36;9637:62;9691:7;9680:8;9669:9;9665:24;9637:62;:::i;:::-;9627:72;;9752:3;9741:9;9737:19;9724:33;9708:49;;9782:2;9772:8;9769:16;9766:36;;;9798:1;9795;9788:12;9766:36;9821:62;9875:7;9864:8;9853:9;9849:24;9821:62;:::i;:::-;9811:72;;9936:3;9925:9;9921:19;9908:33;9892:49;;9966:2;9956:8;9953:16;9950:36;;;9982:1;9979;9972:12;9950:36;10005:62;10059:7;10048:8;10037:9;10033:24;10005:62;:::i;:::-;9995:72;;10120:3;10109:9;10105:19;10092:33;10076:49;;10150:2;10140:8;10137:16;10134:36;;;10166:1;10163;10156:12;10134:36;10189:62;10243:7;10232:8;10221:9;10217:24;10189:62;:::i;:::-;10179:72;;10304:3;10293:9;10289:19;10276:33;10260:49;;10334:2;10324:8;10321:16;10318:36;;;10350:1;10347;10340:12;10318:36;;10373:62;10427:7;10416:8;10405:9;10401:24;10373:62;:::i;:::-;10363:72;;;8372:2069;;;;;;;;;;;:::o;10712:435::-;10765:3;10803:5;10797:12;10830:6;10825:3;10818:19;10856:4;10885:2;10880:3;10876:12;10869:19;;10922:2;10915:5;10911:14;10943:1;10953:169;10967:6;10964:1;10961:13;10953:169;;;11028:13;;11016:26;;11062:12;;;;11097:15;;;;10989:1;10982:9;10953:169;;;-1:-1:-1;11138:3:347;;10712:435;-1:-1:-1;;;;;10712:435:347:o;11152:1206::-;11213:3;11251:5;11245:12;11278:6;11273:3;11266:19;11304:4;11345:2;11340:3;11336:12;11370:11;11397;11390:18;;11447:6;11444:1;11440:14;11433:5;11429:26;11417:38;;11489:2;11482:5;11478:14;11510:1;11520:812;11534:6;11531:1;11528:13;11520:812;;;11605:5;11599:4;11595:16;11590:3;11583:29;11641:6;11635:13;11671:4;11714:2;11708:9;11743:2;11737:4;11730:16;11773:46;11815:2;11809:4;11805:13;11791:12;11773:46;:::i;:::-;11860:11;;;11854:18;-1:-1:-1;;;;;11949:23:347;;;11934:13;;;11927:46;11996:4;12045:11;;;12039:18;12035:27;;;12020:13;;;12013:50;12086:4;12131:11;;;12125:18;12110:13;;;12103:41;12167:4;12212:11;;;12206:18;12191:13;;;;12184:41;;;;-1:-1:-1;;12310:12:347;;;;12275:15;;;;11912:1;11549:9;11520:812;;12363:461;12416:3;12454:5;12448:12;12481:6;12476:3;12469:19;12507:4;12536:2;12531:3;12527:12;12520:19;;12573:2;12566:5;12562:14;12594:1;12604:195;12618:6;12615:1;12612:13;12604:195;;;12683:13;;-1:-1:-1;;;;;12679:39:347;12667:52;;12739:12;;;;12774:15;;;;12715:1;12633:9;12604:195;;12829:616;12881:3;12919:5;12913:12;12946:6;12941:3;12934:19;12972:4;13013:2;13008:3;13004:12;13038:11;13065;13058:18;;13115:6;13112:1;13108:14;13101:5;13097:26;13085:38;;13157:2;13150:5;13146:14;13178:1;13188:231;13202:6;13199:1;13196:13;13188:231;;;13273:5;13267:4;13263:16;13258:3;13251:29;13301:38;13334:4;13325:6;13319:13;13301:38;:::i;:::-;13397:12;;;;13293:46;-1:-1:-1;13362:15:347;;;;13224:1;13217:9;13188:231;;13450:448;13500:3;13538:5;13532:12;13565:6;13560:3;13553:19;13591:4;13620:2;13615:3;13611:12;13604:19;;13657:2;13650:5;13646:14;13678:1;13688:185;13702:6;13699:1;13696:13;13688:185;;;13777:13;;13770:21;13763:29;13751:42;;13813:12;;;;13848:15;;;;13724:1;13717:9;13688:185;;13903:2071;14385:4;14414:3;14444:2;14433:9;14426:21;14470:56;14522:2;14511:9;14507:18;14499:6;14470:56;:::i;:::-;14545:2;14595:9;14587:6;14583:22;14578:2;14567:9;14563:18;14556:50;14629:52;14674:6;14666;14629:52;:::i;:::-;14615:66;;14700:2;14750:9;14742:6;14738:22;14733:2;14722:9;14718:18;14711:50;14781:6;14816;14810:13;14847:6;14839;14832:22;14882:2;14874:6;14870:15;14863:22;;14941:2;14931:6;14928:1;14924:14;14916:6;14912:27;14908:36;14979:2;14971:6;14967:15;15000:1;15010:839;15024:6;15021:1;15018:13;15010:839;;;15114:2;15110:7;15101:6;15093;15089:19;15085:33;15080:3;15073:46;15148:6;15142:13;15178:4;15216:2;15210:9;15202:6;15195:25;15271:2;15267;15263:11;15257:18;15252:2;15244:6;15240:15;15233:43;15323:2;15319;15315:11;15309:18;15364:2;15359;15351:6;15347:15;15340:27;15394:59;15449:2;15441:6;15437:15;15423:12;15394:59;:::i;:::-;15380:73;;;15476:4;15529:2;15525;15521:11;15515:18;15582:6;15574;15570:19;15565:2;15557:6;15553:15;15546:44;15617:51;15661:6;15645:14;15617:51;:::i;:::-;15725:11;;;15719:18;15712:26;15705:34;15688:15;;;15681:59;;;;-1:-1:-1;;15827:12:347;;;;15603:65;-1:-1:-1;15792:15:347;;;;15046:1;15039:9;15010:839;;;15014:3;;15899:9;15891:6;15887:22;15880:4;15869:9;15865:20;15858:52;15927:41;15961:6;15953;15927:41;:::i;:::-;15919:49;13903:2071;-1:-1:-1;;;;;;;;;;;;;13903:2071:347:o;15979:710::-;16334:6;16323:9;16316:25;16377:6;16372:2;16361:9;16357:18;16350:34;16420:3;16415:2;16404:9;16400:18;16393:31;16297:4;16447:57;16499:3;16488:9;16484:19;16476:6;16447:57;:::i;:::-;16552:9;16544:6;16540:22;16535:2;16524:9;16520:18;16513:50;16580:43;16616:6;16608;16580:43;:::i;:::-;16572:51;;;16674:6;16667:14;16660:22;16654:3;16643:9;16639:19;16632:51;15979:710;;;;;;;;:::o;16694:525::-;17003:2;16992:9;16985:21;16966:4;17029:56;17081:2;17070:9;17066:18;17058:6;17029:56;:::i;:::-;17133:9;17125:6;17121:22;17116:2;17105:9;17101:18;17094:50;17161:52;17206:6;17198;17161:52;:::i;:::-;17153:60;16694:525;-1:-1:-1;;;;;16694:525:347:o;17458:556::-;17573:6;17581;17634:2;17622:9;17613:7;17609:23;17605:32;17602:52;;;17650:1;17647;17640:12;17602:52;17689:9;17676:23;17708:45;17747:5;17708:45;:::i;:::-;17772:5;-1:-1:-1;17828:2:347;17813:18;;17800:32;-1:-1:-1;;;;;17844:30:347;;17841:50;;;17887:1;17884;17877:12;17841:50;17910:22;;17966:3;17948:16;;;17944:26;17941:46;;;17983:1;17980;17973:12;18272:118;18358:5;18351:13;18344:21;18337:5;18334:32;18324:60;;18380:1;18377;18370:12;18395:241;18451:6;18504:2;18492:9;18483:7;18479:23;18475:32;18472:52;;;18520:1;18517;18510:12;18472:52;18559:9;18546:23;18578:28;18600:5;18578:28;:::i;18641:380::-;18720:1;18716:12;;;;18763;;;18784:61;;18838:4;18830:6;18826:17;18816:27;;18784:61;18891:2;18883:6;18880:14;18860:18;18857:38;18854:161;;;18937:10;18932:3;18928:20;18925:1;18918:31;18972:4;18969:1;18962:15;19000:4;18997:1;18990:15;18854:161;;18641:380;;;:::o;19234:987::-;19346:6;19377:2;19420;19408:9;19399:7;19395:23;19391:32;19388:52;;;19436:1;19433;19426:12;19388:52;19469:9;19463:16;-1:-1:-1;;;;;19494:6:347;19491:30;19488:50;;;19534:1;19531;19524:12;19488:50;19557:22;;19610:4;19602:13;;19598:27;-1:-1:-1;19588:55:347;;19639:1;19636;19629:12;19588:55;19668:2;19662:9;19691:60;19707:43;19747:2;19707:43;:::i;19691:60::-;19785:15;;;19867:1;19863:10;;;;19855:19;;19851:28;;;19816:12;;;;19891:19;;;19888:39;;;19923:1;19920;19913:12;19888:39;19947:11;;;;19967:224;19983:6;19978:3;19975:15;19967:224;;;20056:3;20050:10;20073:45;20112:5;20073:45;:::i;:::-;20131:18;;20000:12;;;;20169;;;;19967:224;;;20210:5;19234:987;-1:-1:-1;;;;;;;19234:987:347:o;21881:127::-;21942:10;21937:3;21933:20;21930:1;21923:31;21973:4;21970:1;21963:15;21997:4;21994:1;21987:15;22013:127;22074:10;22069:3;22065:20;22062:1;22055:31;22105:4;22102:1;22095:15;22129:4;22126:1;22119:15;22145:135;22184:3;-1:-1:-1;;22205:17:347;;22202:43;;;22225:18;;:::i;:::-;-1:-1:-1;22272:1:347;22261:13;;22145:135::o;22484:430::-;22538:5;22591:3;22584:4;22576:6;22572:17;22568:27;22558:55;;22609:1;22606;22599:12;22558:55;22638:6;22632:13;22669:49;22685:32;22714:2;22685:32;:::i;22669:49::-;22743:2;22734:7;22727:19;22789:3;22782:4;22777:2;22769:6;22765:15;22761:26;22758:35;22755:55;;;22806:1;22803;22796:12;22755:55;22819:64;22880:2;22873:4;22864:7;22860:18;22853:4;22845:6;22841:17;22819:64;:::i;22919:1874::-;22992:5;23045:3;23038:4;23030:6;23026:17;23022:27;23012:55;;23063:1;23060;23053:12;23012:55;23092:6;23086:13;23118:4;23142:60;23158:43;23198:2;23158:43;:::i;23142:60::-;23236:15;;;23322:1;23318:10;;;;23306:23;;23302:32;;;23267:12;;;;23346:15;;;23343:35;;;23374:1;23371;23364:12;23343:35;23410:2;23402:6;23398:15;23422:1342;23438:6;23433:3;23430:15;23422:1342;;;23517:3;23511:10;-1:-1:-1;;;;;23594:2:347;23581:11;23578:19;23575:109;;;23638:1;23667:2;23663;23656:14;23575:109;23707:24;;;;23754:4;23782:12;;;-1:-1:-1;;23778:26:347;23774:35;-1:-1:-1;23771:125:347;;;23850:1;23879:2;23875;23868:14;23771:125;23922:22;;:::i;:::-;23987:2;23983;23979:11;23973:18;24020:2;24010:8;24007:16;24004:106;;;24064:1;24093:2;24089;24082:14;24004:106;24137:61;24194:3;24189:2;24178:8;24174:2;24170:17;24166:26;24137:61;:::i;:::-;24130:5;24123:76;;24222:2;24212:12;;24266:2;24262;24258:11;24252:18;24283:47;24322:7;24283:47;:::i;:::-;24350:14;;;24343:31;24398:2;24434:12;;;24428:19;24460:47;24428:19;24460:47;:::i;:::-;24527:14;;;24520:31;;;;24575:3;24621:12;;;24615:19;24598:15;;;24591:44;;;;24678:11;;24672:18;24655:15;;;24648:43;24704:18;;24742:12;;;;23455;;23422:1342;;24798:1168;24953:6;24961;25014:2;25002:9;24993:7;24989:23;24985:32;24982:52;;;25030:1;25027;25020:12;24982:52;25063:9;25057:16;-1:-1:-1;;;;;25133:2:347;25125:6;25122:14;25119:34;;;25149:1;25146;25139:12;25119:34;25187:6;25176:9;25172:22;25162:32;;25232:7;25225:4;25221:2;25217:13;25213:27;25203:55;;25254:1;25251;25244:12;25203:55;25283:2;25277:9;25305:4;25329:60;25345:43;25385:2;25345:43;:::i;25329:60::-;25423:15;;;25505:1;25501:10;;;;25493:19;;25489:28;;;25454:12;;;;25529:19;;;25526:39;;;25561:1;25558;25551:12;25526:39;25585:11;;;;25605:135;25621:6;25616:3;25613:15;25605:135;;;25687:10;;25675:23;;25638:12;;;;25718;;;;25605:135;;;25795:18;;;25789:25;25759:5;;-1:-1:-1;25789:25:347;;-1:-1:-1;;;25826:16:347;;;25823:36;;;25855:1;25852;25845:12;25823:36;;25878:82;25952:7;25941:8;25930:9;25926:24;25878:82;:::i;:::-;25868:92;;;24798:1168;;;;;:::o;25971:287::-;26063:6;26116:2;26104:9;26095:7;26091:23;26087:32;26084:52;;;26132:1;26129;26122:12;26084:52;26164:9;26158:16;26183:45;26222:5;26183:45;:::i;26263:132::-;26339:13;;26361:28;26339:13;26361:28;:::i;26400:306::-;26476:6;26484;26537:2;26525:9;26516:7;26512:23;26508:32;26505:52;;;26553:1;26550;26543:12;26505:52;26585:9;26579:16;26604:28;26626:5;26604:28;:::i;:::-;26696:2;26681:18;;;;26675:25;26651:5;;26675:25;;-1:-1:-1;;;26400:306:347:o;26711:184::-;26781:6;26834:2;26822:9;26813:7;26809:23;26805:32;26802:52;;;26850:1;26847;26840:12;26802:52;-1:-1:-1;26873:16:347;;26711:184;-1:-1:-1;26711:184:347:o;26900:128::-;26940:3;26971:1;26967:6;26964:1;26961:13;26958:39;;;26977:18;;:::i;:::-;-1:-1:-1;27013:9:347;;26900:128::o;27033:125::-;27073:4;27101:1;27098;27095:8;27092:34;;;27106:18;;:::i;:::-;-1:-1:-1;27143:9:347;;27033:125::o;27388:168::-;27428:7;27494:1;27490;27486:6;27482:14;27479:1;27476:21;27471:1;27464:9;27457:17;27453:45;27450:71;;;27501:18;;:::i;:::-;-1:-1:-1;27541:9:347;;27388:168::o;27561:217::-;27601:1;27627;27617:132;;27671:10;27666:3;27662:20;27659:1;27652:31;27706:4;27703:1;27696:15;27734:4;27731:1;27724:15;27617:132;-1:-1:-1;27763:9:347;;27561:217::o;27783:245::-;27850:6;27903:2;27891:9;27882:7;27878:23;27874:32;27871:52;;;27919:1;27916;27909:12;27871:52;27951:9;27945:16;27970:28;27992:5;27970:28;:::i;28303:397::-;28424:6;28477:2;28465:9;28456:7;28452:23;28448:32;28445:52;;;28493:1;28490;28483:12;28445:52;28526:9;28520:16;-1:-1:-1;;;;;28551:6:347;28548:30;28545:50;;;28591:1;28588;28581:12;28545:50;28614:80;28686:7;28677:6;28666:9;28662:22;28614:80;:::i;28705:503::-;28763:5;28770:6;28830:3;28817:17;28916:2;28912:7;28901:8;28885:14;28881:29;28877:43;28857:18;28853:68;28843:96;;28935:1;28932;28925:12;28843:96;28963:33;;29067:4;29054:18;;;-1:-1:-1;29015:21:347;;-1:-1:-1;;;;;;29084:30:347;;29081:50;;;29127:1;29124;29117:12;29081:50;29177:6;29161:14;29157:27;29147:8;29143:42;29140:62;;;29198:1;29195;29188:12;29213:266;29301:6;29296:3;29289:19;29353:6;29346:5;29339:4;29334:3;29330:14;29317:43;-1:-1:-1;29405:1:347;29380:16;;;29398:4;29376:27;;;29369:38;;;;29461:2;29440:15;;;-1:-1:-1;;29436:29:347;29427:39;;;29423:50;;29213:266::o;29484:1334::-;-1:-1:-1;;;;;29716:32:347;;29698:51;;29785:2;29780;29765:18;;29758:30;-1:-1:-1;29831:46:347;29870:6;;29831:46;:::i;:::-;29913:4;29908:2;29897:9;29893:18;29886:32;29941:74;30010:3;29999:9;29995:19;29981:12;29967;29941:74;:::i;:::-;29927:88;;;30062:55;30113:2;30105:6;30101:15;30093:6;30062:55;:::i;:::-;30140:2;30136:7;30207:2;30195:9;30187:6;30183:22;30179:31;30174:2;30163:9;30159:18;30152:59;30234:65;30292:6;30276:14;30260;30234:65;:::i;:::-;30220:79;;30346:55;30397:2;30389:6;30385:15;30377:6;30346:55;:::i;:::-;30308:93;;;;30467:2;30455:9;30447:6;30443:22;30439:31;30432:4;30421:9;30417:20;30410:61;30494:65;30552:6;30536:14;30520;30494:65;:::i;:::-;30480:79;;30606:55;30657:2;30649:6;30645:15;30637:6;30606:55;:::i;:::-;30568:93;;;;30726:2;30714:9;30706:6;30702:22;30698:31;30692:3;30681:9;30677:19;30670:60;;30747:65;30805:6;30789:14;30773;30747:65;:::i;30823:245::-;30902:6;30910;30963:2;30951:9;30942:7;30938:23;30934:32;30931:52;;;30979:1;30976;30969:12;30931:52;-1:-1:-1;;31002:16:347;;31058:2;31043:18;;;31037:25;31002:16;;31037:25;;-1:-1:-1;30823:245:347:o;31265:273::-;31333:6;31386:2;31374:9;31365:7;31361:23;31357:32;31354:52;;;31402:1;31399;31392:12;31354:52;31434:9;31428:16;31484:4;31477:5;31473:16;31466:5;31463:27;31453:55;;31504:1;31501;31494:12;32099:896;32163:5;32216:3;32209:4;32201:6;32197:17;32193:27;32183:55;;32234:1;32231;32224:12;32183:55;32263:6;32257:13;32289:4;32313:60;32329:43;32369:2;32329:43;:::i;32313:60::-;32407:15;;;32493:1;32489:10;;;;32477:23;;32473:32;;;32438:12;;;;32517:15;;;32514:35;;;32545:1;32542;32535:12;32514:35;32581:2;32573:6;32569:15;32593:373;32609:6;32604:3;32601:15;32593:373;;;32688:3;32682:10;-1:-1:-1;;;;;32711:11:347;32708:35;32705:125;;;32784:1;32813:2;32809;32802:14;32705:125;32855:68;32919:3;32914:2;32900:11;32892:6;32888:24;32884:33;32855:68;:::i;:::-;32843:81;;-1:-1:-1;32944:12:347;;;;32626;;32593:373;;33000:1433;33163:6;33171;33179;33187;33195;33248:3;33236:9;33227:7;33223:23;33219:33;33216:53;;;33265:1;33262;33255:12;33216:53;33294:9;33288:16;33278:26;;33323:2;33365;33354:9;33350:18;33344:25;33334:35;;33413:2;33402:9;33398:18;33392:25;-1:-1:-1;;;;;33477:2:347;33469:6;33466:14;33463:34;;;33493:1;33490;33483:12;33463:34;33531:6;33520:9;33516:22;33506:32;;33576:7;33569:4;33565:2;33561:13;33557:27;33547:55;;33598:1;33595;33588:12;33547:55;33627:2;33621:9;33650:60;33666:43;33706:2;33666:43;:::i;33650:60::-;33744:15;;;33826:1;33822:10;;;;33814:19;;33810:28;;;33775:12;;;;33850:19;;;33847:39;;;33882:1;33879;33872:12;33847:39;33906:11;;;;33926:224;33942:6;33937:3;33934:15;33926:224;;;34015:3;34009:10;34032:45;34071:5;34032:45;:::i;:::-;34090:18;;33959:12;;;;34128;;;;33926:224;;;34220:2;34205:18;;34199:25;34169:5;;-1:-1:-1;34199:25:347;-1:-1:-1;;;34236:16:347;;;34233:36;;;34265:1;34262;34255:12;34233:36;;;34288:73;34353:7;34342:8;34331:9;34327:24;34288:73;:::i;:::-;34278:83;;;34380:47;34422:3;34411:9;34407:19;34380:47;:::i;:::-;34370:57;;33000:1433;;;;;;;;:::o;34438:337::-;34518:6;34571:2;34559:9;34550:7;34546:23;34542:32;34539:52;;;34587:1;34584;34577:12;34539:52;34620:9;34614:16;-1:-1:-1;;;;;34645:6:347;34642:30;34639:50;;;34685:1;34682;34675:12;34639:50;34708:61;34761:7;34752:6;34741:9;34737:22;34708:61;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "directory()": "c41c2f24",
    "getPoolAssetsByUser(address,address)": "0c5eb5a4",
    "getPoolAssetsWithData(address)": "27e16c1f",
    "getPoolSummary(address)": "59d2fea6",
    "getPoolsByAccountWithData(address)": "51678684",
    "getPoolsOfUserWithData(address)": "e0581140",
    "getPublicPoolsByVerificationWithData(bool)": "d64996e5",
    "getPublicPoolsWithData()": "d0a164fb",
    "getWhitelistedPoolsByAccount(address)": "c3530a63",
    "getWhitelistedPoolsByAccountWithData(address)": "70733375",
    "initialize(address,string,string,address[],string[],string[],string[],string[],string[])": "3a1eb656",
    "name()": "06fdde03",
    "symbol()": "95d89b41",
    "verifyPrice(address,(bytes,bytes,bytes,bytes))": "cd344be8"
  }
}