{
  "address": "0xBf0794bF4021Dd944833Cf884D403450bD271B67",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ERC20",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardsDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardsIndex",
          "type": "uint256"
        }
      ],
      "name": "AccrueRewards",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newStrategy",
          "type": "address"
        }
      ],
      "name": "AddStrategy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ClaimRewards",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newBooster",
          "type": "address"
        }
      ],
      "name": "FlywheelBoosterUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newFlywheelRewards",
          "type": "address"
        }
      ],
      "name": "FlywheelRewardsUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "NewOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldPendingOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPendingOwner",
          "type": "address"
        }
      ],
      "name": "NewPendingOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldPerformanceFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPerformanceFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newFeeRecipient",
          "type": "address"
        }
      ],
      "name": "UpdatedFeeSettings",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ONE",
      "outputs": [
        {
          "internalType": "uint224",
          "name": "",
          "type": "uint224"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_acceptOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPendingOwner",
          "type": "address"
        }
      ],
      "name": "_setPendingOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "accrue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "secondUser",
          "type": "address"
        }
      ],
      "name": "accrue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "addMarketForRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "addStrategyForRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allStrategies",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "claimRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "compAccrued",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "flywheelBooster",
      "outputs": [
        {
          "internalType": "contract IFlywheelBooster",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "market",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        }
      ],
      "name": "flywheelPreBorrowerAction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "market",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "supplier",
          "type": "address"
        }
      ],
      "name": "flywheelPreSupplierAction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "market",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        }
      ],
      "name": "flywheelPreTransferAction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "flywheelRewards",
      "outputs": [
        {
          "internalType": "contract IFlywheelRewards",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllStrategies",
      "outputs": [
        {
          "internalType": "contract ERC20[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "_rewardToken",
          "type": "address"
        },
        {
          "internalType": "contract IFlywheelRewards",
          "name": "_flywheelRewards",
          "type": "address"
        },
        {
          "internalType": "contract IFlywheelBooster",
          "name": "_flywheelBooster",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isFlywheel",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isRewardsDistributor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "marketState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint224",
              "name": "index",
              "type": "uint224"
            },
            {
              "internalType": "uint32",
              "name": "lastUpdatedTimestamp",
              "type": "uint32"
            }
          ],
          "internalType": "struct MidasFlywheelCore.RewardsState",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "performanceFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "rewardsAccrued",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IFlywheelBooster",
          "name": "newBooster",
          "type": "address"
        }
      ],
      "name": "setBooster",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IFlywheelRewards",
          "name": "newFlywheelRewards",
          "type": "address"
        }
      ],
      "name": "setFlywheelRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "strategyState",
      "outputs": [
        {
          "internalType": "uint224",
          "name": "index",
          "type": "uint224"
        },
        {
          "internalType": "uint32",
          "name": "lastUpdatedTimestamp",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_performanceFee",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_feeRecipient",
          "type": "address"
        }
      ],
      "name": "updateFeeSettings",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userIndex",
      "outputs": [
        {
          "internalType": "uint224",
          "name": "",
          "type": "uint224"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xb9f9e19ebeb938e046fcd586a7dbf85ef240990c929bef055fd88c726c5265f0",
  "receipt": {
    "to": null,
    "from": "0x82eDcFe00bd0ce1f3aB968aF09d04266Bc092e0E",
    "contractAddress": "0xBf0794bF4021Dd944833Cf884D403450bD271B67",
    "transactionIndex": 2,
    "gasUsed": "1366891",
    "logsBloom": "0x
    "blockHash": "0xf79904a9658f092755e3f99a42427b023ffa0e97eeba917ba0df281bb1c70078",
    "transactionHash": "0xb9f9e19ebeb938e046fcd586a7dbf85ef240990c929bef055fd88c726c5265f0",
    "logs": [],
    "blockNumber": 1914360,
    "cumulativeGasUsed": "1668428",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "metadata": {
    "compiler": {
      "version": "0.8.10+commit.fc410830"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "strategy",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardsDelta",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "rewardsIndex",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AccrueRewards",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newStrategy",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AddStrategy",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimRewards",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newBooster",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "FlywheelBoosterUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newFlywheelRewards",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "FlywheelRewardsUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldOwner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewOwner",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldPendingOwner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newPendingOwner",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewPendingOwner",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldPerformanceFee",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newPerformanceFee",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "oldFeeRecipient",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newFeeRecipient",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedFeeSettings",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ONE",
          "outputs": [
            {
              "internalType": "uint224",
              "name": "",
              "type": "uint224"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_acceptOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newPendingOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_setPendingOwner"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "accrue",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "secondUser",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "accrue",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addMarketForRewards"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addStrategyForRewards"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allStrategies",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimRewards"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "compAccrued",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "flywheelBooster",
          "outputs": [
            {
              "internalType": "contract IFlywheelBooster",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "market",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "flywheelPreBorrowerAction"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "market",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "supplier",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "flywheelPreSupplierAction"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "market",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "src",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "dst",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "flywheelPreTransferAction"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "flywheelRewards",
          "outputs": [
            {
              "internalType": "contract IFlywheelRewards",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllStrategies",
          "outputs": [
            {
              "internalType": "contract ERC20[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "_rewardToken",
              "type": "address"
            },
            {
              "internalType": "contract IFlywheelRewards",
              "name": "_flywheelRewards",
              "type": "address"
            },
            {
              "internalType": "contract IFlywheelBooster",
              "name": "_flywheelBooster",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isFlywheel",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isRewardsDistributor",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "marketState",
          "outputs": [
            {
              "internalType": "struct MidasFlywheelCore.RewardsState",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint224",
                  "name": "index",
                  "type": "uint224"
                },
                {
                  "internalType": "uint32",
                  "name": "lastUpdatedTimestamp",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "performanceFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardToken",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardsAccrued",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IFlywheelBooster",
              "name": "newBooster",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setBooster"
        },
        {
          "inputs": [
            {
              "internalType": "contract IFlywheelRewards",
              "name": "newFlywheelRewards",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFlywheelRewards"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyState",
          "outputs": [
            {
              "internalType": "uint224",
              "name": "index",
              "type": "uint224"
            },
            {
              "internalType": "uint32",
              "name": "lastUpdatedTimestamp",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_performanceFee",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_feeRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateFeeSettings"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userIndex",
          "outputs": [
            {
              "internalType": "uint224",
              "name": "",
              "type": "uint224"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "_acceptOwner()": {
            "details": "Owner function for pending owner to accept role and update owner"
          },
          "_setPendingOwner(address)": {
            "details": "Owner function to begin change of owner. The newPendingOwner must call `_acceptOwner` to finalize the transfer.",
            "params": {
              "newPendingOwner": "New pending owner."
            }
          },
          "accrue(address,address)": {
            "params": {
              "strategy": "the strategy to accrue a user's rewards on",
              "user": "the user to be accrued"
            },
            "returns": {
              "_0": "the cumulative amount of rewards accrued to user (including prior)"
            }
          },
          "accrue(address,address,address)": {
            "params": {
              "strategy": "the strategy to accrue a user's rewards on",
              "user": "the second user to be accrued"
            },
            "returns": {
              "_0": "the cumulative amount of rewards accrued to the first user (including prior)",
              "_1": "the cumulative amount of rewards accrued to the second user (including prior)"
            }
          },
          "claimRewards(address)": {
            "details": "this function is public, and all rewards transfer to the user",
            "params": {
              "user": "the user claiming rewards"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "updateFeeSettings(uint256,address)": {
            "details": "Claim rewards first from the previous feeRecipient before changing it"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "ONE()": {
            "notice": "the fixed point factor of flywheel"
          },
          "_acceptOwner()": {
            "notice": "Accepts transfer of owner rights. msg.sender must be pendingOwner"
          },
          "_setPendingOwner(address)": {
            "notice": "Begins transfer of owner rights. The newPendingOwner must call `_acceptOwner` to finalize the transfer."
          },
          "accrue(address,address)": {
            "notice": "accrue rewards for a single user on a strategy"
          },
          "accrue(address,address,address)": {
            "notice": "accrue rewards for a two users on a strategy"
          },
          "addStrategyForRewards(address)": {
            "notice": "initialize a new strategy"
          },
          "allStrategies(uint256)": {
            "notice": "append-only list of strategies added"
          },
          "claimRewards(address)": {
            "notice": "claim rewards for a given user"
          },
          "feeRecipient()": {
            "notice": "Address that gets rewardsToken accrued by performanceFee"
          },
          "flywheelBooster()": {
            "notice": "optional booster module for calculating virtual balances on strategies"
          },
          "flywheelRewards()": {
            "notice": "the rewards contract for managing streams"
          },
          "pendingOwner()": {
            "notice": "Pending owner of this contract"
          },
          "performanceFee()": {
            "notice": "How much rewardsToken will be send to treasury"
          },
          "rewardToken()": {
            "notice": "The token to reward"
          },
          "rewardsAccrued(address)": {
            "notice": "The accrued but not yet transferred rewards for each user"
          },
          "setBooster(address)": {
            "notice": "swap out the flywheel booster contract"
          },
          "setFlywheelRewards(address)": {
            "notice": "swap out the flywheel rewards contract"
          },
          "strategyState(address)": {
            "notice": "The strategy index and last updated per strategy"
          },
          "updateFeeSettings(uint256,address)": {
            "notice": "Update performanceFee and/or feeRecipient"
          },
          "userIndex(address,address)": {
            "notice": "user index per strategy"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@pythnetwork/pyth-sdk-solidity/=lib/pyth-sdk-solidity/",
        ":ds-test/=lib/ds-test/src/",
        ":flywheel-v2/=lib/flywheel-v2/src/",
        ":flywheel/=lib/flywheel-v2/src/",
        ":forge-std/=lib/forge-std/src/",
        ":fuse-flywheel/=lib/fuse-flywheel/src/",
        ":libcompound/=lib/fuse-flywheel/lib/libcompound/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":ops/=lib/ops/contracts/",
        ":pyth-neon/=lib/pyth-neon/contracts/",
        ":pyth-sdk-solidity/=lib/pyth-sdk-solidity/",
        ":solidity-bytes-utils/=lib/solidity-bytes-utils/",
        ":solmate/=lib/solmate/src/",
        ":weird-erc20/=lib/fuse-flywheel/lib/libcompound/lib/solmate/lib/weird-erc20/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 2
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/midas/strategies/flywheel/MidasFlywheel.sol": "MidasFlywheel"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/midas/SafeOwnableUpgradeable.sol": {
        "keccak256": "0x095b9ac7a021daed0a77802d75172bcfca6bd670d7a103212f0a72045da59c3d",
        "urls": [
          "bzz-raw://d2e4373695d9715adb1ef7c57a42d36474b5e99c4ecfd225d0e36fd310c0eb6e",
          "dweb:/ipfs/QmWP563j3p1xpNJs93PiASQdwTiTKEAyuAYWp5H6F3uj2j"
        ],
        "license": "UNLICENSED"
      },
      "contracts/midas/strategies/flywheel/MidasFlywheel.sol": {
        "keccak256": "0xf34451b315f3028619ddef5e1864e1447c055238d9f13e07cd0327a01ee25881",
        "urls": [
          "bzz-raw://f6b457a5202cf3de446906c97b00097548074bd485bd7a08237f9e65013386ed",
          "dweb:/ipfs/QmauRLpu3kvne3kRQeShqij9UjYGFPiBG66EvhRLLX1e38"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/midas/strategies/flywheel/MidasFlywheelCore.sol": {
        "keccak256": "0x3650eaffd7476d5495e2796619b5b211fe1c7d1c583b30853fc24575db96bf28",
        "urls": [
          "bzz-raw://e8ac9ee760051cce4d9c8fdc5feb09ee46ec22d7200fc4af37033b1f7682cf85",
          "dweb:/ipfs/QmbHDJvHoAbYA1R7zMPdHzdju9hFAJE9TVCtd5r5Mm53nK"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/flywheel-v2/src/FlywheelCore.sol": {
        "keccak256": "0x4b8d71408e2a1c5c1d1800d63d1dc5eb8dc51298a8633753d0188e43c0103a00",
        "urls": [
          "bzz-raw://5010891d2d0434605b901a44e200fa93e7a530f8dffa3ebbc8e2188e6aec9e88",
          "dweb:/ipfs/QmR7VbWWZ7zpcKfBoJboR2uqRBpHwkYQ5zsL2hVUfcizs2"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/flywheel-v2/src/interfaces/IFlywheelBooster.sol": {
        "keccak256": "0x37dd3fce4e213452f8483c6647f5eaa862087af6673828b16e844a1be40a8b39",
        "urls": [
          "bzz-raw://23164e5512573e53d24174c4115babab94cd85ad91125fc1ee2d05e20dcffc96",
          "dweb:/ipfs/QmXn7Ucmb7iZR2iz1jxf2nPg4Kx5KPZSg3KGhefXDo6scn"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/flywheel-v2/src/interfaces/IFlywheelRewards.sol": {
        "keccak256": "0xed4398787395ee45cd48f73d236c610c9bcb7b997c4c44dc2e36bcef3d03f74c",
        "urls": [
          "bzz-raw://c3ef1fce0e7bc3c0a2a20ef2305458a419bd51f4af5c354ea42467636ee324a7",
          "dweb:/ipfs/QmUkSxcEf4F9QR4QVEt6rrKjQ9gtufSCLtCwP1iRxmJshk"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0xf8313972e73a49ff9a8c2dee0b9a07a3585bc4d077bd8a9670ebdd76ff390177",
        "urls": [
          "bzz-raw://3fc2a0888fca21e976b4b77ca46891f547ff339a8175bc0a6461a62ce65aa89a",
          "dweb:/ipfs/QmYDpaGK98esv36MBanhjgzpS7QcisrsVMzttPknvxWhRG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/auth/Auth.sol": {
        "keccak256": "0xd5cf8213a40d727af89c93dd359ad68984c123c1a1a93fc9ad7ba62b3436fb75",
        "urls": [
          "bzz-raw://70e87bbc23f0b02fe804779714d65f559db59827d48e5243ee029eaf1c48289d",
          "dweb:/ipfs/QmZtq71QoREyPjoPU3ozq9Fae62jP5kjrcgcEnh4ytFPhf"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeCastLib.sol": {
        "keccak256": "0x636e0f18c1b287c9342e14660a914b37a927d9f64d6c29e27016784979ce8d59",
        "urls": [
          "bzz-raw://7a188290b5ba3c17099bfca1405de70098ee66b0f3027f137de9556ec9300e0e",
          "dweb:/ipfs/QmeXGCTzCvRvS6GydDTmKD2kfQHdBx1Ffk52CdyN6iqXvd"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300",
        "urls": [
          "bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41",
          "dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "bytecode": {
    "object": "0x608060405266b1a2bc2ec5000060665534801561001b57600080fd5b5061175b8061002b6000396000f3fe608060405234801561001057600080fd5b506004361061018b5760003560e01c806310509aa914610190578063116139d3146101a557806317e6a45f146101f65780631c9161e01461020e57806346904840146102215780634e081c95146102415780635a826df3146102545780636e96dfd714610267578063715018a61461027a578063715cad16146102825780637fb5ad381461029557806387788782146102c35780638da5cb5b146102cc5780638fb00913146102d4578063a7a9a62c146102e7578063ab5497d714610324578063abc6d72d146101f6578063b006340d14610282578063b9be44ac14610337578063c2ee3a081461034a578063c3b2886414610359578063cc6bc1011461036e578063cc7ebdc414610396578063dde684a5146103bf578063e1e3dfeb1461041b578063e30c39781461042e578063e6e162e814610441578063ef5cfb8c14610453578063f046ee5c14610466578063f2fde38b14610479578063f7c618c11461048c578063f8c8765e1461049f578063fc4d33f9146104b2575b600080fd5b6101a361019e366004611434565b6104ba565b005b6101d96101b3366004611464565b606e6020908152600092835260408084209091529082529020546001600160e01b031681565b6040516001600160e01b0390911681526020015b60405180910390f35b6101fe600181565b60405190151581526020016101ed565b6101a361021c366004611464565b610540565b606754610234906001600160a01b031681565b6040516101ed9190611492565b6101a361024f3660046114a6565b61054f565b6101a36102623660046114f1565b610561565b6101a36102753660046114f1565b6105b3565b6101a3610608565b6101a36102903660046114f1565b610650565b6102b56102a33660046114f1565b606c6020526000908152604090205481565b6040519081526020016101ed565b6102b560665481565b610234610664565b6101a36102e23660046114f1565b610673565b6102fa6102f53660046114f1565b610765565b6040805182516001600160e01b0316815260209283015163ffffffff1692810192909252016101ed565b606b54610234906001600160a01b031681565b6102b5610345366004611464565b6107b2565b6101d9670de0b6b3a764000081565b610361610828565b6040516101ed9190611515565b61038161037c3660046114a6565b61088a565b604080519283526020830191909152016101ed565b6102b56103a43660046114f1565b6001600160a01b03166000908152606c602052604090205490565b6103f76103cd3660046114f1565b606d602052600090815260409020546001600160e01b03811690600160e01b900463ffffffff1682565b604080516001600160e01b03909316835263ffffffff9091166020830152016101ed565b610234610429366004611562565b610913565b606554610234906001600160a01b031681565b6101a361044f366004611464565b5050565b6101a36104613660046114f1565b61093d565b606a54610234906001600160a01b031681565b6101a36104873660046114f1565b610608565b606854610234906001600160a01b031681565b6101a36104ad36600461157b565b6109d3565b6101a3610b2d565b6104c2610c17565b60665460675460408051928352602083018590526001600160a01b0391821690830152821660608201527fb3b62da5184b9e7e2f5d280014bb485d4444b66738025e5fb5738bbddcb6b8489060800160405180910390a1606691909155606780546001600160a01b0319166001600160a01b03909216919091179055565b61054a82826107b2565b505050565b61055a83838361088a565b5050505050565b610569610c17565b606b80546001600160a01b0319166001600160a01b0383169081179091556040517ff2fb4350e8466c152b500f8e58c0c23f01bbc332dc82f5375267e70b5f50f19990600090a250565b6105bb610c17565b606580546001600160a01b038381166001600160a01b031983161790925560405191169060008051602061172f833981519152906105fc90839085906115d7565b60405180910390a15050565b610610610c17565b60405162461bcd60e51b815260206004820152601060248201526f6e6f74207573656420616e796d6f726560801b60448201526064015b60405180910390fd5b610658610c17565b61066181610c78565b50565b6033546001600160a01b031690565b61067b610c17565b606854606a546040516370a0823160e01b81526000926001600160a01b03908116926370a08231926106b39290911690600401611492565b602060405180830381865afa1580156106d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f491906115f1565b9050801561071a57606a5460685461071a916001600160a01b0391821691168484610dae565b606a80546001600160a01b0319166001600160a01b0384169081179091556040517ff1ba364f52e65f08563196b608289b1da2a923cdd0aa7e20dfe664c4ad294c9590600090a25050565b61076d611408565b506001600160a01b03166000908152606d60209081526040918290208251808401909352546001600160e01b0381168352600160e01b900463ffffffff169082015290565b6001600160a01b0382166000908152606d602090815260408083208151808301909252546001600160e01b038116808352600160e01b90910463ffffffff169282019290925290610807576000915050610822565b6108118482610e31565b905061081e8484836110d6565b9150505b92915050565b6060606980548060200260200160405190810160405280929190818152602001828054801561088057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610862575b5050505050905090565b6001600160a01b0383166000908152606d602090815260408083208151808301909252546001600160e01b038116808352600160e01b90910463ffffffff169282019290925282916108e357600080925092505061090b565b6108ed8682610e31565b90506108fa8686836110d6565b6109058786846110d6565b92509250505b935093915050565b6069818154811061092357600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b0381166000908152606c6020526040902054801561044f576001600160a01b038083166000908152606c6020526040812055606a5460685461098c9290811691168484610dae565b816001600160a01b03167f1f89f96333d3133000ee447473151fa9606543368f02271c9d95ae14f13bcc67826040516109c791815260200190565b60405180910390a25050565b600054610100900460ff16158080156109f35750600054600160ff909116105b80610a0d5750303b158015610a0d575060005460ff166001145b610a705760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610647565b6000805460ff191660011790558015610a93576000805461ff0019166101001790555b610a9b611305565b606880546001600160a01b038088166001600160a01b031992831617909255606a8054878416908316179055606b805492861692909116919091179055610ae182611334565b801561055a576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050505050565b6065546001600160a01b03163314610b7f5760405162461bcd60e51b81526020600482015260156024820152743737ba103a3432903832b73234b7339037bbb732b960591b6044820152606401610647565b6000610b89610664565b6065549091506001600160a01b0316610ba181611334565b606580546001600160a01b03191690556040517f70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b236490610be49084906000906115d7565b60405180910390a160655460405160008051602061172f833981519152916105fc9184916001600160a01b0316906115d7565b33610c20610664565b6001600160a01b031614610c765760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610647565b565b6001600160a01b0381166000908152606d60205260409020546001600160e01b031615610cd25760405162461bcd60e51b8152602060048201526008602482015267737472617465677960c01b6044820152606401610647565b6040518060400160405280670de0b6b3a76400006001600160e01b03168152602001610cfd42611386565b63ffffffff9081169091526001600160a01b0383166000818152606d6020908152604080832086519690920151909416600160e01b026001600160e01b0390951694909417909355606980546001810182559084527f7fb4302e8e91f9110a6554c2c0a24601252c2a42c2220ca988efcfe3999143080180546001600160a01b03191682179055905190917f69887873d46778fb35539b0a9992d9176ca03c1820b0afb538bc3a6f63326b1091a250565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d116001600051141617169150508061055a5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606401610647565b610e39611408565b606a54602083015160405163b334db7b60e01b81526001600160a01b03868116600483015263ffffffff9092166024820152600092919091169063b334db7b906044016020604051808303816000875af1158015610e9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebf91906115f1565b839250905080156110cf57606b546000906001600160a01b0316610f4457846001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3f91906115f1565b610fb5565b606b54604051631e1932fb60e01b81526001600160a01b0390911690631e1932fb90610f74908890600401611492565b602060405180830381865afa158015610f91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb591906115f1565b90506000670de0b6b3a76400006001600160e01b031660665484610fd99190611620565b610fe3919061163f565b6067546001600160a01b03166000908152606c6020526040812080549293508392909190611012908490611661565b9091555061102290508184611679565b9250600082156110545761105183611042670de0b6b3a764000087611620565b61104c919061163f565b61139c565b90505b604051806040016040528082886000015161106f9190611690565b6001600160e01b0316815260200161108642611386565b63ffffffff9081169091526001600160a01b0389166000908152606d60209081526040909120835191840151909216600160e01b026001600160e01b0390911617905594505050505b5092915050565b80516001600160a01b038481166000908152606e60209081526040808320938716835292905290812080546001600160e01b038085166001600160e01b0319831617909255919291168061112f5750670de0b6b3a76400005b600061113b82846116bb565b606b549091506000906001600160a01b03166111c3576040516370a0823160e01b81526001600160a01b038916906370a082319061117d908a90600401611492565b602060405180830381865afa15801561119a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111be91906115f1565b611236565b606b54604051631a50ef2f60e01b81526001600160a01b0390911690631a50ef2f906111f5908b908b906004016115d7565b602060405180830381865afa158015611212573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123691906115f1565b90506000670de0b6b3a76400006112566001600160e01b03851684611620565b611260919061163f565b6001600160a01b0389166000908152606c602052604081205491925090611288908390611661565b6001600160a01b03808b166000818152606c6020526040908190208490555192935091908c16907f35a61f3c719e8f59f636c336e563ba74f667fadafcc80d709231ca8bb59eecce906112f09086908b909182526001600160e01b0316602082015260400190565b60405180910390a39998505050505050505050565b600054610100900460ff1661132c5760405162461bcd60e51b8152600401610647906116e3565b610c766113ae565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000600160201b821061139857600080fd5b5090565b6000600160e01b821061139857600080fd5b600054610100900460ff166113d55760405162461bcd60e51b8152600401610647906116e3565b610c76600054610100900460ff166113ff5760405162461bcd60e51b8152600401610647906116e3565b610c7633611334565b604080518082019091526000808252602082015290565b6001600160a01b038116811461066157600080fd5b6000806040838503121561144757600080fd5b8235915060208301356114598161141f565b809150509250929050565b6000806040838503121561147757600080fd5b82356114828161141f565b915060208301356114598161141f565b6001600160a01b0391909116815260200190565b6000806000606084860312156114bb57600080fd5b83356114c68161141f565b925060208401356114d68161141f565b915060408401356114e68161141f565b809150509250925092565b60006020828403121561150357600080fd5b813561150e8161141f565b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156115565783516001600160a01b031683529284019291840191600101611531565b50909695505050505050565b60006020828403121561157457600080fd5b5035919050565b6000806000806080858703121561159157600080fd5b843561159c8161141f565b935060208501356115ac8161141f565b925060408501356115bc8161141f565b915060608501356115cc8161141f565b939692955090935050565b6001600160a01b0392831681529116602082015260400190565b60006020828403121561160357600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561163a5761163a61160a565b500290565b60008261165c57634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156116745761167461160a565b500190565b60008282101561168b5761168b61160a565b500390565b60006001600160e01b038281168482168083038211156116b2576116b261160a565b01949350505050565b60006001600160e01b03838116908316818110156116db576116db61160a565b039392505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056feb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37ba164736f6c634300080a000a",
    "sourceMap": "179:844:19:-:0;;;707:4:20;675:36;;179:844:19;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061018b5760003560e01c806310509aa914610190578063116139d3146101a557806317e6a45f146101f65780631c9161e01461020e57806346904840146102215780634e081c95146102415780635a826df3146102545780636e96dfd714610267578063715018a61461027a578063715cad16146102825780637fb5ad381461029557806387788782146102c35780638da5cb5b146102cc5780638fb00913146102d4578063a7a9a62c146102e7578063ab5497d714610324578063abc6d72d146101f6578063b006340d14610282578063b9be44ac14610337578063c2ee3a081461034a578063c3b2886414610359578063cc6bc1011461036e578063cc7ebdc414610396578063dde684a5146103bf578063e1e3dfeb1461041b578063e30c39781461042e578063e6e162e814610441578063ef5cfb8c14610453578063f046ee5c14610466578063f2fde38b14610479578063f7c618c11461048c578063f8c8765e1461049f578063fc4d33f9146104b2575b600080fd5b6101a361019e366004611434565b6104ba565b005b6101d96101b3366004611464565b606e6020908152600092835260408084209091529082529020546001600160e01b031681565b6040516001600160e01b0390911681526020015b60405180910390f35b6101fe600181565b60405190151581526020016101ed565b6101a361021c366004611464565b610540565b606754610234906001600160a01b031681565b6040516101ed9190611492565b6101a361024f3660046114a6565b61054f565b6101a36102623660046114f1565b610561565b6101a36102753660046114f1565b6105b3565b6101a3610608565b6101a36102903660046114f1565b610650565b6102b56102a33660046114f1565b606c6020526000908152604090205481565b6040519081526020016101ed565b6102b560665481565b610234610664565b6101a36102e23660046114f1565b610673565b6102fa6102f53660046114f1565b610765565b6040805182516001600160e01b0316815260209283015163ffffffff1692810192909252016101ed565b606b54610234906001600160a01b031681565b6102b5610345366004611464565b6107b2565b6101d9670de0b6b3a764000081565b610361610828565b6040516101ed9190611515565b61038161037c3660046114a6565b61088a565b604080519283526020830191909152016101ed565b6102b56103a43660046114f1565b6001600160a01b03166000908152606c602052604090205490565b6103f76103cd3660046114f1565b606d602052600090815260409020546001600160e01b03811690600160e01b900463ffffffff1682565b604080516001600160e01b03909316835263ffffffff9091166020830152016101ed565b610234610429366004611562565b610913565b606554610234906001600160a01b031681565b6101a361044f366004611464565b5050565b6101a36104613660046114f1565b61093d565b606a54610234906001600160a01b031681565b6101a36104873660046114f1565b610608565b606854610234906001600160a01b031681565b6101a36104ad36600461157b565b6109d3565b6101a3610b2d565b6104c2610c17565b60665460675460408051928352602083018590526001600160a01b0391821690830152821660608201527fb3b62da5184b9e7e2f5d280014bb485d4444b66738025e5fb5738bbddcb6b8489060800160405180910390a1606691909155606780546001600160a01b0319166001600160a01b03909216919091179055565b61054a82826107b2565b505050565b61055a83838361088a565b5050505050565b610569610c17565b606b80546001600160a01b0319166001600160a01b0383169081179091556040517ff2fb4350e8466c152b500f8e58c0c23f01bbc332dc82f5375267e70b5f50f19990600090a250565b6105bb610c17565b606580546001600160a01b038381166001600160a01b031983161790925560405191169060008051602061172f833981519152906105fc90839085906115d7565b60405180910390a15050565b610610610c17565b60405162461bcd60e51b815260206004820152601060248201526f6e6f74207573656420616e796d6f726560801b60448201526064015b60405180910390fd5b610658610c17565b61066181610c78565b50565b6033546001600160a01b031690565b61067b610c17565b606854606a546040516370a0823160e01b81526000926001600160a01b03908116926370a08231926106b39290911690600401611492565b602060405180830381865afa1580156106d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f491906115f1565b9050801561071a57606a5460685461071a916001600160a01b0391821691168484610dae565b606a80546001600160a01b0319166001600160a01b0384169081179091556040517ff1ba364f52e65f08563196b608289b1da2a923cdd0aa7e20dfe664c4ad294c9590600090a25050565b61076d611408565b506001600160a01b03166000908152606d60209081526040918290208251808401909352546001600160e01b0381168352600160e01b900463ffffffff169082015290565b6001600160a01b0382166000908152606d602090815260408083208151808301909252546001600160e01b038116808352600160e01b90910463ffffffff169282019290925290610807576000915050610822565b6108118482610e31565b905061081e8484836110d6565b9150505b92915050565b6060606980548060200260200160405190810160405280929190818152602001828054801561088057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610862575b5050505050905090565b6001600160a01b0383166000908152606d602090815260408083208151808301909252546001600160e01b038116808352600160e01b90910463ffffffff169282019290925282916108e357600080925092505061090b565b6108ed8682610e31565b90506108fa8686836110d6565b6109058786846110d6565b92509250505b935093915050565b6069818154811061092357600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b0381166000908152606c6020526040902054801561044f576001600160a01b038083166000908152606c6020526040812055606a5460685461098c9290811691168484610dae565b816001600160a01b03167f1f89f96333d3133000ee447473151fa9606543368f02271c9d95ae14f13bcc67826040516109c791815260200190565b60405180910390a25050565b600054610100900460ff16158080156109f35750600054600160ff909116105b80610a0d5750303b158015610a0d575060005460ff166001145b610a705760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610647565b6000805460ff191660011790558015610a93576000805461ff0019166101001790555b610a9b611305565b606880546001600160a01b038088166001600160a01b031992831617909255606a8054878416908316179055606b805492861692909116919091179055610ae182611334565b801561055a576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050505050565b6065546001600160a01b03163314610b7f5760405162461bcd60e51b81526020600482015260156024820152743737ba103a3432903832b73234b7339037bbb732b960591b6044820152606401610647565b6000610b89610664565b6065549091506001600160a01b0316610ba181611334565b606580546001600160a01b03191690556040517f70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b236490610be49084906000906115d7565b60405180910390a160655460405160008051602061172f833981519152916105fc9184916001600160a01b0316906115d7565b33610c20610664565b6001600160a01b031614610c765760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610647565b565b6001600160a01b0381166000908152606d60205260409020546001600160e01b031615610cd25760405162461bcd60e51b8152602060048201526008602482015267737472617465677960c01b6044820152606401610647565b6040518060400160405280670de0b6b3a76400006001600160e01b03168152602001610cfd42611386565b63ffffffff9081169091526001600160a01b0383166000818152606d6020908152604080832086519690920151909416600160e01b026001600160e01b0390951694909417909355606980546001810182559084527f7fb4302e8e91f9110a6554c2c0a24601252c2a42c2220ca988efcfe3999143080180546001600160a01b03191682179055905190917f69887873d46778fb35539b0a9992d9176ca03c1820b0afb538bc3a6f63326b1091a250565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d116001600051141617169150508061055a5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606401610647565b610e39611408565b606a54602083015160405163b334db7b60e01b81526001600160a01b03868116600483015263ffffffff9092166024820152600092919091169063b334db7b906044016020604051808303816000875af1158015610e9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebf91906115f1565b839250905080156110cf57606b546000906001600160a01b0316610f4457846001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3f91906115f1565b610fb5565b606b54604051631e1932fb60e01b81526001600160a01b0390911690631e1932fb90610f74908890600401611492565b602060405180830381865afa158015610f91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb591906115f1565b90506000670de0b6b3a76400006001600160e01b031660665484610fd99190611620565b610fe3919061163f565b6067546001600160a01b03166000908152606c6020526040812080549293508392909190611012908490611661565b9091555061102290508184611679565b9250600082156110545761105183611042670de0b6b3a764000087611620565b61104c919061163f565b61139c565b90505b604051806040016040528082886000015161106f9190611690565b6001600160e01b0316815260200161108642611386565b63ffffffff9081169091526001600160a01b0389166000908152606d60209081526040909120835191840151909216600160e01b026001600160e01b0390911617905594505050505b5092915050565b80516001600160a01b038481166000908152606e60209081526040808320938716835292905290812080546001600160e01b038085166001600160e01b0319831617909255919291168061112f5750670de0b6b3a76400005b600061113b82846116bb565b606b549091506000906001600160a01b03166111c3576040516370a0823160e01b81526001600160a01b038916906370a082319061117d908a90600401611492565b602060405180830381865afa15801561119a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111be91906115f1565b611236565b606b54604051631a50ef2f60e01b81526001600160a01b0390911690631a50ef2f906111f5908b908b906004016115d7565b602060405180830381865afa158015611212573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123691906115f1565b90506000670de0b6b3a76400006112566001600160e01b03851684611620565b611260919061163f565b6001600160a01b0389166000908152606c602052604081205491925090611288908390611661565b6001600160a01b03808b166000818152606c6020526040908190208490555192935091908c16907f35a61f3c719e8f59f636c336e563ba74f667fadafcc80d709231ca8bb59eecce906112f09086908b909182526001600160e01b0316602082015260400190565b60405180910390a39998505050505050505050565b600054610100900460ff1661132c5760405162461bcd60e51b8152600401610647906116e3565b610c766113ae565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000600160201b821061139857600080fd5b5090565b6000600160e01b821061139857600080fd5b600054610100900460ff166113d55760405162461bcd60e51b8152600401610647906116e3565b610c76600054610100900460ff166113ff5760405162461bcd60e51b8152600401610647906116e3565b610c7633611334565b604080518082019091526000808252602082015290565b6001600160a01b038116811461066157600080fd5b6000806040838503121561144757600080fd5b8235915060208301356114598161141f565b809150509250929050565b6000806040838503121561147757600080fd5b82356114828161141f565b915060208301356114598161141f565b6001600160a01b0391909116815260200190565b6000806000606084860312156114bb57600080fd5b83356114c68161141f565b925060208401356114d68161141f565b915060408401356114e68161141f565b809150509250925092565b60006020828403121561150357600080fd5b813561150e8161141f565b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156115565783516001600160a01b031683529284019291840191600101611531565b50909695505050505050565b60006020828403121561157457600080fd5b5035919050565b6000806000806080858703121561159157600080fd5b843561159c8161141f565b935060208501356115ac8161141f565b925060408501356115bc8161141f565b915060608501356115cc8161141f565b939692955090935050565b6001600160a01b0392831681529116602082015260400190565b60006020828403121561160357600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561163a5761163a61160a565b500290565b60008261165c57634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156116745761167461160a565b500190565b60008282101561168b5761168b61160a565b500390565b60006001600160e01b038281168482168083038211156116b2576116b261160a565b01949350505050565b60006001600160e01b03838116908316818110156116db576116db61160a565b039392505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056feb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37ba164736f6c634300080a000a",
    "sourceMap": "179:844:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6917:263:20;;;;;;:::i;:::-;;:::i;:::-;;1607:62;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1607:62:20;;;;;;-1:-1:-1;;;;;1042:32:33;;;1024:51;;1012:2;997:18;1607:62:20;;;;;;;;280:38:19;;314:4;280:38;;;;;1251:14:33;;1244:22;1226:41;;1214:2;1199:18;280:38:19;1086:187:33;323:120:19;;;;;;:::i;:::-;;:::i;793:27:20:-;;;;;-1:-1:-1;;;;;793:27:20;;;;;;;;;;:::i;531:144:19:-;;;;;;:::i;:::-;;:::i;6452:161:20:-;;;;;;:::i;:::-;;:::i;1233:386:18:-;;;;;;:::i;:::-;;:::i;2334:92::-;;;:::i;5023:109:20:-;;;;;;:::i;:::-;;:::i;1308:49::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3356:25:33;;;3344:2;3329:18;1308:49:20;3210:177:33;675:36:20;;;;;;1441:85:25;;;:::i;5799:421:20:-;;;;;;:::i;:::-;;:::i;899:122:19:-;;;;;;:::i;:::-;;:::i;:::-;;;;3900:13:33;;-1:-1:-1;;;;;3896:39:33;3878:58;;3996:4;3984:17;;;3978:24;4004:10;3974:41;3952:20;;;3945:71;;;;3851:18;899:122:19;3670:352:33;1192:39:20;;;;;-1:-1:-1;;;;;1192:39:20;;;3121:262;;;;;;:::i;:::-;;:::i;1411:34::-;;1441:4;1411:34;;5453:98;;;:::i;:::-;;;;;;;:::i;3803:355::-;;;;;;:::i;:::-;;:::i;:::-;;;;5662:25:33;;;5718:2;5703:18;;5696:34;;;;5635:18;3803:355:20;5488:248:33;679:105:19;;;;;;:::i;:::-;-1:-1:-1;;;;;759:20:19;737:7;759:20;;;:14;:20;;;;;;;679:105;1513:51:20;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1513:51:20;;;-1:-1:-1;;;1513:51:20;;;;;;;;;;-1:-1:-1;;;;;5931:32:33;;;5913:51;;6012:10;6000:23;;;5995:2;5980:18;;5973:51;5886:18;1513:51:20;5741:289:33;974:28:20;;;;;;:::i;:::-;;:::i;530:27:18:-;;;;;-1:-1:-1;;;;;530:27:18;;;447:80:19;;;;;;:::i;:::-;;;;4338:276:20;;;;;;:::i;:::-;;:::i;1063:39::-;;;;;-1:-1:-1;;;;;1063:39:20;;;2430:108:18;;;;;;:::i;:::-;;:::i;894:24:20:-;;;;;-1:-1:-1;;;;;894:24:20;;;1674:342;;;;;;:::i;:::-;;:::i;1789:541:18:-;;;:::i;6917:263:20:-;1334:13:25;:11;:13::i;:::-;7041:14:20::1;::::0;7074:12:::1;::::0;7022:80:::1;::::0;;7651:25:33;;;7707:2;7692:18;;7685:34;;;-1:-1:-1;;;;;7074:12:20;;::::1;7773:18:33::0;;;7766:43;7845:15;;7840:2;7825:18;;7818:43;7022:80:20::1;::::0;7638:3:33;7623:19;7022:80:20::1;;;;;;;7109:14;:32:::0;;;;7147:12:::1;:28:::0;;-1:-1:-1;;;;;;7147:28:20::1;-1:-1:-1::0;;;;;7147:28:20;;::::1;::::0;;;::::1;::::0;;6917:263::o;323:120:19:-;407:31;420:6;429:8;407:6;:31::i;:::-;;323:120;;:::o;531:144::-;639:31;652:6;661:3;666;639:6;:31::i;:::-;;;531:144;;;:::o;6452:161:20:-;1334:13:25;:11;:13::i;:::-;6526:15:20::1;:28:::0;;-1:-1:-1;;;;;;6526:28:20::1;-1:-1:-1::0;;;;;6526:28:20;::::1;::::0;;::::1;::::0;;;6566:42:::1;::::0;::::1;::::0;-1:-1:-1;;6566:42:20::1;6452:161:::0;:::o;1233:386:18:-;1334:13:25;:11;:13::i;:::-;1389:12:18::1;::::0;;-1:-1:-1;;;;;1461:30:18;;::::1;-1:-1:-1::0;;;;;;1461:30:18;::::1;;::::0;;;1565:49:::1;::::0;1389:12;::::1;::::0;-1:-1:-1;;;;;;;;;;;1565:49:18;::::1;::::0;1389:12;;1476:15;;1565:49:::1;:::i;:::-;;;;;;;;1301:318;1233:386:::0;:::o;2334:92::-;1334:13:25;:11;:13::i;:::-;2395:26:18::1;::::0;-1:-1:-1;;;2395:26:18;;8383:2:33;2395:26:18::1;::::0;::::1;8365:21:33::0;8422:2;8402:18;;;8395:30;-1:-1:-1;;;8441:18:33;;;8434:46;8497:18;;2395:26:18::1;;;;;;;;5023:109:20::0;1334:13:25;:11;:13::i;:::-;5095:32:20::1;5118:8;5095:22;:32::i;:::-;5023:109:::0;:::o;1441:85:25:-;1513:6;;-1:-1:-1;;;;;1513:6:25;;1441:85::o;5799:421:20:-;1334:13:25;:11;:13::i;:::-;5916:11:20::1;::::0;5946:15:::1;::::0;5916:47:::1;::::0;-1:-1:-1;;;5916:47:20;;5889:24:::1;::::0;-1:-1:-1;;;;;5916:11:20;;::::1;::::0;:21:::1;::::0;:47:::1;::::0;5946:15;;::::1;::::0;5916:47:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5889:74:::0;-1:-1:-1;5973:20:20;;5969:142:::1;;6040:15;::::0;6003:11:::1;::::0;:101:::1;::::0;-1:-1:-1;;;;;6003:11:20;;::::1;::::0;6040:15:::1;6066:18:::0;6087:16;6003:28:::1;:101::i;:::-;6117:15;:36:::0;;-1:-1:-1;;;;;;6117:36:20::1;-1:-1:-1::0;;;;;6117:36:20;::::1;::::0;;::::1;::::0;;;6165:50:::1;::::0;::::1;::::0;-1:-1:-1;;6165:50:20::1;5883:337;5799:421:::0;:::o;899:122:19:-;959:19;;:::i;:::-;-1:-1:-1;;;;;;993:23:19;;;;;:13;:23;;;;;;;;;986:30;;;;;;;;;-1:-1:-1;;;;;986:30:19;;;;-1:-1:-1;;;986:30:19;;;;;;;;;899:122::o;3121:262:20:-;-1:-1:-1;;;;;3226:23:20;;3183:7;3226:23;;;:13;:23;;;;;;;;3198:51;;;;;;;;;-1:-1:-1;;;;;3198:51:20;;;;;-1:-1:-1;;;3198:51:20;;;;;;;;;;;;;3256:30;;3285:1;3278:8;;;;;3256:30;3301:31;3316:8;3326:5;3301:14;:31::i;:::-;3293:39;;3345:33;3356:8;3366:4;3372:5;3345:10;:33::i;:::-;3338:40;;;3121:262;;;;;:::o;5453:98::-;5504:14;5533:13;5526:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5526:20:20;;;;;;;;;;;;;;;;;;;;;;;5453:98;:::o;3803:355::-;-1:-1:-1;;;;;3953:23:20;;3901:7;3953:23;;;:13;:23;;;;;;;;3925:51;;;;;;;;;-1:-1:-1;;;;;3925:51:20;;;;;-1:-1:-1;;;3925:51:20;;;;;;;;;;;;3901:7;;3983:35;;4013:1;4016;4005:13;;;;;;;3983:35;4033:31;4048:8;4058:5;4033:14;:31::i;:::-;4025:39;;4078:33;4089:8;4099:4;4105:5;4078:10;:33::i;:::-;4113:39;4124:8;4134:10;4146:5;4113:10;:39::i;:::-;4070:83;;;;;3803:355;;;;;;;:::o;974:28::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;974:28:20;;-1:-1:-1;974:28:20;:::o;4338:276::-;-1:-1:-1;;;;;4407:20:20;;4389:15;4407:20;;;:14;:20;;;;;;4438:12;;4434:176;;-1:-1:-1;;;;;4460:20:20;;;4483:1;4460:20;;;:14;:20;;;;;:24;4530:15;;4493:11;;:69;;:11;;;;4530:15;4475:4;4554:7;4493:28;:69::i;:::-;4589:4;-1:-1:-1;;;;;4576:27:20;;4595:7;4576:27;;;;3356:25:33;;3344:2;3329:18;;3210:177;4576:27:20;;;;;;;;4383:231;4338:276;:::o;1674:342::-;3111:19:26;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:26;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:26;1476:19:27;:23;;;3219:66:26;;-1:-1:-1;3268:12:26;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:26;;8917:2:33;3157:201:26;;;8899:21:33;8956:2;8936:18;;;8929:30;8995:34;8975:18;;;8968:62;-1:-1:-1;;;9046:18:33;;;9039:44;9100:19;;3157:201:26;8715:410:33;3157:201:26;3368:12;:16;;-1:-1:-1;;3368:16:26;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:26;;;;;3394:65;1845:20:20::1;:18;:20::i;:::-;1872:11;:26:::0;;-1:-1:-1;;;;;1872:26:20;;::::1;-1:-1:-1::0;;;;;;1872:26:20;;::::1;;::::0;;;1904:15:::1;:34:::0;;;;::::1;::::0;;::::1;;::::0;;1944:15:::1;:34:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;1985:26:::1;2004:6:::0;1985:18:::1;:26::i;:::-;3483:14:26::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:26;;;3553:14;;-1:-1:-1;9282:36:33;;3553:14:26;;9270:2:33;9255:18;3553:14:26;;;;;;;3101:483;1674:342:20;;;;:::o;1789:541:18:-;1916:12;;-1:-1:-1;;;;;1916:12:18;1902:10;:26;1894:60;;;;-1:-1:-1;;;1894:60:18;;9531:2:33;1894:60:18;;;9513:21:33;9570:2;9550:18;;;9543:30;-1:-1:-1;;;9589:18:33;;;9582:51;9650:18;;1894:60:18;9329:345:33;1894:60:18;2009:16;2028:7;:5;:7::i;:::-;2067:12;;2009:26;;-1:-1:-1;;;;;;2067:12:18;2129:32;2067:12;2129:18;:32::i;:::-;2199:12;:25;;-1:-1:-1;;;;;;2199:25:18;;;2236:32;;;;;;2245:8;;2222:1;;2236:32;:::i;:::-;;;;;;;;2312:12;;2279:46;;-1:-1:-1;;;;;;;;;;;2279:46:18;;;2295:15;;-1:-1:-1;;;;;2312:12:18;;2279:46;:::i;1599:130:25:-;929:10:28;1662:7:25;:5;:7::i;:::-;-1:-1:-1;;;;;1662:23:25;;1654:68;;;;-1:-1:-1;;;1654:68:25;;9881:2:33;1654:68:25;;;9863:21:33;;;9900:18;;;9893:30;9959:34;9939:18;;;9932:62;10011:18;;1654:68:25;9679:356:33;1654:68:25;1599:130::o;5136:313:20:-;-1:-1:-1;;;;;5207:23:20;;;;;;:13;:23;;;;;:29;-1:-1:-1;;;;;5207:29:20;:34;5199:55;;;;-1:-1:-1;;;5199:55:20;;10242:2:33;5199:55:20;;;10224:21:33;10281:1;10261:18;;;10254:29;-1:-1:-1;;;10299:18:33;;;10292:38;10347:18;;5199:55:20;10040:331:33;5199:55:20;5286:82;;;;;;;;1441:4;-1:-1:-1;;;;;5286:82:20;;;;;5335:30;:15;:28;:30::i;:::-;5286:82;;;;;;;-1:-1:-1;;;;;5260:23:20;;;;;;:13;:23;;;;;;;;:108;;;;;;;;;;-1:-1:-1;;;5260:108:20;-1:-1:-1;;;;;5260:108:20;;;;;;;;;;5375:13;:28;;5260:108;5375:28;;;;;;;;;;;-1:-1:-1;;;;;;5375:28:20;;;;;5414:30;;5260:23;;5414:30;;;5136:313;:::o;1285:1573:32:-;1423:12;1550:4;1544:11;-1:-1:-1;;;1673:17:32;1666:93;1806:4;1802:1;1783:17;1779:25;1772:39;1890:2;1885;1866:17;1862:26;1855:38;1970:6;1965:2;1946:17;1942:26;1935:42;2774:2;2771:1;2766:3;2747:17;2744:1;2737:5;2730;2725:52;2293:16;2286:24;2280:2;2262:16;2259:24;2255:1;2251;2245:8;2242:15;2238:46;2235:76;2035:756;2024:767;;;2819:7;2811:40;;;;-1:-1:-1;;;2811:40:32;;10578:2:33;2811:40:32;;;10560:21:33;10617:2;10597:18;;;10590:30;-1:-1:-1;;;10636:18:33;;;10629:50;10696:18;;2811:40:32;10376:344:33;7613:1191:20;7705:32;;:::i;:::-;7828:15;;7872:26;;;;7828:71;;-1:-1:-1;;;7828:71:20;;-1:-1:-1;;;;;10930:32:33;;;7828:71:20;;;10912:51:33;11011:10;10999:23;;;10979:18;;;10972:51;7795:30:20;;7828:15;;;;;:33;;10885:18:33;;7828:71:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7921:5;;-1:-1:-1;7795:104:20;-1:-1:-1;7937:26:20;;7933:867;;8083:15;;8052:20;;-1:-1:-1;;;;;8083:15:20;8075:126;;8179:8;-1:-1:-1;;;;;8179:20:20;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8075:126;;;8124:15;;:44;;-1:-1:-1;;;8124:44:20;;-1:-1:-1;;;;;8124:15:20;;;;:34;;:44;;8159:8;;8124:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8052:149;;8210:19;1441:4;-1:-1:-1;;;;;8232:47:20;8258:14;;8233:22;:39;;;;:::i;:::-;8232:47;;;;:::i;:::-;8303:12;;-1:-1:-1;;;;;8303:12:20;8288:28;;;;:14;:28;;;;;:43;;8210:69;;-1:-1:-1;8210:69:20;;8288:28;;;:43;;8210:69;;8288:43;:::i;:::-;;;;-1:-1:-1;8339:37:20;;-1:-1:-1;8365:11:20;8339:37;;:::i;:::-;;-1:-1:-1;8385:18:20;8416:17;;8412:99;;8448:63;8482:12;8450:28;1441:4;8450:22;:28;:::i;:::-;8449:45;;;;:::i;:::-;8448:61;:63::i;:::-;8435:76;;8412:99;8622:125;;;;;;;;8666:10;8652:5;:11;;;:24;;;;:::i;:::-;-1:-1:-1;;;;;8622:125:20;;;;;8708:30;:15;:28;:30::i;:::-;8622:125;;;;;;;-1:-1:-1;;;;;8755:23:20;;;;;;:13;:23;;;;;;;;:38;;;;;;;;;-1:-1:-1;;;8755:38:20;-1:-1:-1;;;;;8755:38:20;;;;;;8607:140;-1:-1:-1;;;;7933:867:20;7741:1063;7613:1191;;;;:::o;8875:1251::-;9044:11;;-1:-1:-1;;;;;9085:19:20;;;8985:7;9085:19;;;:9;:19;;;;;;;;:25;;;;;;;;;;;;;-1:-1:-1;;;;;9150:41:20;;;-1:-1:-1;;;;;;9150:41:20;;;;;;8985:7;;9044:11;9085:25;;9388:58;;-1:-1:-1;1441:4:20;9388:58;9452:18;9473:29;9489:13;9473;:29;:::i;:::-;9620:15;;9452:50;;-1:-1:-1;9587:22:20;;-1:-1:-1;;;;;9620:15:20;9612:128;;9716:24;;-1:-1:-1;;;9716:24:20;;-1:-1:-1;;;;;9716:18:20;;;;;:24;;9735:4;;9716:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9612:128;;;9659:15;;:48;;-1:-1:-1;;;9659:48:20;;-1:-1:-1;;;;;9659:15:20;;;;:32;;:48;;9692:8;;9702:4;;9659:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9587:153;-1:-1:-1;9849:21:20;1441:4;9874:27;-1:-1:-1;;;;;9874:27:20;;9587:153;9874:27;:::i;:::-;9873:35;;;;:::i;:::-;-1:-1:-1;;;;;9940:20:20;;9914:23;9940:20;;;:14;:20;;;;;;9849:59;;-1:-1:-1;9914:23:20;9940:36;;9849:59;;9940:36;:::i;:::-;-1:-1:-1;;;;;9983:20:20;;;;;;;:14;:20;;;;;;;:38;;;10033:59;9914:62;;-1:-1:-1;9983:20:20;10033:59;;;;;;;;10063:13;;10078;;12801:25:33;;;-1:-1:-1;;;;;12862:32:33;12857:2;12842:18;;12835:60;12789:2;12774:18;;12627:274;10033:59:20;;;;;;;;10106:15;8875:1251;-1:-1:-1;;;;;;;;;8875:1251:20:o;562:83:18:-;4910:13:26;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:26;;;;;;;:::i;:::-;624:16:18::1;:14;:16::i;2673:187:25:-:0;2765:6;;;-1:-1:-1;;;;;2781:17:25;;;-1:-1:-1;;;;;;2781:17:25;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;1364:127:31:-;1420:8;-1:-1:-1;;;1448:1:31;:11;1440:20;;;;;;-1:-1:-1;1482:1:31;1364:127::o;550:131::-;607:9;-1:-1:-1;;;636:1:31;:12;628:21;;;;;1003:95:25;4910:13:26;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:26;;;;;;;:::i;:::-;1065:26:25::1;4910:13:26::0;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:26;;;;;;;:::i;:::-;1176:32:25::1;929:10:28::0;1176:18:25::1;:32::i;-1:-1:-1:-:0;;;;;;;;;;;;;;;;;;;:::o;14:131:33:-;-1:-1:-1;;;;;89:31:33;;79:42;;69:70;;135:1;132;125:12;150:315;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;331:9;318:23;308:33;;391:2;380:9;376:18;363:32;404:31;429:5;404:31;:::i;:::-;454:5;444:15;;;150:315;;;;;:::o;470:403::-;553:6;561;614:2;602:9;593:7;589:23;585:32;582:52;;;630:1;627;620:12;582:52;669:9;656:23;688:31;713:5;688:31;:::i;:::-;738:5;-1:-1:-1;795:2:33;780:18;;767:32;808:33;767:32;808:33;:::i;1671:203::-;-1:-1:-1;;;;;1835:32:33;;;;1817:51;;1805:2;1790:18;;1671:203::o;1879:529::-;1956:6;1964;1972;2025:2;2013:9;2004:7;2000:23;1996:32;1993:52;;;2041:1;2038;2031:12;1993:52;2080:9;2067:23;2099:31;2124:5;2099:31;:::i;:::-;2149:5;-1:-1:-1;2206:2:33;2191:18;;2178:32;2219:33;2178:32;2219:33;:::i;:::-;2271:7;-1:-1:-1;2330:2:33;2315:18;;2302:32;2343:33;2302:32;2343:33;:::i;:::-;2395:7;2385:17;;;1879:529;;;;;:::o;2413:273::-;2498:6;2551:2;2539:9;2530:7;2526:23;2522:32;2519:52;;;2567:1;2564;2557:12;2519:52;2606:9;2593:23;2625:31;2650:5;2625:31;:::i;:::-;2675:5;2413:273;-1:-1:-1;;;2413:273:33:o;4261:673::-;4447:2;4499:21;;;4569:13;;4472:18;;;4591:22;;;4418:4;;4447:2;4670:15;;;;4644:2;4629:18;;;4418:4;4713:195;4727:6;4724:1;4721:13;4713:195;;;4792:13;;-1:-1:-1;;;;;4788:39:33;4776:52;;4883:15;;;;4848:12;;;;4824:1;4742:9;4713:195;;;-1:-1:-1;4925:3:33;;4261:673;-1:-1:-1;;;;;;4261:673:33:o;6035:180::-;6094:6;6147:2;6135:9;6126:7;6122:23;6118:32;6115:52;;;6163:1;6160;6153:12;6115:52;-1:-1:-1;6186:23:33;;6035:180;-1:-1:-1;6035:180:33:o;6677:738::-;6830:6;6838;6846;6854;6907:3;6895:9;6886:7;6882:23;6878:33;6875:53;;;6924:1;6921;6914:12;6875:53;6963:9;6950:23;6982:31;7007:5;6982:31;:::i;:::-;7032:5;-1:-1:-1;7089:2:33;7074:18;;7061:32;7102:33;7061:32;7102:33;:::i;:::-;7154:7;-1:-1:-1;7213:2:33;7198:18;;7185:32;7226:33;7185:32;7226:33;:::i;:::-;7278:7;-1:-1:-1;7337:2:33;7322:18;;7309:32;7350:33;7309:32;7350:33;:::i;:::-;6677:738;;;;-1:-1:-1;6677:738:33;;-1:-1:-1;;6677:738:33:o;7872:304::-;-1:-1:-1;;;;;8102:15:33;;;8084:34;;8154:15;;8149:2;8134:18;;8127:43;8034:2;8019:18;;7872:304::o;8526:184::-;8596:6;8649:2;8637:9;8628:7;8624:23;8620:32;8617:52;;;8665:1;8662;8655:12;8617:52;-1:-1:-1;8688:16:33;;8526:184;-1:-1:-1;8526:184:33:o;11034:127::-;11095:10;11090:3;11086:20;11083:1;11076:31;11126:4;11123:1;11116:15;11150:4;11147:1;11140:15;11166:168;11206:7;11272:1;11268;11264:6;11260:14;11257:1;11254:21;11249:1;11242:9;11235:17;11231:45;11228:71;;;11279:18;;:::i;:::-;-1:-1:-1;11319:9:33;;11166:168::o;11339:217::-;11379:1;11405;11395:132;;11449:10;11444:3;11440:20;11437:1;11430:31;11484:4;11481:1;11474:15;11512:4;11509:1;11502:15;11395:132;-1:-1:-1;11541:9:33;;11339:217::o;11561:128::-;11601:3;11632:1;11628:6;11625:1;11622:13;11619:39;;;11638:18;;:::i;:::-;-1:-1:-1;11674:9:33;;11561:128::o;11694:125::-;11734:4;11762:1;11759;11756:8;11753:34;;;11767:18;;:::i;:::-;-1:-1:-1;11804:9:33;;11694:125::o;11824:238::-;11864:3;-1:-1:-1;;;;;11931:10:33;;;11961;;;11991:12;;;11983:21;;11980:47;;;12007:18;;:::i;:::-;12043:13;;11824:238;-1:-1:-1;;;;11824:238:33:o;12067:231::-;12107:4;-1:-1:-1;;;;;12205:10:33;;;;12175;;12227:12;;;12224:38;;;12242:18;;:::i;:::-;12279:13;;12067:231;-1:-1:-1;;;12067:231:33:o;12906:407::-;13108:2;13090:21;;;13147:2;13127:18;;;13120:30;13186:34;13181:2;13166:18;;13159:62;-1:-1:-1;;;13252:2:33;13237:18;;13230:41;13303:3;13288:19;;12906:407::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ONE()": "c2ee3a08",
    "_acceptOwner()": "fc4d33f9",
    "_setPendingOwner(address)": "6e96dfd7",
    "accrue(address,address)": "b9be44ac",
    "accrue(address,address,address)": "cc6bc101",
    "addMarketForRewards(address)": "b006340d",
    "addStrategyForRewards(address)": "715cad16",
    "allStrategies(uint256)": "e1e3dfeb",
    "claimRewards(address)": "ef5cfb8c",
    "compAccrued(address)": "cc7ebdc4",
    "feeRecipient()": "46904840",
    "flywheelBooster()": "ab5497d7",
    "flywheelPreBorrowerAction(address,address)": "e6e162e8",
    "flywheelPreSupplierAction(address,address)": "1c9161e0",
    "flywheelPreTransferAction(address,address,address)": "4e081c95",
    "flywheelRewards()": "f046ee5c",
    "getAllStrategies()": "c3b28864",
    "initialize(address,address,address,address)": "f8c8765e",
    "isFlywheel()": "17e6a45f",
    "isRewardsDistributor()": "abc6d72d",
    "marketState(address)": "a7a9a62c",
    "owner()": "8da5cb5b",
    "pendingOwner()": "e30c3978",
    "performanceFee()": "87788782",
    "renounceOwnership()": "715018a6",
    "rewardToken()": "f7c618c1",
    "rewardsAccrued(address)": "7fb5ad38",
    "setBooster(address)": "5a826df3",
    "setFlywheelRewards(address)": "8fb00913",
    "strategyState(address)": "dde684a5",
    "transferOwnership(address)": "f2fde38b",
    "updateFeeSettings(uint256,address)": "10509aa9",
    "userIndex(address,address)": "116139d3"
  }
}