{
  "address": "0x486e3bacedC6A1770ea7F40ac655174080ad606F",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_blocksPerYear",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_baseRateMultiplier",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_jumpMultiplierPerYear",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "kink_",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_day",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_acert",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blocksPerYear",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "baseRateMultiplier",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "kink",
          "type": "uint256"
        }
      ],
      "name": "NewInterestParams",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ANKR_CERT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseRateMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blocksPerYear",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "day",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAnkrRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseRatePerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "cash",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrows",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserves",
          "type": "uint256"
        }
      ],
      "name": "getBorrowRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "cash",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrows",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserves",
          "type": "uint256"
        }
      ],
      "name": "getBorrowRatePostKink",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMultiplierPerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "cash",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrows",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserves",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserveFactorMantissa",
          "type": "uint256"
        }
      ],
      "name": "getSupplyRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isInterestRateModel",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "jumpMultiplierPerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "kink",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "cash",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrows",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserves",
          "type": "uint256"
        }
      ],
      "name": "utilizationRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0xa3ed04d5bd4dcdcc099e0bf553bd5effa455c9742a4947e647ee4fcdad02c782",
  "receipt": {
    "to": null,
    "from": "0x82eDcFe00bd0ce1f3aB968aF09d04266Bc092e0E",
    "contractAddress": "0x486e3bacedC6A1770ea7F40ac655174080ad606F",
    "transactionIndex": 4,
    "gasUsed": "618492",
    "logsBloom": "0x
    "blockHash": "0x0002c92c000002de235609a9287d8da7c0be29b5cce39bbc159f5854a6293243",
    "transactionHash": "0xa3ed04d5bd4dcdcc099e0bf553bd5effa455c9742a4947e647ee4fcdad02c782",
    "logs": [
      {
        "transactionIndex": 4,
        "blockNumber": 53332595,
        "transactionHash": "0xa3ed04d5bd4dcdcc099e0bf553bd5effa455c9742a4947e647ee4fcdad02c782",
        "address": "0x486e3bacedC6A1770ea7F40ac655174080ad606F",
        "topics": [
          "0x865bfff1eb39dc370f97b2eb5990d963c50228429828ad935a4470166c711fc1"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000000140cd000000000000000000000000000000000000000000000000000011c37937e080000000000000000000000000000000000000000000000000000b1a2bc2ec500000",
        "logIndex": 10,
        "blockHash": "0x0002c92c000002de235609a9287d8da7c0be29b5cce39bbc159f5854a6293243"
      }
    ],
    "blockNumber": 53332595,
    "cumulativeGasUsed": "1134486",
    "status": 1,
    "byzantium": true
  },
  "args": [
    21024000,
    "5000000000000000",
    "3000000000000000000",
    "800000000000000000",
    3,
    "0xB42bF10ab9Df82f9a47B86dd76EEE4bA848d0Fa2"
  ],
  "numDeployments": 1,
  "metadata": {
    "compiler": {
      "version": "0.8.10+commit.fc410830"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_blocksPerYear",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_baseRateMultiplier",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_jumpMultiplierPerYear",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "kink_",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "_day",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "_acert",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "blocksPerYear",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "baseRateMultiplier",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "kink",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewInterestParams",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ANKR_CERT",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "baseRateMultiplier",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "blocksPerYear",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "day",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAnkrRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBaseRatePerBlock",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "cash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrows",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserves",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBorrowRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "cash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrows",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserves",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBorrowRatePostKink",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMultiplierPerBlock",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "cash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrows",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserves",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserveFactorMantissa",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSupplyRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isInterestRateModel",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "jumpMultiplierPerBlock",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "kink",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "cash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrows",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserves",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "utilizationRate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "_acert": "Address for Ankr XXX staking rate",
              "_baseRateMultiplier": "The baseRateMultiplier after hitting a specified utilization point",
              "_blocksPerYear": "The approximate number of blocks per year",
              "_day": "The day period for average apr",
              "kink_": "The utilization point at which the jump multiplier is applied"
            }
          },
          "getBorrowRate(uint256,uint256,uint256)": {
            "params": {
              "borrows": "The total amount of borrows the market has outstanding",
              "cash": "The total amount of cash the market has",
              "reserves": "The total amount of reserves the market has"
            },
            "returns": {
              "_0": "The borrow rate per block (as a percentage, and scaled by 1e18)"
            }
          },
          "getSupplyRate(uint256,uint256,uint256,uint256)": {
            "params": {
              "borrows": "The total amount of borrows the market has outstanding",
              "cash": "The total amount of cash the market has",
              "reserveFactorMantissa": "The current reserve factor the market has",
              "reserves": "The total amount of reserves the market has"
            },
            "returns": {
              "_0": "The supply rate per block (as a percentage, and scaled by 1e18)"
            }
          },
          "utilizationRate(uint256,uint256,uint256)": {
            "params": {
              "borrows": "The amount of borrows in the market",
              "cash": "The amount of cash in the market",
              "reserves": "The amount of reserves in the market (currently unused)"
            },
            "returns": {
              "_0": "The utilization rate as a mantissa between [0, 1e18]"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "baseRateMultiplier()": {
            "notice": "The base interest rate which is the y-intercept when utilization rate is 0"
          },
          "blocksPerYear()": {
            "notice": "The approximate number of blocks per year that is assumed by the interest rate model"
          },
          "constructor": {
            "notice": "Construct an interest rate model"
          },
          "getBorrowRate(uint256,uint256,uint256)": {
            "notice": "Calculates the current borrow interest rate per block"
          },
          "getSupplyRate(uint256,uint256,uint256,uint256)": {
            "notice": "Calculates the current supply interest rate per block"
          },
          "isInterestRateModel()": {
            "notice": "Indicator that this is an InterestRateModel contract (for inspection)"
          },
          "jumpMultiplierPerBlock()": {
            "notice": "The jumpMultiplierPerBlock after hitting a specified utilization point"
          },
          "kink()": {
            "notice": "The utilization point at which the jump multiplier is applied"
          },
          "utilizationRate(uint256,uint256,uint256)": {
            "notice": "Calculates the utilization rate of the market: `borrows / (cash + borrows - reserves)`"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@pythnetwork/pyth-sdk-solidity/=lib/pyth-sdk-solidity/",
        ":adrastia-core/=lib/adrastia-core/contracts/",
        ":adrastia/=lib/adrastia-core/contracts/",
        ":ds-test/=lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":flywheel-v2/=lib/flywheel-v2/src/",
        ":flywheel/=lib/flywheel-v2/src/",
        ":forge-std/=lib/forge-std/src/",
        ":fuse-flywheel/=lib/fuse-flywheel/src/",
        ":libcompound/=lib/fuse-flywheel/lib/libcompound/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":ops/=lib/ops/contracts/",
        ":pyth-neon/=lib/pyth-neon/contracts/",
        ":pyth-sdk-solidity/=lib/pyth-sdk-solidity/",
        ":solidity-bytes-utils/=lib/solidity-bytes-utils/",
        ":solmate/=lib/solmate/src/",
        ":weird-erc20/=lib/fuse-flywheel/lib/libcompound/lib/solmate/lib/weird-erc20/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/midas/irms/AnkrCertificateInterestRateModel.sol": "AnkrCertificateInterestRateModel"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/compound/InterestRateModel.sol": {
        "keccak256": "0x587a54b49d48df2cd91583eac93ddde4e2849f79d0441f179bf835e9dffe24e9",
        "urls": [
          "bzz-raw://b202a68cbe90a5ecaa547808852641d7bfe93f9b8e3f3f3f6010423c182781d2",
          "dweb:/ipfs/QmYEzQQHVXNCMmhhFrv4hak2WDfs21SXs6DSh5q5wJ25AB"
        ],
        "license": "UNLICENSED"
      },
      "contracts/compound/SafeMath.sol": {
        "keccak256": "0x9a5b4d600de35b6029d66ddbfa6bc79813b06a6e90344a5a606849ec9751b6dc",
        "urls": [
          "bzz-raw://a40949711653fc11a095c8afdeaf7cd6a185f195905bf3a03d3463f20d9ffb82",
          "dweb:/ipfs/Qma8xEPV444XFLRdbzmiHeeeqT1vVrdLAyjRH6sStYt1Gy"
        ],
        "license": "UNLICENSED"
      },
      "contracts/midas/irms/AnkrCertificateInterestRateModel.sol": {
        "keccak256": "0x5e67edd4eb206c9a7f0cbd7ae3f25de0fa98bf50a0d800c8840c5e5c256ad832",
        "urls": [
          "bzz-raw://9afdbe368109138c33db292a97acaa6399f5c8794e1e06a6339a52675a68a69f",
          "dweb:/ipfs/Qmb2WHjyvvcDm6sDWiYYhYg38TWREMeP4SAMLXmqfhb4LA"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50604051610a4a380380610a4a83398101604081905261002f916101bf565b60008260ff16118015610045575060088260ff16105b6100965760405162461bcd60e51b815260206004820152601a60248201527f5f6461792073686f756c642062652066726f6d203120746f203700000000000060448201526064015b60405180910390fd5b600186905560028590556100b58487610139602090811b61044c17901c565b60035560048390556005805460ff191660ff8416179055600080546001600160a01b0319166001600160a01b03831617905560015460025460408051928352602083019190915281018490527f865bfff1eb39dc370f97b2eb5990d963c50228429828ad935a4470166c711fc19060600160405180910390a15050505050506102a7565b600061018183836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061018860201b60201c565b9392505050565b600081836101a95760405162461bcd60e51b815260040161008d9190610230565b5060006101b68486610285565b95945050505050565b60008060008060008060c087890312156101d857600080fd5b86519550602087015194506040870151935060608701519250608087015160ff8116811461020557600080fd5b60a08801519092506001600160a01b038116811461022257600080fd5b809150509295509295509295565b600060208083528351808285015260005b8181101561025d57858101830151858201604001528201610241565b8181111561026f576000604083870101525b50601f01601f1916929092016040019392505050565b6000826102a257634e487b7160e01b600052601260045260246000fd5b500490565b610794806102b66000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806399e238651161008c578063b9f9850a11610066578063b9f9850a146101bf578063cbf408c1146101c8578063d88e7afe146101d0578063fd2da339146101e357600080fd5b806399e238651461019b578063a385fb96146101a3578063b8168816146101ac57600080fd5b806338aa3172116100c857806338aa3172146101355780636e71e2d8146101605780637b76ac91146101735780638a8dacd81461019257600080fd5b806315f24053146100ef5780631fcdf96b146101155780632191f92a1461011d575b600080fd5b6101026100fd366004610624565b6101ec565b6040519081526020015b60405180910390f35b61010261027a565b610125600181565b604051901515815260200161010c565b600054610148906001600160a01b031681565b6040516001600160a01b03909116815260200161010c565b61010261016e366004610624565b6102a1565b6005546101809060ff1681565b60405160ff909116815260200161010c565b61010260025481565b6101026102e1565b61010260015481565b6101026101ba366004610650565b6102fd565b61010260035481565b610102610364565b6101026101de366004610624565b6103f8565b61010260045481565b6000806101fa8585856102a1565b905060006102066102e1565b9050600061021261027a565b9050600061023c83610236670de0b6b3a76400006102308887610497565b9061044c565b9061051b565b9050600454841161025257935061027392505050565b600061025f8989896103f8565b905061026b818361051b565b955050505050505b9392505050565b600061029c600454610230670de0b6b3a7640000610296610364565b90610497565b905090565b6000826102b057506000610273565b6102d96102c7836102c1878761051b565b9061057a565b61023085670de0b6b3a7640000610497565b949350505050565b600061029c670de0b6b3a7640000610230600254610296610364565b600080610312670de0b6b3a76400008461057a565b905060006103218787876101ec565b9050600061033b670de0b6b3a76400006102308486610497565b9050610358670de0b6b3a7640000610230836102968c8c8c6102a1565b98975050505050505050565b60015460008054600554604051632c798f7360e01b815260ff9091166004820152919261029c929091610230916064916001600160a01b031690632c798f7390602401602060405180830381865afa1580156103c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e89190610682565b67ffffffffffffffff169061044c565b6000806104068585856102a1565b9050600061041f6004548361057a90919063ffffffff16565b9050610442670de0b6b3a76400006102306003548461049790919063ffffffff16565b9695505050505050565b600061048e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506105bc565b90505b92915050565b6000826104a657506000610491565b60006104b283856106c2565b9050826104bf85836106e1565b1461048e5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084015b60405180910390fd5b6000806105288385610703565b90508381101561048e5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610512565b600061048e83836040518060400160405280601f81526020017f536166654d6174683a207375627472616374696f6e20756e646572666c6f77008152506105f3565b600081836105dd5760405162461bcd60e51b8152600401610512919061071b565b5060006105ea84866106e1565b95945050505050565b600081848411156106175760405162461bcd60e51b8152600401610512919061071b565b5060006105ea8486610770565b60008060006060848603121561063957600080fd5b505081359360208301359350604090920135919050565b6000806000806080858703121561066657600080fd5b5050823594602084013594506040840135936060013592509050565b60006020828403121561069457600080fd5b815167ffffffffffffffff8116811461048e57600080fd5b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156106dc576106dc6106ac565b500290565b6000826106fe57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115610716576107166106ac565b500190565b600060208083528351808285015260005b818110156107485785810183015185820160400152820161072c565b8181111561075a576000604083870101525b50601f01601f1916929092016040019392505050565b600082821015610782576107826106ac565b50039056fea164736f6c634300080a000a",
    "sourceMap": "297:4126:25:-:0;;;1475:520;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1664:1;1657:4;:8;;;:20;;;;;1676:1;1669:4;:8;;;1657:20;1649:59;;;;-1:-1:-1;;;1649:59:25;;916:2:54;1649:59:25;;;898:21:54;955:2;935:18;;;928:30;994:28;974:18;;;967:56;1040:18;;1649:59:25;;;;;;;;;1714:13;:30;;;1750:18;:40;;;1821:41;:22;1714:30;1821:26;;;;;;;:41;;:::i;:::-;1796:22;:66;1868:4;:12;;;1886:3;:10;;-1:-1:-1;;1886:10:25;;;;;;;-1:-1:-1;1902:18:25;;-1:-1:-1;;;;;;1902:18:25;-1:-1:-1;;;;;1902:18:25;;;;;-1:-1:-1;1950:13:25;1965:18;;1932:58;;;1271:25:54;;;1327:2;1312:18;;1305:34;;;;1355:18;;1348:34;;;1932:58:25;;1259:2:54;1244:18;1932:58:25;;;;;;;1475:520;;;;;;297:4126;;4094:124:14;4152:7;4174:39;4178:1;4181;4174:39;;;;;;;;;;;;;;;;;:3;;;:39;;:::i;:::-;4167:46;4094:124;-1:-1:-1;;;4094:124:14:o;4669:332::-;4771:7;4863:12;4856:5;4848:28;;;;-1:-1:-1;;;4848:28:14;;;;;;;;:::i;:::-;-1:-1:-1;4882:9:14;4894:5;4898:1;4894;:5;:::i;:::-;4882:17;4669:332;-1:-1:-1;;;;;4669:332:14:o;14:695:54:-;127:6;135;143;151;159;167;220:3;208:9;199:7;195:23;191:33;188:53;;;237:1;234;227:12;188:53;266:9;260:16;250:26;;316:2;305:9;301:18;295:25;285:35;;360:2;349:9;345:18;339:25;329:35;;404:2;393:9;389:18;383:25;373:35;;451:3;440:9;436:19;430:26;496:4;489:5;485:16;478:5;475:27;465:55;;516:1;513;506:12;465:55;589:3;574:19;;568:26;539:5;;-1:-1:-1;;;;;;625:33:54;;613:46;;603:74;;673:1;670;663:12;603:74;696:7;686:17;;;14:695;;;;;;;;:::o;1393:597::-;1505:4;1534:2;1563;1552:9;1545:21;1595:6;1589:13;1638:6;1633:2;1622:9;1618:18;1611:34;1663:1;1673:140;1687:6;1684:1;1681:13;1673:140;;;1782:14;;;1778:23;;1772:30;1748:17;;;1767:2;1744:26;1737:66;1702:10;;1673:140;;;1831:6;1828:1;1825:13;1822:91;;;1901:1;1896:2;1887:6;1876:9;1872:22;1868:31;1861:42;1822:91;-1:-1:-1;1974:2:54;1953:15;-1:-1:-1;;1949:29:54;1934:45;;;;1981:2;1930:54;;1393:597;-1:-1:-1;;;1393:597:54:o;1995:217::-;2035:1;2061;2051:132;;2105:10;2100:3;2096:20;2093:1;2086:31;2140:4;2137:1;2130:15;2168:4;2165:1;2158:15;2051:132;-1:-1:-1;2197:9:54;;1995:217::o;:::-;297:4126:25;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c806399e238651161008c578063b9f9850a11610066578063b9f9850a146101bf578063cbf408c1146101c8578063d88e7afe146101d0578063fd2da339146101e357600080fd5b806399e238651461019b578063a385fb96146101a3578063b8168816146101ac57600080fd5b806338aa3172116100c857806338aa3172146101355780636e71e2d8146101605780637b76ac91146101735780638a8dacd81461019257600080fd5b806315f24053146100ef5780631fcdf96b146101155780632191f92a1461011d575b600080fd5b6101026100fd366004610624565b6101ec565b6040519081526020015b60405180910390f35b61010261027a565b610125600181565b604051901515815260200161010c565b600054610148906001600160a01b031681565b6040516001600160a01b03909116815260200161010c565b61010261016e366004610624565b6102a1565b6005546101809060ff1681565b60405160ff909116815260200161010c565b61010260025481565b6101026102e1565b61010260015481565b6101026101ba366004610650565b6102fd565b61010260035481565b610102610364565b6101026101de366004610624565b6103f8565b61010260045481565b6000806101fa8585856102a1565b905060006102066102e1565b9050600061021261027a565b9050600061023c83610236670de0b6b3a76400006102308887610497565b9061044c565b9061051b565b9050600454841161025257935061027392505050565b600061025f8989896103f8565b905061026b818361051b565b955050505050505b9392505050565b600061029c600454610230670de0b6b3a7640000610296610364565b90610497565b905090565b6000826102b057506000610273565b6102d96102c7836102c1878761051b565b9061057a565b61023085670de0b6b3a7640000610497565b949350505050565b600061029c670de0b6b3a7640000610230600254610296610364565b600080610312670de0b6b3a76400008461057a565b905060006103218787876101ec565b9050600061033b670de0b6b3a76400006102308486610497565b9050610358670de0b6b3a7640000610230836102968c8c8c6102a1565b98975050505050505050565b60015460008054600554604051632c798f7360e01b815260ff9091166004820152919261029c929091610230916064916001600160a01b031690632c798f7390602401602060405180830381865afa1580156103c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e89190610682565b67ffffffffffffffff169061044c565b6000806104068585856102a1565b9050600061041f6004548361057a90919063ffffffff16565b9050610442670de0b6b3a76400006102306003548461049790919063ffffffff16565b9695505050505050565b600061048e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506105bc565b90505b92915050565b6000826104a657506000610491565b60006104b283856106c2565b9050826104bf85836106e1565b1461048e5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084015b60405180910390fd5b6000806105288385610703565b90508381101561048e5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610512565b600061048e83836040518060400160405280601f81526020017f536166654d6174683a207375627472616374696f6e20756e646572666c6f77008152506105f3565b600081836105dd5760405162461bcd60e51b8152600401610512919061071b565b5060006105ea84866106e1565b95945050505050565b600081848411156106175760405162461bcd60e51b8152600401610512919061071b565b5060006105ea8486610770565b60008060006060848603121561063957600080fd5b505081359360208301359350604090920135919050565b6000806000806080858703121561066657600080fd5b5050823594602084013594506040840135936060013592509050565b60006020828403121561069457600080fd5b815167ffffffffffffffff8116811461048e57600080fd5b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156106dc576106dc6106ac565b500290565b6000826106fe57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115610716576107166106ac565b500190565b600060208083528351808285015260005b818110156107485785810183015185820160400152820161072c565b8181111561075a576000604083870101525b50601f01601f1916929092016040019392505050565b600082821015610782576107826106ac565b50039056fea164736f6c634300080a000a",
    "sourceMap": "297:4126:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3361:593;;;;;;:::i;:::-;;:::i;:::-;;;481:25:54;;;469:2;454:18;3361:593:25;;;;;;;;2815:114;;;:::i;266:47:11:-;;309:4;266:47;;;;;682:14:54;;675:22;657:41;;645:2;630:18;266:47:11;517:187:54;488:24:25;;;;;-1:-1:-1;;;;;488:24:25;;;;;;-1:-1:-1;;;;;873:32:54;;;855:51;;843:2;828:18;488:24:25;709:203:54;2360:294:25;;;;;;:::i;:::-;;:::i;1047:16::-;;;;;;;;;;;;1089:4:54;1077:17;;;1059:36;;1047:2;1032:18;1047:16:25;917:184:54;760:33:25;;;;;;2933:126;;;:::i;627:28::-;;;;;;3958:463;;;;;;:::i;:::-;;:::i;894:37::-;;;;;;2658:153;;;:::i;3063:294::-;;;;;;:::i;:::-;;:::i;1023:19::-;;;;;;3361:593;3479:7;3494:12;3509:40;3525:4;3531:7;3540:8;3509:15;:40::i;:::-;3494:55;;3555:24;3582:21;:19;:21::i;:::-;3555:48;;3609:26;3638:23;:21;:23::i;:::-;3609:52;-1:-1:-1;3667:18:25;3688:60;3731:16;3688:38;3721:4;3688:28;:4;3609:52;3688:8;:28::i;:::-;:32;;:38::i;:::-;:42;;:60::i;:::-;3667:81;;3767:4;;3759;:12;3755:195;;3788:10;-1:-1:-1;3781:17:25;;-1:-1:-1;;;3781:17:25;3755:195;3819:26;3848:46;3870:4;3876:7;3885:8;3848:21;:46::i;:::-;3819:75;-1:-1:-1;3909:34:25;3819:75;3932:10;3909:22;:34::i;:::-;3902:41;;;;;;;3361:593;;;;;;:::o;2815:114::-;2869:7;2891:33;2919:4;;2891:23;2909:4;2891:13;:11;:13::i;:::-;:17;;:23::i;:33::-;2884:40;;2815:114;:::o;2360:294::-;2471:7;2545:12;2541:41;;-1:-1:-1;2574:1:25;2567:8;;2541:41;2595:54;2617:31;2639:8;2617:17;:4;2626:7;2617:8;:17::i;:::-;:21;;:31::i;:::-;2595:17;:7;2607:4;2595:11;:17::i;:54::-;2588:61;2360:294;-1:-1:-1;;;;2360:294:25:o;2933:126::-;2985:7;3007:47;3049:4;3007:37;3025:18;;3007:13;:11;:13::i;3958:463::-;4111:7;;4158:40;4166:4;4176:21;4158:17;:40::i;:::-;4126:72;;4204:18;4225:38;4239:4;4245:7;4254:8;4225:13;:38::i;:::-;4204:59;-1:-1:-1;4269:18:25;4290:47;4332:4;4290:37;4204:59;4305:21;4290:14;:37::i;:47::-;4269:68;;4350:66;4411:4;4350:56;4395:10;4350:40;4366:4;4372:7;4381:8;4350:15;:40::i;:66::-;4343:73;3958:463;-1:-1:-1;;;;;;;;3958:463:25:o;2658:153::-;2792:13;;2702:7;2746:9;;2773:3;;2732:45;;-1:-1:-1;;;2732:45:25;;2773:3;;;;2732:45;;;1059:36:54;2702:7:25;;2724:82;;2792:13;;2724:63;;2783:3;;-1:-1:-1;;;;;2746:9:25;;2732:40;;1032:18:54;;2732:45:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2724:54;;;:58;:63::i;3063:294::-;3180:7;3195:12;3210:40;3226:4;3232:7;3241:8;3210:15;:40::i;:::-;3195:55;;3256:18;3277:14;3286:4;;3277;:8;;:14;;;;:::i;:::-;3256:35;;3304:48;3347:4;3304:38;3319:22;;3304:10;:14;;:38;;;;:::i;:48::-;3297:55;3063:294;-1:-1:-1;;;;;;3063:294:25:o;4094:124:14:-;4152:7;4174:39;4178:1;4181;4174:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;4167:46;;4094:124;;;;;:::o;2589:419::-;2647:7;2872:6;2868:35;;-1:-1:-1;2895:1:14;2888:8;;2868:35;2909:9;2921:5;2925:1;2921;:5;:::i;:::-;2909:17;-1:-1:-1;2949:1:14;2940:5;2944:1;2909:17;2940:5;:::i;:::-;:10;2932:56;;;;-1:-1:-1;;;2932:56:14;;2709:2:54;2932:56:14;;;2691:21:54;2748:2;2728:18;;;2721:30;2787:34;2767:18;;;2760:62;-1:-1:-1;;;2838:18:54;;;2831:31;2879:19;;2932:56:14;;;;;;;;980:162;1038:7;;1065:5;1069:1;1065;:5;:::i;:::-;1053:17;;1089:1;1084;:6;;1076:46;;;;-1:-1:-1;;;1076:46:14;;3244:2:54;1076:46:14;;;3226:21:54;3283:2;3263:18;;;3256:30;3322:29;3302:18;;;3295:57;3369:18;;1076:46:14;3042:351:54;1795:129:14;1853:7;1875:44;1879:1;1882;1875:44;;;;;;;;;;;;;;;;;:3;:44::i;4669:332::-;4771:7;4863:12;4856:5;4848:28;;;;-1:-1:-1;;;4848:28:14;;;;;;;;:::i;:::-;-1:-1:-1;4882:9:14;4894:5;4898:1;4894;:5;:::i;:::-;4882:17;4669:332;-1:-1:-1;;;;;4669:332:14:o;2185:189::-;2287:7;2318:12;2310:6;;;;2302:29;;;;-1:-1:-1;;;2302:29:14;;;;;;;;:::i;:::-;-1:-1:-1;2337:9:14;2349:5;2353:1;2349;:5;:::i;14:316:54:-;91:6;99;107;160:2;148:9;139:7;135:23;131:32;128:52;;;176:1;173;166:12;128:52;-1:-1:-1;;199:23:54;;;269:2;254:18;;241:32;;-1:-1:-1;320:2:54;305:18;;;292:32;;14:316;-1:-1:-1;14:316:54:o;1106:385::-;1192:6;1200;1208;1216;1269:3;1257:9;1248:7;1244:23;1240:33;1237:53;;;1286:1;1283;1276:12;1237:53;-1:-1:-1;;1309:23:54;;;1379:2;1364:18;;1351:32;;-1:-1:-1;1430:2:54;1415:18;;1402:32;;1481:2;1466:18;1453:32;;-1:-1:-1;1106:385:54;-1:-1:-1;1106:385:54:o;1687:288::-;1756:6;1809:2;1797:9;1788:7;1784:23;1780:32;1777:52;;;1825:1;1822;1815:12;1777:52;1857:9;1851:16;1907:18;1900:5;1896:30;1889:5;1886:41;1876:69;;1941:1;1938;1931:12;1980:127;2041:10;2036:3;2032:20;2029:1;2022:31;2072:4;2069:1;2062:15;2096:4;2093:1;2086:15;2112:168;2152:7;2218:1;2214;2210:6;2206:14;2203:1;2200:21;2195:1;2188:9;2181:17;2177:45;2174:71;;;2225:18;;:::i;:::-;-1:-1:-1;2265:9:54;;2112:168::o;2285:217::-;2325:1;2351;2341:132;;2395:10;2390:3;2386:20;2383:1;2376:31;2430:4;2427:1;2420:15;2458:4;2455:1;2448:15;2341:132;-1:-1:-1;2487:9:54;;2285:217::o;2909:128::-;2949:3;2980:1;2976:6;2973:1;2970:13;2967:39;;;2986:18;;:::i;:::-;-1:-1:-1;3022:9:54;;2909:128::o;3398:597::-;3510:4;3539:2;3568;3557:9;3550:21;3600:6;3594:13;3643:6;3638:2;3627:9;3623:18;3616:34;3668:1;3678:140;3692:6;3689:1;3686:13;3678:140;;;3787:14;;;3783:23;;3777:30;3753:17;;;3772:2;3749:26;3742:66;3707:10;;3678:140;;;3836:6;3833:1;3830:13;3827:91;;;3906:1;3901:2;3892:6;3881:9;3877:22;3873:31;3866:42;3827:91;-1:-1:-1;3979:2:54;3958:15;-1:-1:-1;;3954:29:54;3939:45;;;;3986:2;3935:54;;3398:597;-1:-1:-1;;;3398:597:54:o;4000:125::-;4040:4;4068:1;4065;4062:8;4059:34;;;4073:18;;:::i;:::-;-1:-1:-1;4110:9:54;;4000:125::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ANKR_CERT()": "38aa3172",
    "baseRateMultiplier()": "8a8dacd8",
    "blocksPerYear()": "a385fb96",
    "day()": "7b76ac91",
    "getAnkrRate()": "cbf408c1",
    "getBaseRatePerBlock()": "99e23865",
    "getBorrowRate(uint256,uint256,uint256)": "15f24053",
    "getBorrowRatePostKink(uint256,uint256,uint256)": "d88e7afe",
    "getMultiplierPerBlock()": "1fcdf96b",
    "getSupplyRate(uint256,uint256,uint256,uint256)": "b8168816",
    "isInterestRateModel()": "2191f92a",
    "jumpMultiplierPerBlock()": "b9f9850a",
    "kink()": "fd2da339",
    "utilizationRate(uint256,uint256,uint256)": "6e71e2d8"
  }
}